{
    "metadata": {
        "lookup": [
            {
                "id": "0",
                "type": {
                    "path": [
                        "sp_core",
                        "crypto",
                        "AccountId32"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "1",
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "1",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 32,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "2",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U8"
                    },
                    "docs": []
                }
            },
            {
                "id": "3",
                "type": {
                    "path": [
                        "frame_system",
                        "AccountInfo"
                    ],
                    "params": [
                        {
                            "name": "Index",
                            "type": "4"
                        },
                        {
                            "name": "AccountData",
                            "type": "5"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "nonce",
                                    "type": "4",
                                    "typeName": "Index",
                                    "docs": []
                                },
                                {
                                    "name": "consumers",
                                    "type": "4",
                                    "typeName": "RefCount",
                                    "docs": []
                                },
                                {
                                    "name": "providers",
                                    "type": "4",
                                    "typeName": "RefCount",
                                    "docs": []
                                },
                                {
                                    "name": "sufficients",
                                    "type": "4",
                                    "typeName": "RefCount",
                                    "docs": []
                                },
                                {
                                    "name": "data",
                                    "type": "5",
                                    "typeName": "AccountData",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "4",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U32"
                    },
                    "docs": []
                }
            },
            {
                "id": "5",
                "type": {
                    "path": [
                        "pallet_balances",
                        "AccountData"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": "6"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "free",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "reserved",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "misc_frozen",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "fee_frozen",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "6",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U128"
                    },
                    "docs": []
                }
            },
            {
                "id": "7",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "PerDispatchClass"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "8"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "normal",
                                    "type": "8",
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "operational",
                                    "type": "8",
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "mandatory",
                                    "type": "8",
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "8",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U64"
                    },
                    "docs": []
                }
            },
            {
                "id": "9",
                "type": {
                    "path": [
                        "primitive_types",
                        "H256"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "1",
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "10",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "11",
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "Digest"
                    ],
                    "params": [
                        {
                            "name": "Hash",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "logs",
                                    "type": "12",
                                    "typeName": "Vec<DigestItem<Hash>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "12",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "13"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "13",
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "DigestItem"
                    ],
                    "params": [
                        {
                            "name": "Hash",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ChangesTrieRoot",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "PreRuntime",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "14",
                                            "typeName": "ConsensusEngineId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Consensus",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "14",
                                            "typeName": "ConsensusEngineId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Seal",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "14",
                                            "typeName": "ConsensusEngineId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "ChangesTrieSignal",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "15",
                                            "typeName": "ChangesTrieSignal",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Other",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "RuntimeEnvironmentUpdated",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "14",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 4,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "15",
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "digest",
                        "ChangesTrieSignal"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewConfiguration",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "16",
                                            "typeName": "Option<ChangesTrieConfiguration>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "16",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "17"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "17",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "17",
                "type": {
                    "path": [
                        "sp_core",
                        "changes_trie",
                        "ChangesTrieConfiguration"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "digest_interval",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "digest_levels",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "18",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "19"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "19",
                "type": {
                    "path": [
                        "frame_system",
                        "EventRecord"
                    ],
                    "params": [
                        {
                            "name": "E",
                            "type": "20"
                        },
                        {
                            "name": "T",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "phase",
                                    "type": "119",
                                    "typeName": "Phase",
                                    "docs": []
                                },
                                {
                                    "name": "event",
                                    "type": "20",
                                    "typeName": "E",
                                    "docs": []
                                },
                                {
                                    "name": "topics",
                                    "type": "120",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "20",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "System",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "21",
                                            "typeName": "frame_system::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Indices",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "28",
                                            "typeName": "pallet_indices::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Balances",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "29",
                                            "typeName": "pallet_balances::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Offences",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "31",
                                            "typeName": "pallet_offences::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Session",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "33",
                                            "typeName": "pallet_session::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Grandpa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "34",
                                            "typeName": "pallet_grandpa::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "ImOnline",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "39",
                                            "typeName": "pallet_im_online::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ParaInclusion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "45",
                                            "typeName": "parachains_inclusion::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "Paras",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "57",
                                            "typeName": "parachains_paras::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Ump",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "58",
                                            "typeName": "parachains_ump::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "Hrmp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "61",
                                            "typeName": "parachains_hrmp::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "ParasDisputes",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "63",
                                            "typeName": "parachains_disputes::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "Registrar",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "67",
                                            "typeName": "paras_registrar::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Auctions",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "68",
                                            "typeName": "auctions::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": []
                                },
                                {
                                    "name": "Crowdloan",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "69",
                                            "typeName": "crowdloan::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Slots",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "71",
                                            "typeName": "slots::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "Sudo",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "72",
                                            "typeName": "pallet_sudo::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": []
                                },
                                {
                                    "name": "ValidatorManager",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "73",
                                            "typeName": "validator_manager::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "Collective",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "75",
                                            "typeName": "pallet_collective::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 80,
                                    "docs": []
                                },
                                {
                                    "name": "Membership",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "77",
                                            "typeName": "pallet_membership::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 81,
                                    "docs": []
                                },
                                {
                                    "name": "Utility",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "78",
                                            "typeName": "pallet_utility::Event",
                                            "docs": []
                                        }
                                    ],
                                    "index": 90,
                                    "docs": []
                                },
                                {
                                    "name": "Proxy",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "79",
                                            "typeName": "pallet_proxy::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 91,
                                    "docs": []
                                },
                                {
                                    "name": "XcmPallet",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "82",
                                            "typeName": "pallet_xcm::Event<Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "21",
                "type": {
                    "path": [
                        "frame_system",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ExtrinsicSuccess",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "22",
                                            "typeName": "DispatchInfo",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "An extrinsic completed successfully. \\[info\\]"
                                    ]
                                },
                                {
                                    "name": "ExtrinsicFailed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "25",
                                            "typeName": "DispatchError",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "22",
                                            "typeName": "DispatchInfo",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An extrinsic failed. \\[error, info\\]"
                                    ]
                                },
                                {
                                    "name": "CodeUpdated",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "`:code` was updated."
                                    ]
                                },
                                {
                                    "name": "NewAccount",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A new \\[account\\] was created."
                                    ]
                                },
                                {
                                    "name": "KilledAccount",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "An \\[account\\] was reaped."
                                    ]
                                },
                                {
                                    "name": "Remarked",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "On on-chain remark happened. \\[origin, remark_hash\\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Event for the System pallet."
                    ]
                }
            },
            {
                "id": "22",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "DispatchInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "weight",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "class",
                                    "type": "23",
                                    "typeName": "DispatchClass",
                                    "docs": []
                                },
                                {
                                    "name": "pays_fee",
                                    "type": "24",
                                    "typeName": "Pays",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "23",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "DispatchClass"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Normal",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Operational",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Mandatory",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "24",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "Pays"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Yes",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "No",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "25",
                "type": {
                    "path": [
                        "sp_runtime",
                        "DispatchError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Other",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "CannotLookup",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "BadOrigin",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Module",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": "error",
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "ConsumerRemaining",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "NoProviders",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Token",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "26",
                                            "typeName": "TokenError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Arithmetic",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "27",
                                            "typeName": "ArithmeticError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "26",
                "type": {
                    "path": [
                        "sp_runtime",
                        "TokenError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NoFunds",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "WouldDie",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "BelowMinimum",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "CannotCreate",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "UnknownAsset",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Frozen",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Unsupported",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "27",
                "type": {
                    "path": [
                        "sp_runtime",
                        "ArithmeticError"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Underflow",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Overflow",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DivisionByZero",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "28",
                "type": {
                    "path": [
                        "pallet_indices",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "IndexAssigned",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A account index was assigned. \\[index, who\\]"
                                    ]
                                },
                                {
                                    "name": "IndexFreed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A account index has been freed up (unassigned). \\[index\\]"
                                    ]
                                },
                                {
                                    "name": "IndexFrozen",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A account index has been frozen to its current account ID. \\[index, who\\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "29",
                "type": {
                    "path": [
                        "pallet_balances",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Endowed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "An account was created with some free balance. \\[account, free_balance\\]"
                                    ]
                                },
                                {
                                    "name": "DustLost",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                                        "resulting in an outright loss. \\[account, balance\\]"
                                    ]
                                },
                                {
                                    "name": "Transfer",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Transfer succeeded. \\[from, to, value\\]"
                                    ]
                                },
                                {
                                    "name": "BalanceSet",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A balance was set by root. \\[who, free, reserved\\]"
                                    ]
                                },
                                {
                                    "name": "Deposit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Some amount was deposited (e.g. for transaction fees). \\[who, deposit\\]"
                                    ]
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Some balance was reserved (moved from free to reserved). \\[who, value\\]"
                                    ]
                                },
                                {
                                    "name": "Unreserved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Some balance was unreserved (moved from reserved to free). \\[who, value\\]"
                                    ]
                                },
                                {
                                    "name": "ReserveRepatriated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "30",
                                            "typeName": "Status",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Some balance was moved from the reserve of the first account to the second account.",
                                        "Final argument indicates the destination balance type.",
                                        "\\[from, to, balance, destination_status\\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "30",
                "type": {
                    "path": [
                        "frame_support",
                        "traits",
                        "tokens",
                        "misc",
                        "BalanceStatus"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Free",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "31",
                "type": {
                    "path": [
                        "pallet_offences",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Offence",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "32",
                                            "typeName": "Kind",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "OpaqueTimeSlot",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "There is an offence reported of the given `kind` happened at the `session_index` and",
                                        "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                                        "\\[kind, timeslot\\]."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Events type."
                    ]
                }
            },
            {
                "id": "32",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 16,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "33",
                "type": {
                    "path": [
                        "pallet_session",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewSession",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New session has happened. Note that the argument is the \\[session_index\\], not the",
                                        "block number as the type might suggest."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Events for this module.",
                        ""
                    ]
                }
            },
            {
                "id": "34",
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewAuthorities",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "35",
                                            "typeName": "AuthorityList",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New authority set has been applied. \\[authority_set\\]"
                                    ]
                                },
                                {
                                    "name": "Paused",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Current authority set has been paused."
                                    ]
                                },
                                {
                                    "name": "Resumed",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Current authority set has been resumed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "35",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "36"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "36",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "37",
                            "8"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "37",
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "38",
                                    "typeName": "ed25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "38",
                "type": {
                    "path": [
                        "sp_core",
                        "ed25519",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "1",
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "39",
                "type": {
                    "path": [
                        "pallet_im_online",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "HeartbeatReceived",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "40",
                                            "typeName": "T::AuthorityId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new heartbeat was received from `AuthorityId` \\[authority_id\\]"
                                    ]
                                },
                                {
                                    "name": "AllGood",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "At the end of the session, no offence was committed."
                                    ]
                                },
                                {
                                    "name": "SomeOffline",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "42",
                                            "typeName": "Vec<IdentificationTuple<T>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "At the end of the session, at least one validator was found to be \\[offline\\]."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "40",
                "type": {
                    "path": [
                        "pallet_im_online",
                        "sr25519",
                        "app_sr25519",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "41",
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "41",
                "type": {
                    "path": [
                        "sp_core",
                        "sr25519",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "1",
                                    "typeName": "[u8; 32]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "42",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "43"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "43",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "0",
                            "44"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "44",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": []
                    },
                    "docs": []
                }
            },
            {
                "id": "45",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "CandidateBacked",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "46",
                                            "typeName": "CandidateReceipt<T::Hash>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "55",
                                            "typeName": "CoreIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "56",
                                            "typeName": "GroupIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A candidate was backed. `[candidate, head_data]`"
                                    ]
                                },
                                {
                                    "name": "CandidateIncluded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "46",
                                            "typeName": "CandidateReceipt<T::Hash>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "55",
                                            "typeName": "CoreIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "56",
                                            "typeName": "GroupIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A candidate was included. `[candidate, head_data]`"
                                    ]
                                },
                                {
                                    "name": "CandidateTimedOut",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "46",
                                            "typeName": "CandidateReceipt<T::Hash>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "55",
                                            "typeName": "CoreIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A candidate timed out. `[candidate, head_data]`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "46",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "CandidateReceipt"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "descriptor",
                                    "type": "47",
                                    "typeName": "CandidateDescriptor<H>",
                                    "docs": []
                                },
                                {
                                    "name": "commitments_hash",
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "47",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "CandidateDescriptor"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "para_id",
                                    "type": "48",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "relay_parent",
                                    "type": "9",
                                    "typeName": "H",
                                    "docs": []
                                },
                                {
                                    "name": "collator",
                                    "type": "49",
                                    "typeName": "CollatorId",
                                    "docs": []
                                },
                                {
                                    "name": "persisted_validation_data_hash",
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "pov_hash",
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "erasure_root",
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "signature",
                                    "type": "50",
                                    "typeName": "CollatorSignature",
                                    "docs": []
                                },
                                {
                                    "name": "para_head",
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "validation_code_hash",
                                    "type": "53",
                                    "typeName": "ValidationCodeHash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "48",
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "Id"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "49",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v0",
                        "collator_app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "41",
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "50",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v0",
                        "collator_app",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "51",
                                    "typeName": "sr25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "51",
                "type": {
                    "path": [
                        "sp_core",
                        "sr25519",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "52",
                                    "typeName": "[u8; 64]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "52",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 64,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "53",
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "ValidationCodeHash"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "54",
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "HeadData"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "10",
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "55",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "CoreIndex"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "56",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "GroupIndex"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "57",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "CurrentCodeUpdated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Current code has been updated for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "CurrentHeadUpdated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Current head has been updated for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "CodeUpgradeScheduled",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A code upgrade has been scheduled for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "NewHeadNoted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A new head has been noted for a Para. `para_id`"
                                    ]
                                },
                                {
                                    "name": "ActionQueued",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A para has been queued to execute pending actions. `para_id`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "58",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "ump",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidFormat",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "MessageId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Upward message is invalid XCM.",
                                        "\\[ id \\]"
                                    ]
                                },
                                {
                                    "name": "UnsupportedVersion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "MessageId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Upward message is unsupported version of XCM.",
                                        "\\[ id \\]"
                                    ]
                                },
                                {
                                    "name": "ExecutedUpward",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "MessageId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "59",
                                            "typeName": "Outcome",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Upward message executed with the given outcome.",
                                        "\\[ id, outcome \\]"
                                    ]
                                },
                                {
                                    "name": "WeightExhausted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "MessageId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "The weight limit for handling downward messages was reached.",
                                        "\\[ id, remaining, required \\]"
                                    ]
                                },
                                {
                                    "name": "UpwardMessagesReceived",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Some downward messages have been received and will be processed.",
                                        "\\[ para, count, size \\]"
                                    ]
                                },
                                {
                                    "name": "OverweightEnqueued",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "MessageId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "OverweightIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "The weight budget was exceeded for an individual downward message.",
                                        "",
                                        "This message can be later dispatched manually using `service_overweight` dispatchable",
                                        "using the assigned `overweight_index`.",
                                        "",
                                        "\\[ para, id, overweight_index, required \\]"
                                    ]
                                },
                                {
                                    "name": "OverweightServiced",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "OverweightIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Downward message from the overweight queue was executed with the given actual weight",
                                        "used.",
                                        "",
                                        "\\[ overweight_index, used \\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "59",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "traits",
                        "Outcome"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Complete",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Incomplete",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "60",
                                            "typeName": "Error",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Error",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "60",
                                            "typeName": "Error",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "60",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "traits",
                        "Error"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Undefined",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Overflow",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Unimplemented",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "UnhandledXcmVersion",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "UnhandledXcmMessage",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "UnhandledEffect",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "EscalationOfPrivilege",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "UntrustedReserveLocation",
                                    "fields": [],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "UntrustedTeleportLocation",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "DestinationBufferOverflow",
                                    "fields": [],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "MultiLocationFull",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "MultiLocationNotInvertible",
                                    "fields": [],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "FailedToDecode",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "BadOrigin",
                                    "fields": [],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "ExceedsMaxMessageSize",
                                    "fields": [],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "FailedToTransactAsset",
                                    "fields": [],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "WeightLimitReached",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "Wildcard",
                                    "fields": [],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "TooMuchWeightRequired",
                                    "fields": [],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "NotHoldingFees",
                                    "fields": [],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "WeightNotComputable",
                                    "fields": [],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "Barrier",
                                    "fields": [],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "NotWithdrawable",
                                    "fields": [],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "LocationCannotHold",
                                    "fields": [],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "TooExpensive",
                                    "fields": [],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "AssetNotFound",
                                    "fields": [],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "DestinationUnsupported",
                                    "fields": [],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "RecursionLimitReached",
                                    "fields": [],
                                    "index": 27,
                                    "docs": []
                                },
                                {
                                    "name": "Transport",
                                    "fields": [],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Unroutable",
                                    "fields": [],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "UnknownWeightRequired",
                                    "fields": [],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Trap",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": []
                                },
                                {
                                    "name": "UnknownClaim",
                                    "fields": [],
                                    "index": 32,
                                    "docs": []
                                },
                                {
                                    "name": "InvalidLocation",
                                    "fields": [],
                                    "index": 33,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "61",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "OpenChannelRequested",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Open HRMP channel requested.",
                                        "`[sender, recipient, proposed_max_capacity, proposed_max_message_size]`"
                                    ]
                                },
                                {
                                    "name": "OpenChannelCanceled",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "62",
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An HRMP channel request sent by the receiver was canceled by either party.",
                                        "`[by_parachain, channel_id]`"
                                    ]
                                },
                                {
                                    "name": "OpenChannelAccepted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Open HRMP channel accepted. `[sender, recipient]`"
                                    ]
                                },
                                {
                                    "name": "ChannelClosed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "62",
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "HRMP channel closed. `[by_parachain, channel_id]`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "62",
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "HrmpChannelId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "sender",
                                    "type": "48",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "recipient",
                                    "type": "48",
                                    "typeName": "Id",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "63",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "DisputeInitiated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "64",
                                            "typeName": "CandidateHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "65",
                                            "typeName": "DisputeLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A dispute has been initiated. \\[candidate hash, dispute location\\]"
                                    ]
                                },
                                {
                                    "name": "DisputeConcluded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "64",
                                            "typeName": "CandidateHash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "66",
                                            "typeName": "DisputeResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A dispute has concluded for or against a candidate.",
                                        "`\\[para id, candidate hash, dispute result\\]`"
                                    ]
                                },
                                {
                                    "name": "DisputeTimedOut",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "64",
                                            "typeName": "CandidateHash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A dispute has timed out due to insufficient participation.",
                                        "`\\[para id, candidate hash\\]`"
                                    ]
                                },
                                {
                                    "name": "Revert",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A dispute has concluded with supermajority against a candidate.",
                                        "Block authors should no longer build on top of this head and should",
                                        "instead revert to the block at the given height which is the last",
                                        "known valid block in this chain."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "64",
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "CandidateHash"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "65",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "DisputeLocation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Local",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Remote",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "66",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "DisputeResult"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Valid",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Invalid",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "67",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Registered",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Deregistered",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "68",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "AuctionStarted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "An auction started. Provides its index and the block number where it will begin to",
                                        "close and the first lease period of the quadruplet that is auctioned.",
                                        "`[auction_index, lease_period, ending]`"
                                    ]
                                },
                                {
                                    "name": "AuctionClosed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "An auction ended. All funds become unreserved. `[auction_index]`"
                                    ]
                                },
                                {
                                    "name": "Reserved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Funds were reserved for a winning bid. First balance is the extra amount reserved.",
                                        "Second is the total. `[bidder, extra_reserved, total_amount]`"
                                    ]
                                },
                                {
                                    "name": "Unreserved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Funds were unreserved since bidder is no longer active. `[bidder, amount]`"
                                    ]
                                },
                                {
                                    "name": "ReserveConfiscated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Someone attempted to lease the same slot twice for a parachain. The amount is held in reserve",
                                        "but no parachain slot has been leased.",
                                        "`[parachain_id, leaser, amount]`"
                                    ]
                                },
                                {
                                    "name": "BidAccepted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A new bid has been accepted as the current winner.",
                                        "`[who, para_id, amount, first_slot, last_slot]`"
                                    ]
                                },
                                {
                                    "name": "WinningOffset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The winning offset was chosen for an auction. This will map into the `Winning` storage map.",
                                        "`[auction_index, block_number]`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "69",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Created",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Create a new crowdloaning campaign. `[fund_index]`"
                                    ]
                                },
                                {
                                    "name": "Contributed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Contributed to a crowd sale. `[who, fund_index, amount]`"
                                    ]
                                },
                                {
                                    "name": "Withdrew",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Withdrew full balance of a contributor. `[who, fund_index, amount]`"
                                    ]
                                },
                                {
                                    "name": "PartiallyRefunded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "The loans in a fund have been partially dissolved, i.e. there are some left",
                                        "over child keys that still need to be killed. `[fund_index]`"
                                    ]
                                },
                                {
                                    "name": "AllRefunded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "All loans in a fund have been refunded. `[fund_index]`"
                                    ]
                                },
                                {
                                    "name": "Dissolved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Fund is dissolved. `[fund_index]`"
                                    ]
                                },
                                {
                                    "name": "HandleBidResult",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "70",
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "The result of trying to submit a new bid to the Slots pallet."
                                    ]
                                },
                                {
                                    "name": "Edited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "The configuration to a crowdloan has been edited. `[fund_index]`"
                                    ]
                                },
                                {
                                    "name": "MemoUpdated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "A memo has been updated. `[who, fund_index, memo]`"
                                    ]
                                },
                                {
                                    "name": "AddedToNewRaise",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "A parachain has been moved to `NewRaise`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "70",
                "type": {
                    "path": [
                        "Result"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "44"
                        },
                        {
                            "name": "E",
                            "type": "25"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ok",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "44",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Err",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "25",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "71",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NewLeasePeriod",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A new `[lease_period]` is beginning."
                                    ]
                                },
                                {
                                    "name": "Leased",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A para has won the right to a continuous set of lease periods as a parachain.",
                                        "First balance is any extra amount reserved on top of the para's existing deposit.",
                                        "Second balance is the total amount reserved.",
                                        "`[parachain_id, leaser, period_begin, period_count, extra_reserved, total_amount]`"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "72",
                "type": {
                    "path": [
                        "pallet_sudo",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Sudid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "70",
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A sudo just took place. \\[result\\]"
                                    ]
                                },
                                {
                                    "name": "KeyChanged",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "The \\[sudoer\\] just switched identity; the old key is supplied."
                                    ]
                                },
                                {
                                    "name": "SudoAsDone",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "70",
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A sudo just took place. \\[result\\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "73",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "validator_manager",
                        "RawEvent"
                    ],
                    "params": [
                        {
                            "name": "ValidatorId",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ValidatorsRegistered",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "74",
                                            "typeName": "Vec<ValidatorId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "New validators were added to the set."
                                    ]
                                },
                                {
                                    "name": "ValidatorsDeregistered",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "74",
                                            "typeName": "Vec<ValidatorId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Validators were removed from the set."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Events for this module.",
                        ""
                    ]
                }
            },
            {
                "id": "74",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "0"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "75",
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Proposed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                                        "`MemberCount`).",
                                        "\\[account, proposal_index, proposal_hash, threshold\\]"
                                    ]
                                },
                                {
                                    "name": "Voted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A motion (given hash) has been voted on by given account, leaving",
                                        "a tally (yes votes and no votes given respectively as `MemberCount`).",
                                        "\\[account, proposal_hash, voted, yes, no\\]"
                                    ]
                                },
                                {
                                    "name": "Approved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "A motion was approved by the required threshold.",
                                        "\\[proposal_hash\\]"
                                    ]
                                },
                                {
                                    "name": "Disapproved",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A motion was not approved by the required threshold.",
                                        "\\[proposal_hash\\]"
                                    ]
                                },
                                {
                                    "name": "Executed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "70",
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "A motion was executed; result will be `Ok` if it returned without error.",
                                        "\\[proposal_hash, result\\]"
                                    ]
                                },
                                {
                                    "name": "MemberExecuted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "70",
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "A single member did some action; result will be `Ok` if it returned without error.",
                                        "\\[proposal_hash, result\\]"
                                    ]
                                },
                                {
                                    "name": "Closed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "A proposal was closed because its threshold was reached or after its duration was up.",
                                        "\\[proposal_hash, yes, no\\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "76",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "Bool"
                    },
                    "docs": []
                }
            },
            {
                "id": "77",
                "type": {
                    "path": [
                        "pallet_membership",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "MemberAdded",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The given member was added; see the transaction for who."
                                    ]
                                },
                                {
                                    "name": "MemberRemoved",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The given member was removed; see the transaction for who."
                                    ]
                                },
                                {
                                    "name": "MembersSwapped",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Two members were swapped; see the transaction for who."
                                    ]
                                },
                                {
                                    "name": "MembersReset",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The membership was reset; see the transaction for who the new set is."
                                    ]
                                },
                                {
                                    "name": "KeyChanged",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "One of the members' keys changed."
                                    ]
                                },
                                {
                                    "name": "Dummy",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Phantom member, never used."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "78",
                "type": {
                    "path": [
                        "pallet_utility",
                        "pallet",
                        "Event"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "BatchInterrupted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "25",
                                            "typeName": "DispatchError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                                        "well as the error. \\[index, error\\]"
                                    ]
                                },
                                {
                                    "name": "BatchCompleted",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Batch of dispatches completed fully with no error."
                                    ]
                                },
                                {
                                    "name": "ItemCompleted",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "A single item within a Batch of dispatches has completed with no error."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "79",
                "type": {
                    "path": [
                        "pallet_proxy",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ProxyExecuted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "70",
                                            "typeName": "DispatchResult",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A proxy was executed correctly, with the given \\[result\\]."
                                    ]
                                },
                                {
                                    "name": "AnonymousCreated",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "80",
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "81",
                                            "typeName": "u16",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Anonymous account has been created by new proxy with given",
                                        "disambiguation index and proxy type. \\[anonymous, who, proxy_type,",
                                        "disambiguation_index\\]"
                                    ]
                                },
                                {
                                    "name": "Announced",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "An announcement was placed to make a call in the future. \\[real, proxy, call_hash\\]"
                                    ]
                                },
                                {
                                    "name": "ProxyAdded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "80",
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "A proxy was added. \\[delegator, delegatee, proxy_type, delay\\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "80",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "ProxyType"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Any",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "CancelProxy",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Auction",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "81",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "U16"
                    },
                    "docs": []
                }
            },
            {
                "id": "82",
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Event"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Attempted",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "59",
                                            "typeName": "xcm::latest::Outcome",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Execution of an XCM message was attempted.",
                                        "",
                                        "\\[ outcome \\]"
                                    ]
                                },
                                {
                                    "name": "Sent",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "A XCM message was sent.",
                                        "",
                                        "\\[ origin, destination, message \\]"
                                    ]
                                },
                                {
                                    "name": "UnexpectedResponse",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Query response received which does not match a registered query. This may be because a",
                                        "matching query was never registered, it may be because it is a duplicate response, or",
                                        "because the query timed out.",
                                        "",
                                        "\\[ origin location, id \\]"
                                    ]
                                },
                                {
                                    "name": "ResponseReady",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "103",
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Query response has been received and is ready for taking with `take_response`. There is",
                                        "no registered notification call.",
                                        "",
                                        "\\[ id, response \\]"
                                    ]
                                },
                                {
                                    "name": "Notified",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Query response has been received and query is removed. The registered notification has",
                                        "been dispatched and executed successfully.",
                                        "",
                                        "\\[ id, pallet index, call index \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyOverweight",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Query response has been received and query is removed. The registered notification could",
                                        "not be dispatched because the dispatch weight is greater than the maximum weight",
                                        "originally budgeted by this runtime for the query result.",
                                        "",
                                        "\\[ id, pallet index, call index, actual weight, max budgeted weight \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyDispatchError",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Query response has been received and query is removed. There was a general error with",
                                        "dispatching the notification call.",
                                        "",
                                        "\\[ id, pallet index, call index \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyDecodeFailed",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Query response has been received and query is removed. The dispatch was unable to be",
                                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                                        "is not `(origin, QueryId, Response)`.",
                                        "",
                                        "\\[ id, pallet index, call index \\]"
                                    ]
                                },
                                {
                                    "name": "InvalidResponder",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "112",
                                            "typeName": "Option<MultiLocation>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Expected query response has been received but the origin location of the response does",
                                        "not match that expected. The query remains registered for a later, valid, response to",
                                        "be received and acted upon.",
                                        "",
                                        "\\[ origin location, id, expected location \\]"
                                    ]
                                },
                                {
                                    "name": "InvalidResponderVersion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Expected query response has been received but the expected origin location placed in",
                                        "storate by this runtime previously cannot be decoded. The query remains registered.",
                                        "",
                                        "This is unexpected (since a location placed in storage in a previously executing",
                                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                                        "valid response will be dropped. Manual governance intervention is probably going to be",
                                        "needed.",
                                        "",
                                        "\\[ origin location, id \\]"
                                    ]
                                },
                                {
                                    "name": "ResponseTaken",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Received query response has been read and removed.",
                                        "",
                                        "\\[ id \\]"
                                    ]
                                },
                                {
                                    "name": "AssetsTrapped",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "H256",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "113",
                                            "typeName": "VersionedMultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Some assets have been placed in an asset trap.",
                                        "",
                                        "\\[ hash, origin, assets \\]"
                                    ]
                                },
                                {
                                    "name": "VersionChangeNotified",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "XcmVersion",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "An XCM version change notification message has been attempted to be sent.",
                                        "",
                                        "\\[ destination, result \\]"
                                    ]
                                },
                                {
                                    "name": "SupportedVersionChanged",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "XcmVersion",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "The supported version of a location has been changed. This might be through an",
                                        "automatic notification or a manual intervention.",
                                        "",
                                        "\\[ location, XCM version \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyTargetSendFail",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "60",
                                            "typeName": "XcmError",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": [
                                        "A given location which had a version change subscription was dropped owing to an error",
                                        "sending the notification to it.",
                                        "",
                                        "\\[ location, query ID, error \\]"
                                    ]
                                },
                                {
                                    "name": "NotifyTargetMigrationFail",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "118",
                                            "typeName": "VersionedMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": "QueryId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": [
                                        "A given location which had a version change subscription was dropped owing to an error",
                                        "migrating the location to our new XCM format.",
                                        "",
                                        "\\[ location, query ID \\]"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tThe [event](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/events) emitted\n\t\t\tby this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "83",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multilocation",
                        "MultiLocation"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "parents",
                                    "type": "2",
                                    "typeName": "u8",
                                    "docs": []
                                },
                                {
                                    "name": "interior",
                                    "type": "84",
                                    "typeName": "Junctions",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "84",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multilocation",
                        "Junctions"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Here",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "X1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "X2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "X3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "X4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "X5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "X6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "X7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "X8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "85",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "85",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "junction",
                        "Junction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parachain",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "AccountId32",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": "87",
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": "1",
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "AccountIndex64",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": "87",
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AccountKey20",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": "87",
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "key",
                                            "type": "89",
                                            "typeName": "[u8; 20]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "PalletInstance",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralIndex",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "90",
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralKey",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "OnlyChild",
                                    "fields": [],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Plurality",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "91",
                                            "typeName": "BodyId",
                                            "docs": []
                                        },
                                        {
                                            "name": "part",
                                            "type": "92",
                                            "typeName": "BodyPart",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "86",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": "4"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "87",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "NetworkId"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Any",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Named",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Polkadot",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Kusama",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "88",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": "8"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "89",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 20,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "90",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": "6"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "91",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "BodyId"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unit",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Named",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Index",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Executive",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Technical",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Legislative",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Judicial",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "92",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "BodyPart"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Voice",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Members",
                                    "fields": [
                                        {
                                            "name": "count",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Fraction",
                                    "fields": [
                                        {
                                            "name": "nom",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "denom",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AtLeastProportion",
                                    "fields": [
                                        {
                                            "name": "nom",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "denom",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "MoreThanProportion",
                                    "fields": [
                                        {
                                            "name": "nom",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "denom",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "93",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "94",
                                    "typeName": "Vec<Instruction<Call>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "94",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "95"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "95",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Instruction"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": "103",
                                            "typeName": "Response",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": "106",
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "107",
                                            "typeName": "DoubleEncoded<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "ClearOrigin",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "DescendOrigin",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "84",
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ReportError",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": "98",
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": "111",
                                            "typeName": "WeightLimit",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "RefundSurplus",
                                    "fields": [],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "SetErrorHandler",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "93",
                                            "typeName": "Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "SetAppendix",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "93",
                                            "typeName": "Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "ClearError",
                                    "fields": [],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "ClaimAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "ticket",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Trap",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 27,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "96",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "MultiAssets"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "97",
                                    "typeName": "Vec<MultiAsset>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "97",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "98"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "98",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "MultiAsset"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": "99",
                                    "typeName": "AssetId",
                                    "docs": []
                                },
                                {
                                    "name": "fun",
                                    "type": "100",
                                    "typeName": "Fungibility",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "99",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "AssetId"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Concrete",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Abstract",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "100",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "Fungibility"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Fungible",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "90",
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NonFungible",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "101",
                                            "typeName": "AssetInstance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "101",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "AssetInstance"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Undefined",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Index",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "90",
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Array4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "14",
                                            "typeName": "[u8; 4]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Array8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "102",
                                            "typeName": "[u8; 8]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Array16",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "32",
                                            "typeName": "[u8; 16]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Array32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Blob",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "102",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 8,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "103",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Response"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Assets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ExecutionResult",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "104",
                                            "typeName": "result::Result<(), (u32, Error)>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Version",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "super::Version",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "104",
                "type": {
                    "path": [
                        "Result"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "44"
                        },
                        {
                            "name": "E",
                            "type": "105"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ok",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "44",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Err",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "105",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "105",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "4",
                            "60"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "106",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "OriginKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Native",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "SovereignAccount",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Superuser",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Xcm",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "107",
                "type": {
                    "path": [
                        "xcm",
                        "double_encoded",
                        "DoubleEncoded"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "encoded",
                                    "type": "10",
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "108",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "MultiAssetFilter"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Definite",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Wild",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "109",
                                            "typeName": "WildMultiAsset",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "109",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "WildMultiAsset"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "All",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "AllOf",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "99",
                                            "typeName": "AssetId",
                                            "docs": []
                                        },
                                        {
                                            "name": "fun",
                                            "type": "110",
                                            "typeName": "WildFungibility",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "110",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "multiasset",
                        "WildFungibility"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Fungible",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "NonFungible",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "111",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "WeightLimit"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unlimited",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Limited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "112",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "83"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "113",
                "type": {
                    "path": [
                        "xcm",
                        "VersionedMultiAssets"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "114",
                                            "typeName": "Vec<v0::MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "v1::MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "114",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "115"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "115",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "multi_asset",
                        "MultiAsset"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "All",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "AllFungible",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AllNonFungible",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "AllAbstractFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "AllAbstractNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "AllConcreteFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "AllConcreteNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "AbstractFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": "90",
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "AbstractNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        },
                                        {
                                            "name": "instance",
                                            "type": "101",
                                            "typeName": "AssetInstance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "ConcreteFungible",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": "90",
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "ConcreteNonFungible",
                                    "fields": [
                                        {
                                            "name": "class",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "instance",
                                            "type": "101",
                                            "typeName": "AssetInstance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "116",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "multi_location",
                        "MultiLocation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "X1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "X2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "X3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "X4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "X5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "X6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "X7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "X8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "117",
                                            "typeName": "Junction",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "117",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "junction",
                        "Junction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parent",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parachain",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "AccountId32",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": "87",
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": "1",
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "AccountIndex64",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": "87",
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "AccountKey20",
                                    "fields": [
                                        {
                                            "name": "network",
                                            "type": "87",
                                            "typeName": "NetworkId",
                                            "docs": []
                                        },
                                        {
                                            "name": "key",
                                            "type": "89",
                                            "typeName": "[u8; 20]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "PalletInstance",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": "u8",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralIndex",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "90",
                                            "typeName": "u128",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "GeneralKey",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "OnlyChild",
                                    "fields": [],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Plurality",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "91",
                                            "typeName": "BodyId",
                                            "docs": []
                                        },
                                        {
                                            "name": "part",
                                            "type": "92",
                                            "typeName": "BodyPart",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "118",
                "type": {
                    "path": [
                        "xcm",
                        "VersionedMultiLocation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "116",
                                            "typeName": "v0::MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "83",
                                            "typeName": "v1::MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "119",
                "type": {
                    "path": [
                        "frame_system",
                        "Phase"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ApplyExtrinsic",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Finalization",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Initialization",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "120",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "9"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "121",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "122"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "122",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "4",
                            "4"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "123",
                "type": {
                    "path": [
                        "frame_system",
                        "LastRuntimeUpgradeInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "spec_version",
                                    "type": "86",
                                    "typeName": "codec::Compact<u32>",
                                    "docs": []
                                },
                                {
                                    "name": "spec_name",
                                    "type": "124",
                                    "typeName": "sp_runtime::RuntimeString",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "124",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Primitive": "Str"
                    },
                    "docs": []
                }
            },
            {
                "id": "125",
                "type": {
                    "path": [
                        "frame_system",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "fill_block",
                                    "fields": [
                                        {
                                            "name": "ratio",
                                            "type": "126",
                                            "typeName": "Perbill",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "A dispatch that will fill the block weight up to the given ratio."
                                    ]
                                },
                                {
                                    "name": "remark",
                                    "fields": [
                                        {
                                            "name": "remark",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Make some on-chain remark.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_heap_pages",
                                    "fields": [
                                        {
                                            "name": "pages",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Set the number of pages in the WebAssembly environment's heap.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`",
                                        "- 1 storage write.",
                                        "- Base Weight: 1.405 \u00b5s",
                                        "- 1 write to HEAP_PAGES",
                                        "- 1 digest item",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_code",
                                    "fields": [
                                        {
                                            "name": "code",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Set the new runtime code.",
                                        "",
                                        "# <weight>",
                                        "- `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`",
                                        "- 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is",
                                        "  expensive).",
                                        "- 1 storage write (codec `O(C)`).",
                                        "- 1 digest item.",
                                        "- 1 event.",
                                        "The weight of this function is dependent on the runtime, but generally this is very",
                                        "expensive. We will treat this as a full block.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_code_without_checks",
                                    "fields": [
                                        {
                                            "name": "code",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Set the new runtime code without doing any checks of the given `code`.",
                                        "",
                                        "# <weight>",
                                        "- `O(C)` where `C` length of `code`",
                                        "- 1 storage write (codec `O(C)`).",
                                        "- 1 digest item.",
                                        "- 1 event.",
                                        "The weight of this function is dependent on the runtime. We will treat this as a full",
                                        "block. # <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_changes_trie_config",
                                    "fields": [
                                        {
                                            "name": "changes_trie_config",
                                            "type": "16",
                                            "typeName": "Option<ChangesTrieConfiguration>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set the new changes trie configuration.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`",
                                        "- 1 storage write or delete (codec `O(1)`).",
                                        "- 1 call to `deposit_log`: Uses `append` API, so O(1)",
                                        "- Base Weight: 7.218 \u00b5s",
                                        "- DB Weight:",
                                        "    - Writes: Changes Trie, System Digest",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_storage",
                                    "fields": [
                                        {
                                            "name": "items",
                                            "type": "127",
                                            "typeName": "Vec<KeyValue>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Set some items of storage.",
                                        "",
                                        "# <weight>",
                                        "- `O(I)` where `I` length of `items`",
                                        "- `I` storage writes (`O(1)`).",
                                        "- Base Weight: 0.568 * i \u00b5s",
                                        "- Writes: Number of items",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "kill_storage",
                                    "fields": [
                                        {
                                            "name": "keys",
                                            "type": "129",
                                            "typeName": "Vec<Key>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Kill some items from storage.",
                                        "",
                                        "# <weight>",
                                        "- `O(IK)` where `I` length of `keys` and `K` length of one key",
                                        "- `I` storage deletions.",
                                        "- Base Weight: .378 * i \u00b5s",
                                        "- Writes: Number of items",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "kill_prefix",
                                    "fields": [
                                        {
                                            "name": "prefix",
                                            "type": "10",
                                            "typeName": "Key",
                                            "docs": []
                                        },
                                        {
                                            "name": "subkeys",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Kill all storage items with a key that starts with the given prefix.",
                                        "",
                                        "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
                                        "the prefix we are removing to accurately calculate the weight of this function.",
                                        "",
                                        "# <weight>",
                                        "- `O(P)` where `P` amount of keys with prefix `prefix`",
                                        "- `P` storage deletions.",
                                        "- Base Weight: 0.834 * P \u00b5s",
                                        "- Writes: Number of subkeys + 1",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "remark_with_event",
                                    "fields": [
                                        {
                                            "name": "remark",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Make some on-chain remark and emit event.",
                                        "",
                                        "# <weight>",
                                        "- `O(b)` where b is the length of the remark.",
                                        "- 1 event.",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "126",
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "per_things",
                        "Perbill"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "127",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "128"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "128",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "10",
                            "10"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "129",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "10"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "130",
                "type": {
                    "path": [
                        "frame_system",
                        "limits",
                        "BlockWeights"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "base_block",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "max_block",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "per_class",
                                    "type": "131",
                                    "typeName": "PerDispatchClass<WeightsPerClass>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "131",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "PerDispatchClass"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "132"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "normal",
                                    "type": "132",
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "operational",
                                    "type": "132",
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "mandatory",
                                    "type": "132",
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "132",
                "type": {
                    "path": [
                        "frame_system",
                        "limits",
                        "WeightsPerClass"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "base_extrinsic",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "max_extrinsic",
                                    "type": "133",
                                    "typeName": "Option<Weight>",
                                    "docs": []
                                },
                                {
                                    "name": "max_total",
                                    "type": "133",
                                    "typeName": "Option<Weight>",
                                    "docs": []
                                },
                                {
                                    "name": "reserved",
                                    "type": "133",
                                    "typeName": "Option<Weight>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "133",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "8"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "8",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "134",
                "type": {
                    "path": [
                        "frame_system",
                        "limits",
                        "BlockLength"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "max",
                                    "type": "135",
                                    "typeName": "PerDispatchClass<u32>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "135",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "PerDispatchClass"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "normal",
                                    "type": "4",
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "operational",
                                    "type": "4",
                                    "typeName": "T",
                                    "docs": []
                                },
                                {
                                    "name": "mandatory",
                                    "type": "4",
                                    "typeName": "T",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "136",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "RuntimeDbWeight"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "read",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "write",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "137",
                "type": {
                    "path": [
                        "sp_version",
                        "RuntimeVersion"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "spec_name",
                                    "type": "124",
                                    "typeName": "RuntimeString",
                                    "docs": []
                                },
                                {
                                    "name": "impl_name",
                                    "type": "124",
                                    "typeName": "RuntimeString",
                                    "docs": []
                                },
                                {
                                    "name": "authoring_version",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "spec_version",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "impl_version",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "apis",
                                    "type": "138",
                                    "typeName": "ApisVec",
                                    "docs": []
                                },
                                {
                                    "name": "transaction_version",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "138",
                "type": {
                    "path": [
                        "Cow"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "139"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "139",
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "139",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "140"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "140",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "102",
                            "4"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "141",
                "type": {
                    "path": [
                        "frame_system",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidSpecName",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The name of specification does not match between the current runtime",
                                        "and the new runtime."
                                    ]
                                },
                                {
                                    "name": "SpecVersionNeedsToIncrease",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The specification version is not allowed to decrease between the current runtime",
                                        "and the new runtime."
                                    ]
                                },
                                {
                                    "name": "FailedToExtractRuntimeVersion",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Failed to extract the runtime version from the new runtime.",
                                        "",
                                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                                    ]
                                },
                                {
                                    "name": "NonDefaultComposite",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Suicide called when the account has non-default composite data."
                                    ]
                                },
                                {
                                    "name": "NonZeroRefCount",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "There is a non-zero reference count preventing the account from being purged."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the System pallet"
                    ]
                }
            },
            {
                "id": "142",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "143"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "143",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "144",
                            "8"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "144",
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "41",
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "145",
                "type": {
                    "path": [
                        "sp_consensus_slots",
                        "Slot"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "8",
                                    "typeName": "u64",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "146",
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "digests",
                        "NextConfigDescriptor"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": "c",
                                            "type": "147",
                                            "typeName": "(u64, u64)",
                                            "docs": []
                                        },
                                        {
                                            "name": "allowed_slots",
                                            "type": "148",
                                            "typeName": "AllowedSlots",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "147",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "8",
                            "8"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "148",
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "AllowedSlots"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PrimarySlots",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PrimaryAndSecondaryPlainSlots",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "PrimaryAndSecondaryVRFSlots",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "149",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "1"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "150",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "1"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "151",
                "type": {
                    "path": [
                        "sp_consensus_babe",
                        "BabeEpochConfiguration"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "c",
                                    "type": "147",
                                    "typeName": "(u64, u64)",
                                    "docs": []
                                },
                                {
                                    "name": "allowed_slots",
                                    "type": "148",
                                    "typeName": "AllowedSlots",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "152",
                "type": {
                    "path": [
                        "pallet_babe",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "report_equivocation",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": "153",
                                            "typeName": "Box<EquivocationProof<T::Header>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": "156",
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Report authority equivocation\/misbehavior. This method will verify",
                                        "the equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence will",
                                        "be reported."
                                    ]
                                },
                                {
                                    "name": "report_equivocation_unsigned",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": "153",
                                            "typeName": "Box<EquivocationProof<T::Header>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": "156",
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Report authority equivocation\/misbehavior. This method will verify",
                                        "the equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence will",
                                        "be reported.",
                                        "This extrinsic must be called unsigned and it is expected that only",
                                        "block authors will call it (validated in `ValidateUnsigned`), as such",
                                        "if the block author is defined it will be defined as the equivocation",
                                        "reporter."
                                    ]
                                },
                                {
                                    "name": "plan_config_change",
                                    "fields": [
                                        {
                                            "name": "config",
                                            "type": "146",
                                            "typeName": "NextConfigDescriptor",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Plan an epoch config change. The epoch config change is recorded and will be enacted on",
                                        "the next call to `enact_epoch_change`. The config will be activated one epoch after.",
                                        "Multiple calls to this method will replace any existing planned config change that had",
                                        "not been enacted yet."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "153",
                "type": {
                    "path": [
                        "sp_consensus_slots",
                        "EquivocationProof"
                    ],
                    "params": [
                        {
                            "name": "Header",
                            "type": "154"
                        },
                        {
                            "name": "Id",
                            "type": "144"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "offender",
                                    "type": "144",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "slot",
                                    "type": "145",
                                    "typeName": "Slot",
                                    "docs": []
                                },
                                {
                                    "name": "first_header",
                                    "type": "154",
                                    "typeName": "Header",
                                    "docs": []
                                },
                                {
                                    "name": "second_header",
                                    "type": "154",
                                    "typeName": "Header",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "154",
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "header",
                        "Header"
                    ],
                    "params": [
                        {
                            "name": "Number",
                            "type": "4"
                        },
                        {
                            "name": "Hash",
                            "type": "155"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "parent_hash",
                                    "type": "9",
                                    "typeName": "Hash::Output",
                                    "docs": []
                                },
                                {
                                    "name": "number",
                                    "type": "86",
                                    "typeName": "Number",
                                    "docs": []
                                },
                                {
                                    "name": "state_root",
                                    "type": "9",
                                    "typeName": "Hash::Output",
                                    "docs": []
                                },
                                {
                                    "name": "extrinsics_root",
                                    "type": "9",
                                    "typeName": "Hash::Output",
                                    "docs": []
                                },
                                {
                                    "name": "digest",
                                    "type": "11",
                                    "typeName": "Digest<Hash::Output>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "155",
                "type": {
                    "path": [
                        "sp_runtime",
                        "traits",
                        "BlakeTwo256"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "156",
                "type": {
                    "path": [
                        "sp_session",
                        "MembershipProof"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "session",
                                    "type": "4",
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "trie_nodes",
                                    "type": "129",
                                    "typeName": "Vec<Vec<u8>>",
                                    "docs": []
                                },
                                {
                                    "name": "validator_count",
                                    "type": "4",
                                    "typeName": "ValidatorCount",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "157",
                "type": {
                    "path": [
                        "pallet_babe",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidEquivocationProof",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "An equivocation proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "InvalidKeyOwnershipProof",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "A key ownership proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "DuplicateOffenceReport",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "A given equivocation report is valid but already previously reported."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "158",
                "type": {
                    "path": [
                        "pallet_timestamp",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set",
                                    "fields": [
                                        {
                                            "name": "now",
                                            "type": "88",
                                            "typeName": "T::Moment",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the current time.",
                                        "",
                                        "This call should be invoked exactly once per block. It will panic at the finalization",
                                        "phase, if this call hasn't been invoked by that time.",
                                        "",
                                        "The timestamp should be greater than the previous one by the amount specified by",
                                        "`MinimumPeriod`.",
                                        "",
                                        "The dispatch origin for this call must be `Inherent`.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
                                        "- 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in",
                                        "  `on_finalize`)",
                                        "- 1 event handler `on_timestamp_set`. Must be `O(1)`.",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "159",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "0",
                            "6",
                            "76"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "160",
                "type": {
                    "path": [
                        "pallet_indices",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "claim",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Assign an previously unassigned index.",
                                        "",
                                        "Payment: `Deposit` is reserved from the sender account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `index`: the index to be claimed. This must not be in use.",
                                        "",
                                        "Emits `IndexAssigned` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- One reserve operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight: 1 Read\/Write (Accounts)",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "transfer",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Assign an index already owned by the sender to another account. The balance reservation",
                                        "is effectively transferred to the new account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "- `index`: the index to be re-assigned. This must be owned by the sender.",
                                        "- `new`: the new owner of the index. This function is a no-op if it is equal to sender.",
                                        "",
                                        "Emits `IndexAssigned` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- One transfer operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight:",
                                        "   - Reads: Indices Accounts, System Account (recipient)",
                                        "   - Writes: Indices Accounts, System Account (recipient)",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "free",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Free up an index owned by the sender.",
                                        "",
                                        "Payment: Any previous deposit placed for the index is unreserved in the sender account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the sender must own the index.",
                                        "",
                                        "- `index`: the index to be freed. This must be owned by the sender.",
                                        "",
                                        "Emits `IndexFreed` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- One reserve operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight: 1 Read\/Write (Accounts)",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "force_transfer",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "freeze",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Force an index to an account. This doesn't require a deposit. If the index is already",
                                        "held, then any deposit is reimbursed to its current owner.",
                                        "",
                                        "The dispatch origin for this call must be _Root_.",
                                        "",
                                        "- `index`: the index to be (re-)assigned.",
                                        "- `new`: the new owner of the index. This function is a no-op if it is equal to sender.",
                                        "- `freeze`: if set to `true`, will freeze the index so it cannot be transferred.",
                                        "",
                                        "Emits `IndexAssigned` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- Up to one reserve operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight:",
                                        "   - Reads: Indices Accounts, System Account (original owner)",
                                        "   - Writes: Indices Accounts, System Account (original owner)",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "freeze",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "4",
                                            "typeName": "T::AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Freeze an index so it will always point to the sender account. This consumes the",
                                        "deposit.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and the signing account must have a",
                                        "non-frozen account `index`.",
                                        "",
                                        "- `index`: the index to be frozen in place.",
                                        "",
                                        "Emits `IndexFrozen` if successful.",
                                        "",
                                        "# <weight>",
                                        "- `O(1)`.",
                                        "- One storage mutation (codec `O(1)`).",
                                        "- Up to one slash operation.",
                                        "- One event.",
                                        "-------------------",
                                        "- DB Weight: 1 Read\/Write (Accounts)",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "161",
                "type": {
                    "path": [
                        "pallet_indices",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotAssigned",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The index was not already assigned."
                                    ]
                                },
                                {
                                    "name": "NotOwner",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The index is assigned to another account."
                                    ]
                                },
                                {
                                    "name": "InUse",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The index was not available."
                                    ]
                                },
                                {
                                    "name": "NotTransfer",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The source and destination accounts are identical."
                                    ]
                                },
                                {
                                    "name": "Permanent",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The index is permanent and may not be freed\/changed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "162",
                "type": {
                    "path": [
                        "frame_support",
                        "storage",
                        "weak_bounded_vec",
                        "WeakBoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "163"
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "165",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "163",
                "type": {
                    "path": [
                        "pallet_balances",
                        "BalanceLock"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": "6"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": "102",
                                    "typeName": "LockIdentifier",
                                    "docs": []
                                },
                                {
                                    "name": "amount",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "reasons",
                                    "type": "164",
                                    "typeName": "Reasons",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "164",
                "type": {
                    "path": [
                        "pallet_balances",
                        "Reasons"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Fee",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Misc",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "All",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "165",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "163"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "166",
                "type": {
                    "path": [
                        "frame_support",
                        "storage",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "167"
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "168",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "167",
                "type": {
                    "path": [
                        "pallet_balances",
                        "ReserveData"
                    ],
                    "params": [
                        {
                            "name": "ReserveIdentifier",
                            "type": "102"
                        },
                        {
                            "name": "Balance",
                            "type": "6"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": "102",
                                    "typeName": "ReserveIdentifier",
                                    "docs": []
                                },
                                {
                                    "name": "amount",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "168",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "167"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "169",
                "type": {
                    "path": [
                        "pallet_balances",
                        "Releases"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V1_0_0",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V2_0_0",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "170",
                "type": {
                    "path": [
                        "pallet_balances",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "transfer",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": "90",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Transfer some liquid free balance to another account.",
                                        "",
                                        "`transfer` will set the `FreeBalance` of the sender and receiver.",
                                        "It will decrease the total issuance of the system by the `TransferFee`.",
                                        "If the sender's account is below the existential deposit as a result",
                                        "of the transfer, the account will be reaped.",
                                        "",
                                        "The dispatch origin for this call must be `Signed` by the transactor.",
                                        "",
                                        "# <weight>",
                                        "- Dependent on arguments but not critical, given proper implementations for input config",
                                        "  types. See related functions below.",
                                        "- It contains a limited number of reads and writes internally and no complex",
                                        "  computation.",
                                        "",
                                        "Related functions:",
                                        "",
                                        "  - `ensure_can_withdraw` is always called internally but has a bounded complexity.",
                                        "  - Transferring balances to accounts that did not exist before will cause",
                                        "    `T::OnNewAccount::on_new_account` to be called.",
                                        "  - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.",
                                        "  - `transfer_keep_alive` works the same way as `transfer`, but has an additional check",
                                        "    that the transfer will not kill the origin account.",
                                        "---------------------------------",
                                        "- Base Weight: 73.64 \u00b5s, worst case scenario (account created, account removed)",
                                        "- DB Weight: 1 Read and 1 Write to destination account",
                                        "- Origin account is already in memory, so no DB operations for them.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_balance",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_free",
                                            "type": "90",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_reserved",
                                            "type": "90",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the balances of a given account.",
                                        "",
                                        "This will alter `FreeBalance` and `ReservedBalance` in storage. it will",
                                        "also decrease the total issuance of the system (`TotalIssuance`).",
                                        "If the new free or reserved balance is below the existential deposit,",
                                        "it will reset the account nonce (`frame_system::AccountNonce`).",
                                        "",
                                        "The dispatch origin for this call is `root`.",
                                        "",
                                        "# <weight>",
                                        "- Independent of the arguments.",
                                        "- Contains a limited number of reads and writes.",
                                        "---------------------",
                                        "- Base Weight:",
                                        "    - Creating: 27.56 \u00b5s",
                                        "    - Killing: 35.11 \u00b5s",
                                        "- DB Weight: 1 Read, 1 Write to `who`",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "force_transfer",
                                    "fields": [
                                        {
                                            "name": "source",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": "90",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Exactly as `transfer`, except the origin must be root and the source account may be",
                                        "specified.",
                                        "# <weight>",
                                        "- Same as transfer, but additional read and write because the source account is not",
                                        "  assumed to be in the overlay.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "transfer_keep_alive",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": "90",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Same as the [`transfer`] call, but with a check that the transfer will not kill the",
                                        "origin account.",
                                        "",
                                        "99% of the time you want [`transfer`] instead.",
                                        "",
                                        "[`transfer`]: struct.Pallet.html#method.transfer",
                                        "# <weight>",
                                        "- Cheaper than transfer because account cannot be killed.",
                                        "- Base Weight: 51.4 \u00b5s",
                                        "- DB Weight: 1 Read and 1 Write to dest (sender is in overlay already)",
                                        "#<\/weight>"
                                    ]
                                },
                                {
                                    "name": "transfer_all",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "keep_alive",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Transfer the entire transferable balance from the caller account.",
                                        "",
                                        "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
                                        "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
                                        "transferred by this function. To ensure that this function results in a killed account,",
                                        "you might need to prepare the account by removing any reference counters, storage",
                                        "deposits, etc...",
                                        "",
                                        "The dispatch origin of this call must be Signed.",
                                        "",
                                        "- `dest`: The recipient of the transfer.",
                                        "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
                                        "  of the funds the account has, causing the sender account to be killed (false), or",
                                        "  transfer everything except at least the existential deposit, which will guarantee to",
                                        "  keep the sender account alive (true). # <weight>",
                                        "- O(1). Just like transfer, but reading the user's transferable balance first.",
                                        "  #<\/weight>"
                                    ]
                                },
                                {
                                    "name": "force_unreserve",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": "6",
                                            "typeName": "T::Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Unreserve some balance from a user by force.",
                                        "",
                                        "Can only be called by ROOT."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "171",
                "type": {
                    "path": [
                        "sp_runtime",
                        "multiaddress",
                        "MultiAddress"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": null
                        },
                        {
                            "name": "AccountIndex",
                            "type": "44"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Id",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": "AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Index",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "172",
                                            "typeName": "AccountIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Raw",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Address32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "1",
                                            "typeName": "[u8; 32]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Address20",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "89",
                                            "typeName": "[u8; 20]",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "172",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": "44"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "173",
                "type": {
                    "path": [
                        "pallet_balances",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "VestingBalance",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Vesting balance too high to send value"
                                    ]
                                },
                                {
                                    "name": "LiquidityRestrictions",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Account liquidity restrictions prevent withdrawal"
                                    ]
                                },
                                {
                                    "name": "InsufficientBalance",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Balance too low to send value"
                                    ]
                                },
                                {
                                    "name": "ExistentialDeposit",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Value too low to create account due to existential deposit"
                                    ]
                                },
                                {
                                    "name": "KeepAlive",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Transfer\/payment would kill account"
                                    ]
                                },
                                {
                                    "name": "ExistingVestingSchedule",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "A vesting schedule already exists for this account"
                                    ]
                                },
                                {
                                    "name": "DeadAccount",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Beneficiary account must pre-exist"
                                    ]
                                },
                                {
                                    "name": "TooManyReserves",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Number of named reserves exceed MaxReserves"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "174",
                "type": {
                    "path": [
                        "sp_arithmetic",
                        "fixed_point",
                        "FixedU128"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "6",
                                    "typeName": "u128",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "175",
                "type": {
                    "path": [
                        "pallet_transaction_payment",
                        "Releases"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V1Ancient",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "176",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "177"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "177",
                "type": {
                    "path": [
                        "frame_support",
                        "weights",
                        "WeightToFeeCoefficient"
                    ],
                    "params": [
                        {
                            "name": "Balance",
                            "type": "6"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "coeff_integer",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "coeff_frac",
                                    "type": "126",
                                    "typeName": "Perbill",
                                    "docs": []
                                },
                                {
                                    "name": "negative",
                                    "type": "76",
                                    "typeName": "bool",
                                    "docs": []
                                },
                                {
                                    "name": "degree",
                                    "type": "2",
                                    "typeName": "u8",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "178",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "179"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "179",
                "type": {
                    "path": [
                        "pallet_authorship",
                        "UncleEntryItem"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        },
                        {
                            "name": "Hash",
                            "type": "9"
                        },
                        {
                            "name": "Author",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InclusionHeight",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Uncle",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "180",
                                            "typeName": "Option<Author>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "180",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "0",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "181",
                "type": {
                    "path": [
                        "pallet_authorship",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_uncles",
                                    "fields": [
                                        {
                                            "name": "new_uncles",
                                            "type": "182",
                                            "typeName": "Vec<T::Header>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Provide a set of uncles."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "182",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "154"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "183",
                "type": {
                    "path": [
                        "pallet_authorship",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidUncleParent",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The uncle parent not in the chain."
                                    ]
                                },
                                {
                                    "name": "UnclesAlreadySet",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Uncles already set in the block."
                                    ]
                                },
                                {
                                    "name": "TooManyUncles",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Too many uncles."
                                    ]
                                },
                                {
                                    "name": "GenesisUncle",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The uncle is genesis."
                                    ]
                                },
                                {
                                    "name": "TooHighUncle",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The uncle is too high in chain."
                                    ]
                                },
                                {
                                    "name": "UncleAlreadyIncluded",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The uncle is already included."
                                    ]
                                },
                                {
                                    "name": "OldUncle",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The uncle isn't recent enough to be included."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "184",
                "type": {
                    "path": [
                        "sp_staking",
                        "offence",
                        "OffenceDetails"
                    ],
                    "params": [
                        {
                            "name": "Reporter",
                            "type": null
                        },
                        {
                            "name": "Offender",
                            "type": "43"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "offender",
                                    "type": "43",
                                    "typeName": "Offender",
                                    "docs": []
                                },
                                {
                                    "name": "reporters",
                                    "type": "74",
                                    "typeName": "Vec<Reporter>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "185",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "32",
                            "10"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "186",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "187"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "187",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "0",
                            "188"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "188",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "SessionKeys"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "grandpa",
                                    "type": "37",
                                    "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "babe",
                                    "type": "144",
                                    "typeName": "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "im_online",
                                    "type": "40",
                                    "typeName": "<ImOnline as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "para_validator",
                                    "type": "189",
                                    "typeName": "<Initializer as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "para_assignment",
                                    "type": "190",
                                    "typeName": "<ParaSessionInfo as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "authority_discovery",
                                    "type": "191",
                                    "typeName": "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                },
                                {
                                    "name": "beefy",
                                    "type": "192",
                                    "typeName": "<Beefy as $crate::BoundToRuntimeAppPublic>::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "189",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v0",
                        "validator_app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "41",
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "190",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "assignment_app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "41",
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "191",
                "type": {
                    "path": [
                        "sp_authority_discovery",
                        "app",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "41",
                                    "typeName": "sr25519::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "192",
                "type": {
                    "path": [
                        "beefy_primitives",
                        "crypto",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "193",
                                    "typeName": "ecdsa::Public",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "193",
                "type": {
                    "path": [
                        "sp_core",
                        "ecdsa",
                        "Public"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "194",
                                    "typeName": "[u8; 33]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "194",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 33,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "195",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "4"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "196",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "197",
                            "10"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "197",
                "type": {
                    "path": [
                        "sp_core",
                        "crypto",
                        "KeyTypeId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "14",
                                    "typeName": "[u8; 4]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "198",
                "type": {
                    "path": [
                        "pallet_session",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_keys",
                                    "fields": [
                                        {
                                            "name": "keys",
                                            "type": "188",
                                            "typeName": "T::Keys",
                                            "docs": []
                                        },
                                        {
                                            "name": "proof",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Sets the session key(s) of the function caller to `keys`.",
                                        "Allows an account to set its session key prior to becoming a validator.",
                                        "This doesn't take effect until the next session.",
                                        "",
                                        "The dispatch origin of this function must be signed.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(1)`",
                                        "  Actual cost depends on the number of length of `T::Keys::key_ids()` which is fixed.",
                                        "- DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`",
                                        "- DbWrites: `origin account`, `NextKeys`",
                                        "- DbReads per key id: `KeyOwner`",
                                        "- DbWrites per key id: `KeyOwner`",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "purge_keys",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Removes any session key(s) of the function caller.",
                                        "This doesn't take effect until the next session.",
                                        "",
                                        "The dispatch origin of this function must be signed.",
                                        "",
                                        "# <weight>",
                                        "- Complexity: `O(1)` in number of key types.",
                                        "  Actual cost depends on the number of length of `T::Keys::key_ids()` which is fixed.",
                                        "- DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`",
                                        "- DbWrites: `NextKeys`, `origin account`",
                                        "- DbWrites per key id: `KeyOwner`",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Dispatchable calls.",
                        "",
                        "Each variant of this enum maps to a dispatchable function from the associated module."
                    ]
                }
            },
            {
                "id": "199",
                "type": {
                    "path": [
                        "pallet_session",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidProof",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Invalid ownership proof."
                                    ]
                                },
                                {
                                    "name": "NoAssociatedValidatorId",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "No associated validator ID for account."
                                    ]
                                },
                                {
                                    "name": "DuplicatedKey",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Registered duplicate key."
                                    ]
                                },
                                {
                                    "name": "NoKeys",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "No keys are associated with this account."
                                    ]
                                },
                                {
                                    "name": "NoAccount",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Key setting account is not live, so it's impossible to associate keys."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the session module."
                    ]
                }
            },
            {
                "id": "200",
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "StoredState"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Live",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PendingPause",
                                    "fields": [
                                        {
                                            "name": "scheduled_at",
                                            "type": "4",
                                            "typeName": "N",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": "4",
                                            "typeName": "N",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Paused",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "PendingResume",
                                    "fields": [
                                        {
                                            "name": "scheduled_at",
                                            "type": "4",
                                            "typeName": "N",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": "4",
                                            "typeName": "N",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "201",
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "StoredPendingChange"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "scheduled_at",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "delay",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "next_authorities",
                                    "type": "35",
                                    "typeName": "AuthorityList",
                                    "docs": []
                                },
                                {
                                    "name": "forced",
                                    "type": "202",
                                    "typeName": "Option<N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "202",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "203",
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "report_equivocation",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": "204",
                                            "typeName": "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": "156",
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Report voter equivocation\/misbehavior. This method will verify the",
                                        "equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence",
                                        "will be reported."
                                    ]
                                },
                                {
                                    "name": "report_equivocation_unsigned",
                                    "fields": [
                                        {
                                            "name": "equivocation_proof",
                                            "type": "204",
                                            "typeName": "Box<EquivocationProof<T::Hash, T::BlockNumber>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "key_owner_proof",
                                            "type": "156",
                                            "typeName": "T::KeyOwnerProof",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Report voter equivocation\/misbehavior. This method will verify the",
                                        "equivocation proof and validate the given key ownership proof",
                                        "against the extracted offender. If both are valid, the offence",
                                        "will be reported.",
                                        "",
                                        "This extrinsic must be called unsigned and it is expected that only",
                                        "block authors will call it (validated in `ValidateUnsigned`), as such",
                                        "if the block author is defined it will be defined as the equivocation",
                                        "reporter."
                                    ]
                                },
                                {
                                    "name": "note_stalled",
                                    "fields": [
                                        {
                                            "name": "delay",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "best_finalized_block_number",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Note that the current authority set of the GRANDPA finality gadget has",
                                        "stalled. This will trigger a forced authority set change at the beginning",
                                        "of the next session, to be enacted `delay` blocks after that. The delay",
                                        "should be high enough to safely assume that the block signalling the",
                                        "forced change will not be re-orged (e.g. 1000 blocks). The GRANDPA voters",
                                        "will start the new authority set using the given finalized block as base.",
                                        "Only callable by root."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "204",
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "EquivocationProof"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        },
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "set_id",
                                    "type": "8",
                                    "typeName": "SetId",
                                    "docs": []
                                },
                                {
                                    "name": "equivocation",
                                    "type": "205",
                                    "typeName": "Equivocation<H, N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "205",
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "Equivocation"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        },
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Prevote",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "206",
                                            "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Precommit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "211",
                                            "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "206",
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Equivocation"
                    ],
                    "params": [
                        {
                            "name": "Id",
                            "type": "37"
                        },
                        {
                            "name": "V",
                            "type": "207"
                        },
                        {
                            "name": "S",
                            "type": "208"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "round_number",
                                    "type": "8",
                                    "typeName": "u64",
                                    "docs": []
                                },
                                {
                                    "name": "identity",
                                    "type": "37",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "first",
                                    "type": "210",
                                    "typeName": "(V, S)",
                                    "docs": []
                                },
                                {
                                    "name": "second",
                                    "type": "210",
                                    "typeName": "(V, S)",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "207",
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Prevote"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        },
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "target_hash",
                                    "type": "9",
                                    "typeName": "H",
                                    "docs": []
                                },
                                {
                                    "name": "target_number",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "208",
                "type": {
                    "path": [
                        "sp_finality_grandpa",
                        "app",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "209",
                                    "typeName": "ed25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "209",
                "type": {
                    "path": [
                        "sp_core",
                        "ed25519",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "52",
                                    "typeName": "[u8; 64]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "210",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "207",
                            "208"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "211",
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Equivocation"
                    ],
                    "params": [
                        {
                            "name": "Id",
                            "type": "37"
                        },
                        {
                            "name": "V",
                            "type": "212"
                        },
                        {
                            "name": "S",
                            "type": "208"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "round_number",
                                    "type": "8",
                                    "typeName": "u64",
                                    "docs": []
                                },
                                {
                                    "name": "identity",
                                    "type": "37",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "first",
                                    "type": "213",
                                    "typeName": "(V, S)",
                                    "docs": []
                                },
                                {
                                    "name": "second",
                                    "type": "213",
                                    "typeName": "(V, S)",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "212",
                "type": {
                    "path": [
                        "finality_grandpa",
                        "Precommit"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        },
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "target_hash",
                                    "type": "9",
                                    "typeName": "H",
                                    "docs": []
                                },
                                {
                                    "name": "target_number",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "213",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "212",
                            "208"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "214",
                "type": {
                    "path": [
                        "pallet_grandpa",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "PauseFailed",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Attempt to signal GRANDPA pause when the authority set isn't live",
                                        "(either paused or already pending pause)."
                                    ]
                                },
                                {
                                    "name": "ResumeFailed",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Attempt to signal GRANDPA resume when the authority set isn't paused",
                                        "(either live or already pending resume)."
                                    ]
                                },
                                {
                                    "name": "ChangePending",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Attempt to signal GRANDPA change with one already pending."
                                    ]
                                },
                                {
                                    "name": "TooSoon",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Cannot signal forced change so soon after last."
                                    ]
                                },
                                {
                                    "name": "InvalidKeyOwnershipProof",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "A key ownership proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "InvalidEquivocationProof",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "An equivocation proof provided as part of an equivocation report is invalid."
                                    ]
                                },
                                {
                                    "name": "DuplicateOffenceReport",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "A given equivocation report is valid but already previously reported."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "215",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "40"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "216",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "4",
                            "0"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "217",
                "type": {
                    "path": [
                        "pallet_im_online",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "heartbeat",
                                    "fields": [
                                        {
                                            "name": "heartbeat",
                                            "type": "218",
                                            "typeName": "Heartbeat<T::BlockNumber>",
                                            "docs": []
                                        },
                                        {
                                            "name": "signature",
                                            "type": "223",
                                            "typeName": "<T::AuthorityId as RuntimeAppPublic>::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "# <weight>",
                                        "- Complexity: `O(K + E)` where K is length of `Keys` (heartbeat.validators_len) and E is",
                                        "  length of `heartbeat.network_state.external_address`",
                                        "  - `O(K)`: decoding of length `K`",
                                        "  - `O(E)`: decoding\/encoding of length `E`",
                                        "- DbReads: pallet_session `Validators`, pallet_session `CurrentIndex`, `Keys`,",
                                        "  `ReceivedHeartbeats`",
                                        "- DbWrites: `ReceivedHeartbeats`",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "218",
                "type": {
                    "path": [
                        "pallet_im_online",
                        "Heartbeat"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "block_number",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "network_state",
                                    "type": "219",
                                    "typeName": "OpaqueNetworkState",
                                    "docs": []
                                },
                                {
                                    "name": "session_index",
                                    "type": "4",
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "authority_index",
                                    "type": "4",
                                    "typeName": "AuthIndex",
                                    "docs": []
                                },
                                {
                                    "name": "validators_len",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "219",
                "type": {
                    "path": [
                        "sp_core",
                        "offchain",
                        "OpaqueNetworkState"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "peer_id",
                                    "type": "220",
                                    "typeName": "OpaquePeerId",
                                    "docs": []
                                },
                                {
                                    "name": "external_addresses",
                                    "type": "221",
                                    "typeName": "Vec<OpaqueMultiaddr>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "220",
                "type": {
                    "path": [
                        "sp_core",
                        "OpaquePeerId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "10",
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "221",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "222"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "222",
                "type": {
                    "path": [
                        "sp_core",
                        "offchain",
                        "OpaqueMultiaddr"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "10",
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "223",
                "type": {
                    "path": [
                        "pallet_im_online",
                        "sr25519",
                        "app_sr25519",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "51",
                                    "typeName": "sr25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "224",
                "type": {
                    "path": [
                        "pallet_im_online",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidKey",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Non existent public key."
                                    ]
                                },
                                {
                                    "name": "DuplicatedHeartbeat",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Duplicated heartbeat."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "225",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "HostConfiguration"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "max_code_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_head_data_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_queue_count",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_queue_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_message_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_upward_message_num_per_candidate",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_message_num_per_candidate",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "validation_upgrade_frequency",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "validation_upgrade_delay",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "max_pov_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_downward_message_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "ump_service_total_weight",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parachain_outbound_channels",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parathread_outbound_channels",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_sender_deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_recipient_deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_channel_max_capacity",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_channel_max_total_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parachain_inbound_channels",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_max_parathread_inbound_channels",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_channel_max_message_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "code_retention_period",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "parathread_cores",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "parathread_retries",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "group_rotation_frequency",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "chain_availability_period",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "thread_availability_period",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "scheduling_lookahead",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_validators_per_core",
                                    "type": "202",
                                    "typeName": "Option<u32>",
                                    "docs": []
                                },
                                {
                                    "name": "max_validators",
                                    "type": "202",
                                    "typeName": "Option<u32>",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_period",
                                    "type": "4",
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_post_conclusion_acceptance_period",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_max_spam_slots",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "dispute_conclusion_by_time_out_period",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "no_show_slots",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "n_delay_tranches",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "zeroth_delay_tranche_width",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "needed_approvals",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "relay_vrf_modulo_samples",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "ump_max_individual_weight",
                                    "type": "8",
                                    "typeName": "Weight",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "226",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_validation_upgrade_frequency",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the validation upgrade frequency."
                                    ]
                                },
                                {
                                    "name": "set_validation_upgrade_delay",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the validation upgrade delay."
                                    ]
                                },
                                {
                                    "name": "set_code_retention_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Set the acceptance period for an included candidate."
                                    ]
                                },
                                {
                                    "name": "set_max_code_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Set the max validation code size for incoming upgrades."
                                    ]
                                },
                                {
                                    "name": "set_max_pov_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Set the max POV block size for incoming upgrades."
                                    ]
                                },
                                {
                                    "name": "set_max_head_data_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set the max head data size for paras."
                                    ]
                                },
                                {
                                    "name": "set_parathread_cores",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Set the number of parathread execution cores."
                                    ]
                                },
                                {
                                    "name": "set_parathread_retries",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Set the number of retries for a particular parathread."
                                    ]
                                },
                                {
                                    "name": "set_group_rotation_frequency",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Set the parachain validator-group rotation frequency"
                                    ]
                                },
                                {
                                    "name": "set_chain_availability_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Set the availability period for parachains."
                                    ]
                                },
                                {
                                    "name": "set_thread_availability_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": [
                                        "Set the availability period for parathreads."
                                    ]
                                },
                                {
                                    "name": "set_scheduling_lookahead",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": [
                                        "Set the scheduling lookahead, in expected number of blocks at peak throughput."
                                    ]
                                },
                                {
                                    "name": "set_max_validators_per_core",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "202",
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": [
                                        "Set the maximum number of validators to assign to any core."
                                    ]
                                },
                                {
                                    "name": "set_max_validators",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "202",
                                            "typeName": "Option<u32>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": [
                                        "Set the maximum number of validators to use in parachain consensus."
                                    ]
                                },
                                {
                                    "name": "set_dispute_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "SessionIndex",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": [
                                        "Set the dispute period, in number of sessions to keep for disputes."
                                    ]
                                },
                                {
                                    "name": "set_dispute_post_conclusion_acceptance_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": [
                                        "Set the dispute post conclusion acceptance period."
                                    ]
                                },
                                {
                                    "name": "set_dispute_max_spam_slots",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": [
                                        "Set the maximum number of dispute spam slots."
                                    ]
                                },
                                {
                                    "name": "set_dispute_conclusion_by_time_out_period",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": [
                                        "Set the dispute conclusion by time out period."
                                    ]
                                },
                                {
                                    "name": "set_no_show_slots",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": [
                                        "Set the no show slots, in number of number of consensus slots.",
                                        "Must be at least 1."
                                    ]
                                },
                                {
                                    "name": "set_n_delay_tranches",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": [
                                        "Set the total number of delay tranches."
                                    ]
                                },
                                {
                                    "name": "set_zeroth_delay_tranche_width",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": [
                                        "Set the zeroth delay tranche width."
                                    ]
                                },
                                {
                                    "name": "set_needed_approvals",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": [
                                        "Set the number of validators needed to approve a block."
                                    ]
                                },
                                {
                                    "name": "set_relay_vrf_modulo_samples",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": [
                                        "Set the number of samples to do of the `RelayVRFModulo` approval assignment criterion."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_queue_count",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": [
                                        "Sets the maximum items that can present in a upward dispatch queue at once."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_queue_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": [
                                        "Sets the maximum total size of items that can present in a upward dispatch queue at once."
                                    ]
                                },
                                {
                                    "name": "set_max_downward_message_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": [
                                        "Set the critical downward message size."
                                    ]
                                },
                                {
                                    "name": "set_ump_service_total_weight",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": [
                                        "Sets the soft limit for the phase of dispatching dispatchable upward messages."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_message_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": [
                                        "Sets the maximum size of an upward message that can be sent by a candidate."
                                    ]
                                },
                                {
                                    "name": "set_max_upward_message_num_per_candidate",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": [
                                        "Sets the maximum number of messages that a candidate can contain."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_open_request_ttl",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": [
                                        "Sets the number of sessions after which an HRMP open channel request expires."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_sender_deposit",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "6",
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": [
                                        "Sets the amount of funds that the sender should provide for opening an HRMP channel."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_recipient_deposit",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "6",
                                            "typeName": "Balance",
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": [
                                        "Sets the amount of funds that the recipient should provide for accepting opening an HRMP",
                                        "channel."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_channel_max_capacity",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 32,
                                    "docs": [
                                        "Sets the maximum number of messages allowed in an HRMP channel at once."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_channel_max_total_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 33,
                                    "docs": [
                                        "Sets the maximum total size of messages in bytes allowed in an HRMP channel at once."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parachain_inbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": [
                                        "Sets the maximum number of inbound HRMP channels a parachain is allowed to accept."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parathread_inbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": [
                                        "Sets the maximum number of inbound HRMP channels a parathread is allowed to accept."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_channel_max_message_size",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": [
                                        "Sets the maximum size of a message that could ever be put into an HRMP channel."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parachain_outbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": [
                                        "Sets the maximum number of outbound HRMP channels a parachain is allowed to open."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_parathread_outbound_channels",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 38,
                                    "docs": [
                                        "Sets the maximum number of outbound HRMP channels a parathread is allowed to open."
                                    ]
                                },
                                {
                                    "name": "set_hrmp_max_message_num_per_candidate",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 39,
                                    "docs": [
                                        "Sets the maximum number of outbound HRMP messages can be sent by a candidate."
                                    ]
                                },
                                {
                                    "name": "set_ump_max_individual_weight",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 40,
                                    "docs": [
                                        "Sets the maximum amount of weight any individual upward message may consume."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "227",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "configuration",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "InvalidNewValue",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The new value for a configuration parameter is invalid."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "228",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "229"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "229",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v0",
                        "ValidatorIndex"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "230",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "189"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "231",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "shared",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "232",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "AvailabilityBitfieldRecord"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "bitfield",
                                    "type": "233",
                                    "typeName": "AvailabilityBitfield",
                                    "docs": []
                                },
                                {
                                    "name": "submitted_at",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "233",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "AvailabilityBitfield"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "234",
                                    "typeName": "BitVec<bitvec::order::Lsb0, u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "234",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "BitSequence": {
                            "bitStoreType": "2",
                            "bitOrderType": "235"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "235",
                "type": {
                    "path": [
                        "bitvec",
                        "order",
                        "Lsb0"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "236",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "CandidatePendingAvailability"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        },
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "core",
                                    "type": "55",
                                    "typeName": "CoreIndex",
                                    "docs": []
                                },
                                {
                                    "name": "hash",
                                    "type": "64",
                                    "typeName": "CandidateHash",
                                    "docs": []
                                },
                                {
                                    "name": "descriptor",
                                    "type": "47",
                                    "typeName": "CandidateDescriptor<H>",
                                    "docs": []
                                },
                                {
                                    "name": "availability_votes",
                                    "type": "234",
                                    "typeName": "BitVec<BitOrderLsb0, u8>",
                                    "docs": []
                                },
                                {
                                    "name": "backers",
                                    "type": "234",
                                    "typeName": "BitVec<BitOrderLsb0, u8>",
                                    "docs": []
                                },
                                {
                                    "name": "relay_parent_number",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "backed_in_number",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "backing_group",
                                    "type": "56",
                                    "typeName": "GroupIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "237",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "CandidateCommitments"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "upward_messages",
                                    "type": "129",
                                    "typeName": "Vec<UpwardMessage>",
                                    "docs": []
                                },
                                {
                                    "name": "horizontal_messages",
                                    "type": "238",
                                    "typeName": "Vec<OutboundHrmpMessage<Id>>",
                                    "docs": []
                                },
                                {
                                    "name": "new_validation_code",
                                    "type": "240",
                                    "typeName": "Option<ValidationCode>",
                                    "docs": []
                                },
                                {
                                    "name": "head_data",
                                    "type": "54",
                                    "typeName": "HeadData",
                                    "docs": []
                                },
                                {
                                    "name": "processed_downward_messages",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "hrmp_watermark",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "238",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "239"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "239",
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "OutboundHrmpMessage"
                    ],
                    "params": [
                        {
                            "name": "Id",
                            "type": "48"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "recipient",
                                    "type": "48",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": "data",
                                    "type": "10",
                                    "typeName": "sp_std::vec::Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "240",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "241"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "241",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "241",
                "type": {
                    "path": [
                        "polkadot_parachain",
                        "primitives",
                        "ValidationCode"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "10",
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "242",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "243",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "inclusion",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WrongBitfieldSize",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Availability bitfield has unexpected size."
                                    ]
                                },
                                {
                                    "name": "BitfieldDuplicateOrUnordered",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Multiple bitfields submitted by same validator or validators out of order by index."
                                    ]
                                },
                                {
                                    "name": "ValidatorIndexOutOfBounds",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Validator index out of bounds."
                                    ]
                                },
                                {
                                    "name": "InvalidBitfieldSignature",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Invalid signature"
                                    ]
                                },
                                {
                                    "name": "UnscheduledCandidate",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Candidate submitted but para not scheduled."
                                    ]
                                },
                                {
                                    "name": "CandidateScheduledBeforeParaFree",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Candidate scheduled despite pending candidate already existing for the para."
                                    ]
                                },
                                {
                                    "name": "WrongCollator",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Candidate included with the wrong collator."
                                    ]
                                },
                                {
                                    "name": "ScheduledOutOfOrder",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Scheduled cores out of order."
                                    ]
                                },
                                {
                                    "name": "HeadDataTooLarge",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Head data exceeds the configured maximum."
                                    ]
                                },
                                {
                                    "name": "PrematureCodeUpgrade",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Code upgrade prematurely."
                                    ]
                                },
                                {
                                    "name": "NewCodeTooLarge",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Output code is too large"
                                    ]
                                },
                                {
                                    "name": "CandidateNotInParentContext",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "Candidate not in parent context."
                                    ]
                                },
                                {
                                    "name": "UnoccupiedBitInBitfield",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The bitfield contains a bit relating to an unassigned availability core."
                                    ]
                                },
                                {
                                    "name": "InvalidGroupIndex",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "Invalid group index in core assignment."
                                    ]
                                },
                                {
                                    "name": "InsufficientBacking",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "Insufficient (non-majority) backing."
                                    ]
                                },
                                {
                                    "name": "InvalidBacking",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Invalid (bad signature, unknown validator, etc.) backing."
                                    ]
                                },
                                {
                                    "name": "NotCollatorSigned",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "Collator did not sign PoV."
                                    ]
                                },
                                {
                                    "name": "ValidationDataHashMismatch",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "The validation data hash does not match expected."
                                    ]
                                },
                                {
                                    "name": "InternalError",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Internal error only returned when compiled with debug assertions."
                                    ]
                                },
                                {
                                    "name": "IncorrectDownwardMessageHandling",
                                    "fields": [],
                                    "index": 19,
                                    "docs": [
                                        "The downward message queue is not processed correctly."
                                    ]
                                },
                                {
                                    "name": "InvalidUpwardMessages",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "At least one upward message sent does not pass the acceptance criteria."
                                    ]
                                },
                                {
                                    "name": "HrmpWatermarkMishandling",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "The candidate didn't follow the rules of HRMP watermark advancement."
                                    ]
                                },
                                {
                                    "name": "InvalidOutboundHrmp",
                                    "fields": [],
                                    "index": 22,
                                    "docs": [
                                        "The HRMP messages sent by the candidate is not valid."
                                    ]
                                },
                                {
                                    "name": "InvalidValidationCodeHash",
                                    "fields": [],
                                    "index": 23,
                                    "docs": [
                                        "The validation code hash of the candidate is not valid."
                                    ]
                                },
                                {
                                    "name": "ParaHeadMismatch",
                                    "fields": [],
                                    "index": 24,
                                    "docs": [
                                        "The `para_head` hash in the candidate descriptor doesn't match the hash of the actual para head in the",
                                        "commitments."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "244",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras_inherent",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "enter",
                                    "fields": [
                                        {
                                            "name": "data",
                                            "type": "245",
                                            "typeName": "ParachainsInherentData<T::Header>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Enter the paras inherent. This will process bitfields and backed candidates."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "245",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "InherentData"
                    ],
                    "params": [
                        {
                            "name": "HDR",
                            "type": "154"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "bitfields",
                                    "type": "246",
                                    "typeName": "UncheckedSignedAvailabilityBitfields",
                                    "docs": []
                                },
                                {
                                    "name": "backed_candidates",
                                    "type": "249",
                                    "typeName": "Vec<BackedCandidate<HDR::Hash>>",
                                    "docs": []
                                },
                                {
                                    "name": "disputes",
                                    "type": "254",
                                    "typeName": "MultiDisputeStatementSet",
                                    "docs": []
                                },
                                {
                                    "name": "parent_header",
                                    "type": "154",
                                    "typeName": "HDR",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "246",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "247"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "247",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "signed",
                        "UncheckedSigned"
                    ],
                    "params": [
                        {
                            "name": "Payload",
                            "type": "233"
                        },
                        {
                            "name": "RealPayload",
                            "type": "233"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "payload",
                                    "type": "233",
                                    "typeName": "Payload",
                                    "docs": []
                                },
                                {
                                    "name": "validator_index",
                                    "type": "229",
                                    "typeName": "ValidatorIndex",
                                    "docs": []
                                },
                                {
                                    "name": "signature",
                                    "type": "248",
                                    "typeName": "ValidatorSignature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "248",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v0",
                        "validator_app",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "51",
                                    "typeName": "sr25519::Signature",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "249",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "250"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "250",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "BackedCandidate"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "candidate",
                                    "type": "251",
                                    "typeName": "CommittedCandidateReceipt<H>",
                                    "docs": []
                                },
                                {
                                    "name": "validity_votes",
                                    "type": "252",
                                    "typeName": "Vec<ValidityAttestation>",
                                    "docs": []
                                },
                                {
                                    "name": "validator_indices",
                                    "type": "234",
                                    "typeName": "BitVec<bitvec::order::Lsb0, u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "251",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "CommittedCandidateReceipt"
                    ],
                    "params": [
                        {
                            "name": "H",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "descriptor",
                                    "type": "47",
                                    "typeName": "CandidateDescriptor<H>",
                                    "docs": []
                                },
                                {
                                    "name": "commitments",
                                    "type": "237",
                                    "typeName": "CandidateCommitments",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "252",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "253"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "253",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v0",
                        "ValidityAttestation"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Implicit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "248",
                                            "typeName": "ValidatorSignature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Explicit",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "248",
                                            "typeName": "ValidatorSignature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "254",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "255"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "255",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "DisputeStatementSet"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "candidate_hash",
                                    "type": "64",
                                    "typeName": "CandidateHash",
                                    "docs": []
                                },
                                {
                                    "name": "session",
                                    "type": "4",
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "statements",
                                    "type": "256",
                                    "typeName": "Vec<(DisputeStatement, ValidatorIndex, ValidatorSignature)>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "256",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "257"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "257",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "258",
                            "229",
                            "248"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "258",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "DisputeStatement"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Valid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "259",
                                            "typeName": "ValidDisputeStatementKind",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Invalid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "260",
                                            "typeName": "InvalidDisputeStatementKind",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "259",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "ValidDisputeStatementKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Explicit",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "BackingSeconded",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "BackingValid",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": "Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ApprovalChecking",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "260",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "InvalidDisputeStatementKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Explicit",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "261",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras_inherent",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooManyInclusionInherents",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Inclusion inherent called more than once per block."
                                    ]
                                },
                                {
                                    "name": "InvalidParentHeader",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The hash of the submitted parent header doesn't correspond to the saved block hash of",
                                        "the parent."
                                    ]
                                },
                                {
                                    "name": "CandidateCouldBeInvalid",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Potentially invalid candidate."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "262",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "228"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "263",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "ParathreadClaimQueue"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "queue",
                                    "type": "264",
                                    "typeName": "Vec<QueuedParathread>",
                                    "docs": []
                                },
                                {
                                    "name": "next_core_offset",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "264",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "265"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "265",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "QueuedParathread"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "claim",
                                    "type": "266",
                                    "typeName": "ParathreadEntry",
                                    "docs": []
                                },
                                {
                                    "name": "core_offset",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "266",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "ParathreadEntry"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "claim",
                                    "type": "267",
                                    "typeName": "ParathreadClaim",
                                    "docs": []
                                },
                                {
                                    "name": "retries",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "267",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "ParathreadClaim"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "48",
                                    "typeName": "Id",
                                    "docs": []
                                },
                                {
                                    "name": null,
                                    "type": "49",
                                    "typeName": "CollatorId",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "268",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "269"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "269",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "270"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "270",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "270",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "CoreOccupied"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parathread",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "266",
                                            "typeName": "ParathreadEntry",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parachain",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "271",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "48"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "272",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "273"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "273",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "CoreAssignment"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "core",
                                    "type": "55",
                                    "typeName": "CoreIndex",
                                    "docs": []
                                },
                                {
                                    "name": "para_id",
                                    "type": "48",
                                    "typeName": "ParaId",
                                    "docs": []
                                },
                                {
                                    "name": "kind",
                                    "type": "274",
                                    "typeName": "AssignmentKind",
                                    "docs": []
                                },
                                {
                                    "name": "group_idx",
                                    "type": "56",
                                    "typeName": "GroupIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "274",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "scheduler",
                        "AssignmentKind"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Parachain",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parathread",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "49",
                                            "typeName": "CollatorId",
                                            "docs": []
                                        },
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "275",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaLifecycle"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Onboarding",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Parathread",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Parachain",
                                    "fields": [],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "UpgradingParathread",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "DowngradingParachain",
                                    "fields": [],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "OffboardingParathread",
                                    "fields": [],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "OffboardingParachain",
                                    "fields": [],
                                    "index": 6,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "276",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "48",
                            "4"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "277",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaPastCodeMeta"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "upgrade_times",
                                    "type": "278",
                                    "typeName": "Vec<ReplacementTimes<N>>",
                                    "docs": []
                                },
                                {
                                    "name": "last_pruned",
                                    "type": "202",
                                    "typeName": "Option<N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "278",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "279"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "279",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ReplacementTimes"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "expected_at",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "activated_at",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "280",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "276"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "281",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "UpgradeGoAhead"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Abort",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "GoAhead",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "282",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "UpgradeRestriction"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Present",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "283",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "ParaGenesisArgs"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "genesis_head",
                                    "type": "54",
                                    "typeName": "HeadData",
                                    "docs": []
                                },
                                {
                                    "name": "validation_code",
                                    "type": "241",
                                    "typeName": "ValidationCode",
                                    "docs": []
                                },
                                {
                                    "name": "parachain",
                                    "type": "76",
                                    "typeName": "bool",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "284",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_set_current_code",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_code",
                                            "type": "241",
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the storage for the parachain validation code immediately."
                                    ]
                                },
                                {
                                    "name": "force_set_current_head",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_head",
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Set the storage for the current parachain head data immediately."
                                    ]
                                },
                                {
                                    "name": "force_schedule_code_upgrade",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_code",
                                            "type": "241",
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        },
                                        {
                                            "name": "relay_parent_number",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Schedule an upgrade as if it was scheduled in the given relay parent block."
                                    ]
                                },
                                {
                                    "name": "force_note_new_head",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "new_head",
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Note a new block head for para within the context of the current block."
                                    ]
                                },
                                {
                                    "name": "force_queue_action",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Put a parachain directly into the next session's action queue.",
                                        "We can't queue it any sooner than this without going into the",
                                        "initializer..."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "285",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "paras",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotRegistered",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Para is not registered in our system."
                                    ]
                                },
                                {
                                    "name": "CannotOnboard",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Para cannot be onboarded because it is already tracked by our system."
                                    ]
                                },
                                {
                                    "name": "CannotOffboard",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Para cannot be offboarded at this time."
                                    ]
                                },
                                {
                                    "name": "CannotUpgrade",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Para cannot be upgraded to a parachain."
                                    ]
                                },
                                {
                                    "name": "CannotDowngrade",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Para cannot be downgraded to a parathread."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "286",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "287"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "287",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "initializer",
                        "BufferedSessionChange"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "validators",
                                    "type": "230",
                                    "typeName": "Vec<ValidatorId>",
                                    "docs": []
                                },
                                {
                                    "name": "queued",
                                    "type": "230",
                                    "typeName": "Vec<ValidatorId>",
                                    "docs": []
                                },
                                {
                                    "name": "session_index",
                                    "type": "4",
                                    "typeName": "SessionIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "288",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "initializer",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_approve",
                                    "fields": [
                                        {
                                            "name": "up_to",
                                            "type": "4",
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Issue a signal to the consensus engine to forcibly act as though all parachain",
                                        "blocks in all relay chain blocks up to and including the given number in the current",
                                        "chain are valid and should be finalized."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "289",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "290"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "290",
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "InboundDownwardMessage"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "sent_at",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "msg",
                                    "type": "10",
                                    "typeName": "DownwardMessage",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "291",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "dmp",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "292",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "48",
                            "10"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "293",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "ump",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "service_overweight",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "8",
                                            "typeName": "OverweightIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Service a single overweight upward message.",
                                        "",
                                        "- `origin`: Must pass `ExecuteOverweightOrigin`.",
                                        "- `index`: The index of the overweight message to service.",
                                        "- `weight_limit`: The amount of weight that message execution may take.",
                                        "",
                                        "Errors:",
                                        "- `UnknownMessageIndex`: Message of `index` is unknown.",
                                        "- `WeightOverLimit`: Message execution may use greater than `weight_limit`.",
                                        "",
                                        "Events:",
                                        "- `OverweightServiced`: On success."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "294",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "ump",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "UnknownMessageIndex",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The message index given is unknown."
                                    ]
                                },
                                {
                                    "name": "WeightOverLimit",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The amount of weight given is possibly not enough for executing the message."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "295",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "HrmpOpenChannelRequest"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "confirmed",
                                    "type": "76",
                                    "typeName": "bool",
                                    "docs": []
                                },
                                {
                                    "name": "_age",
                                    "type": "4",
                                    "typeName": "SessionIndex",
                                    "docs": []
                                },
                                {
                                    "name": "sender_deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "max_message_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_capacity",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_total_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "296",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "62"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "297",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "HrmpChannel"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "max_capacity",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_total_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "max_message_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "msg_count",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "total_size",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "mqc_head",
                                    "type": "298",
                                    "typeName": "Option<Hash>",
                                    "docs": []
                                },
                                {
                                    "name": "sender_deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "recipient_deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "298",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "9",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "299",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "300"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "300",
                "type": {
                    "path": [
                        "polkadot_core_primitives",
                        "InboundHrmpMessage"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "sent_at",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "data",
                                    "type": "10",
                                    "typeName": "sp_std::vec::Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "301",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "302"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "302",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "4",
                            "271"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "303",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "hrmp_init_open_channel",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposed_max_capacity",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposed_max_message_size",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Initiate opening a channel from a parachain to a given recipient with given channel",
                                        "parameters.",
                                        "",
                                        "- `proposed_max_capacity` - specifies how many messages can be in the channel at once.",
                                        "- `proposed_max_message_size` - specifies the maximum size of any of the messages.",
                                        "",
                                        "These numbers are a subject to the relay-chain configuration limits.",
                                        "",
                                        "The channel can be opened only after the recipient confirms it and only on a session",
                                        "change."
                                    ]
                                },
                                {
                                    "name": "hrmp_accept_open_channel",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Accept a pending open channel request from the given sender.",
                                        "",
                                        "The channel will be opened only on the next session boundary."
                                    ]
                                },
                                {
                                    "name": "hrmp_close_channel",
                                    "fields": [
                                        {
                                            "name": "channel_id",
                                            "type": "62",
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Initiate unilateral closing of a channel. The origin must be either the sender or the",
                                        "recipient in the channel being closed.",
                                        "",
                                        "The closure can only happen on a session change."
                                    ]
                                },
                                {
                                    "name": "force_clean_hrmp",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "This extrinsic triggers the cleanup of all the HRMP storage items that",
                                        "a para may have. Normally this happens once per session, but this allows",
                                        "you to trigger the cleanup immediately for a specific parachain.",
                                        "",
                                        "Origin must be Root."
                                    ]
                                },
                                {
                                    "name": "force_process_hrmp_open",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Force process HRMP open channel requests.",
                                        "",
                                        "If there are pending HRMP open channel requests, you can use this",
                                        "function process all of those requests immediately."
                                    ]
                                },
                                {
                                    "name": "force_process_hrmp_close",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Force process HRMP close channel requests.",
                                        "",
                                        "If there are pending HRMP close channel requests, you can use this",
                                        "function process all of those requests immediately."
                                    ]
                                },
                                {
                                    "name": "hrmp_cancel_open_request",
                                    "fields": [
                                        {
                                            "name": "channel_id",
                                            "type": "62",
                                            "typeName": "HrmpChannelId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "This cancels a pending open channel request. It can be canceled be either of the sender",
                                        "or the recipient for that request. The origin must be either of those.",
                                        "",
                                        "The cancelling happens immediately. It is not possible to cancel the request if it is",
                                        "already accepted."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "304",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "hrmp",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "OpenHrmpChannelToSelf",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The sender tried to open a channel to themselves."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelInvalidRecipient",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The recipient is not a valid para."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelZeroCapacity",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The requested capacity is zero."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelCapacityExceedsLimit",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The requested capacity exceeds the global limit."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelZeroMessageSize",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The requested maximum message size is 0."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelMessageSizeExceedsLimit",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The open request requested the message size that exceeds the global limit."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelAlreadyExists",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The channel already exists"
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelAlreadyRequested",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "There is already a request to open the same channel."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelLimitExceeded",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The sender already has the maximum number of allowed outbound channels."
                                    ]
                                },
                                {
                                    "name": "AcceptHrmpChannelDoesntExist",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The channel from the sender to the origin doesn't exist."
                                    ]
                                },
                                {
                                    "name": "AcceptHrmpChannelAlreadyConfirmed",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The channel is already confirmed."
                                    ]
                                },
                                {
                                    "name": "AcceptHrmpChannelLimitExceeded",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The recipient already has the maximum number of allowed inbound channels."
                                    ]
                                },
                                {
                                    "name": "CloseHrmpChannelUnauthorized",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The origin tries to close a channel where it is neither the sender nor the recipient."
                                    ]
                                },
                                {
                                    "name": "CloseHrmpChannelDoesntExist",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "The channel to be closed doesn't exist."
                                    ]
                                },
                                {
                                    "name": "CloseHrmpChannelAlreadyUnderway",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "The channel close request is already requested."
                                    ]
                                },
                                {
                                    "name": "CancelHrmpOpenChannelUnauthorized",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "Canceling is requested by neither the sender nor recipient of the open channel request."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelDoesntExist",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "The open request doesn't exist."
                                    ]
                                },
                                {
                                    "name": "OpenHrmpChannelAlreadyConfirmed",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "Cannot cancel an HRMP open channel request because it is already confirmed."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "305",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "190"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "306",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "SessionInfo"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "validators",
                                    "type": "230",
                                    "typeName": "Vec<ValidatorId>",
                                    "docs": []
                                },
                                {
                                    "name": "discovery_keys",
                                    "type": "307",
                                    "typeName": "Vec<AuthorityDiscoveryId>",
                                    "docs": []
                                },
                                {
                                    "name": "assignment_keys",
                                    "type": "305",
                                    "typeName": "Vec<AssignmentId>",
                                    "docs": []
                                },
                                {
                                    "name": "validator_groups",
                                    "type": "262",
                                    "typeName": "Vec<Vec<ValidatorIndex>>",
                                    "docs": []
                                },
                                {
                                    "name": "n_cores",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "zeroth_delay_tranche_width",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "relay_vrf_modulo_samples",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "n_delay_tranches",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "no_show_slots",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "needed_approvals",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "307",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "191"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "308",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "4",
                            "64"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "309",
                "type": {
                    "path": [
                        "polkadot_primitives",
                        "v1",
                        "DisputeState"
                    ],
                    "params": [
                        {
                            "name": "N",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "validators_for",
                                    "type": "234",
                                    "typeName": "BitVec<bitvec::order::Lsb0, u8>",
                                    "docs": []
                                },
                                {
                                    "name": "validators_against",
                                    "type": "234",
                                    "typeName": "BitVec<bitvec::order::Lsb0, u8>",
                                    "docs": []
                                },
                                {
                                    "name": "start",
                                    "type": "4",
                                    "typeName": "N",
                                    "docs": []
                                },
                                {
                                    "name": "concluded_at",
                                    "type": "202",
                                    "typeName": "Option<N>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "310",
                "type": {
                    "path": [
                        "polkadot_runtime_parachains",
                        "disputes",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "DuplicateDisputeStatementSets",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Duplicate dispute statement sets provided."
                                    ]
                                },
                                {
                                    "name": "AncientDisputeStatement",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Ancient dispute statement provided."
                                    ]
                                },
                                {
                                    "name": "ValidatorIndexOutOfBounds",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Validator index on statement is out of bounds for session."
                                    ]
                                },
                                {
                                    "name": "InvalidSignature",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Invalid signature on statement."
                                    ]
                                },
                                {
                                    "name": "DuplicateStatement",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Validator vote submitted more than once to dispute."
                                    ]
                                },
                                {
                                    "name": "PotentialSpam",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Too many spam slots used by some specific validator."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "311",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "ParaInfo"
                    ],
                    "params": [
                        {
                            "name": "Account",
                            "type": null
                        },
                        {
                            "name": "Balance",
                            "type": "6"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "manager",
                                    "type": "0",
                                    "typeName": "Account",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "locked",
                                    "type": "76",
                                    "typeName": "bool",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "312",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "register",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "genesis_head",
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": "validation_code",
                                            "type": "241",
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Register head data and validation code for a reserved Para Id.",
                                        "",
                                        "## Arguments",
                                        "- `origin`: Must be called by a `Signed` origin.",
                                        "- `id`: The para ID. Must be owned\/managed by the `origin` signing account.",
                                        "- `genesis_head`: The genesis head data of the parachain\/thread.",
                                        "- `validation_code`: The initial validation code of the parachain\/thread.",
                                        "",
                                        "## Deposits\/Fees",
                                        "The origin signed account must reserve a corresponding deposit for the registration. Anything already",
                                        "reserved previously for this para ID is accounted for.",
                                        "",
                                        "## Events",
                                        "The `Registered` event is emitted in case of success."
                                    ]
                                },
                                {
                                    "name": "force_register",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "deposit",
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "genesis_head",
                                            "type": "54",
                                            "typeName": "HeadData",
                                            "docs": []
                                        },
                                        {
                                            "name": "validation_code",
                                            "type": "241",
                                            "typeName": "ValidationCode",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Force the registration of a Para Id on the relay chain.",
                                        "",
                                        "This function must be called by a Root origin.",
                                        "",
                                        "The deposit taken can be specified for this registration. Any `ParaId`",
                                        "can be registered, including sub-1000 IDs which are System Parachains."
                                    ]
                                },
                                {
                                    "name": "deregister",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Deregister a Para Id, freeing all data and returning any deposit.",
                                        "",
                                        "The caller must be Root, the `para` owner, or the `para` itself. The para must be a parathread."
                                    ]
                                },
                                {
                                    "name": "swap",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "other",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Swap a parachain with another parachain or parathread.",
                                        "",
                                        "The origin must be Root, the `para` owner, or the `para` itself.",
                                        "",
                                        "The swap will happen only if there is already an opposite swap pending. If there is not,",
                                        "the swap will be stored in the pending swaps map, ready for a later confirmatory swap.",
                                        "",
                                        "The `ParaId`s remain mapped to the same head data and code so external code can rely on",
                                        "`ParaId` to be a long-term identifier of a notional \"parachain\". However, their",
                                        "scheduling info (i.e. whether they're a parathread or parachain), auction information",
                                        "and the auction deposit are switched."
                                    ]
                                },
                                {
                                    "name": "force_remove_lock",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Remove a manager lock from a para. This will allow the manager of a",
                                        "previously locked para to deregister or swap a para without using governance.",
                                        "",
                                        "Can only be called by the Root origin."
                                    ]
                                },
                                {
                                    "name": "reserve",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Reserve a Para Id on the relay chain.",
                                        "",
                                        "This function will reserve a new Para Id to be owned\/managed by the origin account.",
                                        "The origin account is able to register head data and validation code using `register` to create",
                                        "a parathread. Using the Slots pallet, a parathread can then be upgraded to get a parachain slot.",
                                        "",
                                        "## Arguments",
                                        "- `origin`: Must be called by a `Signed` origin. Becomes the manager\/owner of the new para ID.",
                                        "",
                                        "## Deposits\/Fees",
                                        "The origin must reserve a deposit of `ParaDeposit` for the registration.",
                                        "",
                                        "## Events",
                                        "The `Reserved` event is emitted in case of success, which provides the ID reserved for use."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "313",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_registrar",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotRegistered",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The ID is not registered."
                                    ]
                                },
                                {
                                    "name": "AlreadyRegistered",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The ID is already registered."
                                    ]
                                },
                                {
                                    "name": "NotOwner",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The caller is not the owner of this Id."
                                    ]
                                },
                                {
                                    "name": "CodeTooLarge",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Invalid para code size."
                                    ]
                                },
                                {
                                    "name": "HeadDataTooLarge",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Invalid para head data size."
                                    ]
                                },
                                {
                                    "name": "NotParachain",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Para is not a Parachain."
                                    ]
                                },
                                {
                                    "name": "NotParathread",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Para is not a Parathread."
                                    ]
                                },
                                {
                                    "name": "CannotDeregister",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Cannot deregister para"
                                    ]
                                },
                                {
                                    "name": "CannotDowngrade",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Cannot schedule downgrade of parachain to parathread"
                                    ]
                                },
                                {
                                    "name": "CannotUpgrade",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Cannot schedule upgrade of parathread to parachain"
                                    ]
                                },
                                {
                                    "name": "ParaLocked",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "Para is locked from manipulation by the manager. Must use parachain or relay chain governance."
                                    ]
                                },
                                {
                                    "name": "NotReserved",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The ID given for registration has not been reserved."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "314",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "0",
                            "48"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "315",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 36,
                            "type": "316"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "316",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "317"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "317",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "317",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "0",
                            "48",
                            "6"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "318",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "new_auction",
                                    "fields": [
                                        {
                                            "name": "duration",
                                            "type": "86",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "lease_period_index",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Create a new auction.",
                                        "",
                                        "This can only happen when there isn't already an auction in progress and may only be",
                                        "called by the root origin. Accepts the `duration` of this auction and the",
                                        "`lease_period_index` of the initial lease period of the four that are to be auctioned."
                                    ]
                                },
                                {
                                    "name": "bid",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "auction_index",
                                            "type": "86",
                                            "typeName": "AuctionIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_slot",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_slot",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": "90",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Make a new bid from an account (including a parachain account) for deploying a new",
                                        "parachain.",
                                        "",
                                        "Multiple simultaneous bids from the same bidder are allowed only as long as all active",
                                        "bids overlap each other (i.e. are mutually exclusive). Bids cannot be redacted.",
                                        "",
                                        "- `sub` is the sub-bidder ID, allowing for multiple competing bids to be made by (and",
                                        "funded by) the same account.",
                                        "- `auction_index` is the index of the auction to bid on. Should just be the present",
                                        "value of `AuctionCounter`.",
                                        "- `first_slot` is the first lease period index of the range to bid on. This is the",
                                        "absolute lease period index value, not an auction-specific offset.",
                                        "- `last_slot` is the last lease period index of the range to bid on. This is the",
                                        "absolute lease period index value, not an auction-specific offset.",
                                        "- `amount` is the amount to bid to be held as deposit for the parachain should the",
                                        "bid win. This amount is held throughout the range."
                                    ]
                                },
                                {
                                    "name": "cancel_auction",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Cancel an in-progress auction.",
                                        "",
                                        "Can only be called by Root origin."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "319",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Compact": {
                            "type": "48"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "320",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "auctions",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "AuctionInProgress",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "This auction is already in progress."
                                    ]
                                },
                                {
                                    "name": "LeasePeriodInPast",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The lease period is in the past."
                                    ]
                                },
                                {
                                    "name": "ParaNotRegistered",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Para is not registered"
                                    ]
                                },
                                {
                                    "name": "NotCurrentAuction",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Not a current auction."
                                    ]
                                },
                                {
                                    "name": "NotAuction",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Not an auction."
                                    ]
                                },
                                {
                                    "name": "AuctionEnded",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Auction has already ended."
                                    ]
                                },
                                {
                                    "name": "AlreadyLeasedOut",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The para is already leased out for part of this range."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "321",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "FundInfo"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": null
                        },
                        {
                            "name": "Balance",
                            "type": "6"
                        },
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        },
                        {
                            "name": "LeasePeriod",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "depositor",
                                    "type": "0",
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "verifier",
                                    "type": "322",
                                    "typeName": "Option<MultiSigner>",
                                    "docs": []
                                },
                                {
                                    "name": "deposit",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "raised",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "end",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                },
                                {
                                    "name": "cap",
                                    "type": "6",
                                    "typeName": "Balance",
                                    "docs": []
                                },
                                {
                                    "name": "last_contribution",
                                    "type": "324",
                                    "typeName": "LastContribution<BlockNumber>",
                                    "docs": []
                                },
                                {
                                    "name": "first_period",
                                    "type": "4",
                                    "typeName": "LeasePeriod",
                                    "docs": []
                                },
                                {
                                    "name": "last_period",
                                    "type": "4",
                                    "typeName": "LeasePeriod",
                                    "docs": []
                                },
                                {
                                    "name": "trie_index",
                                    "type": "4",
                                    "typeName": "TrieIndex",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "322",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "323"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "323",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "323",
                "type": {
                    "path": [
                        "sp_runtime",
                        "MultiSigner"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ed25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "38",
                                            "typeName": "ed25519::Public",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Sr25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "41",
                                            "typeName": "sr25519::Public",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ecdsa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "193",
                                            "typeName": "ecdsa::Public",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "324",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "LastContribution"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Never",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "PreEnding",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ending",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "325",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "create",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "cap",
                                            "type": "90",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_period",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_period",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "end",
                                            "type": "86",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "verifier",
                                            "type": "322",
                                            "typeName": "Option<MultiSigner>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Create a new crowdloaning campaign for a parachain slot with the given lease period range.",
                                        "",
                                        "This applies a lock to your parachain configuration, ensuring that it cannot be changed",
                                        "by the parachain manager."
                                    ]
                                },
                                {
                                    "name": "contribute",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "value",
                                            "type": "90",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "signature",
                                            "type": "326",
                                            "typeName": "Option<MultiSignature>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Contribute to a crowd sale. This will transfer some balance over to fund a parachain",
                                        "slot. It will be withdrawable when the crowdloan has ended and the funds are unused."
                                    ]
                                },
                                {
                                    "name": "withdraw",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Withdraw full balance of a specific contributor.",
                                        "",
                                        "Origin must be signed, but can come from anyone.",
                                        "",
                                        "The fund must be either in, or ready for, retirement. For a fund to be *in* retirement, then the retirement",
                                        "flag must be set. For a fund to be ready for retirement, then:",
                                        "- it must not already be in retirement;",
                                        "- the amount of raised funds must be bigger than the _free_ balance of the account;",
                                        "- and either:",
                                        "  - the block number must be at least `end`; or",
                                        "  - the current lease period must be greater than the fund's `last_period`.",
                                        "",
                                        "In this case, the fund's retirement flag is set and its `end` is reset to the current block",
                                        "number.",
                                        "",
                                        "- `who`: The account whose contribution should be withdrawn.",
                                        "- `index`: The parachain to whose crowdloan the contribution was made."
                                    ]
                                },
                                {
                                    "name": "refund",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Automatically refund contributors of an ended crowdloan.",
                                        "Due to weight restrictions, this function may need to be called multiple",
                                        "times to fully refund all users. We will refund `RemoveKeysLimit` users at a time.",
                                        "",
                                        "Origin must be signed, but can come from anyone."
                                    ]
                                },
                                {
                                    "name": "dissolve",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Remove a fund after the retirement period has ended and all funds have been returned."
                                    ]
                                },
                                {
                                    "name": "edit",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "319",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "cap",
                                            "type": "90",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "first_period",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "last_period",
                                            "type": "86",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "end",
                                            "type": "86",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "verifier",
                                            "type": "322",
                                            "typeName": "Option<MultiSigner>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Edit the configuration for an in-progress crowdloan.",
                                        "",
                                        "Can only be called by Root origin."
                                    ]
                                },
                                {
                                    "name": "add_memo",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "memo",
                                            "type": "10",
                                            "typeName": "Vec<u8>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Add an optional memo to an existing crowdloan contribution.",
                                        "",
                                        "Origin must be Signed, and the user must have contributed to the crowdloan."
                                    ]
                                },
                                {
                                    "name": "poke",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Poke the fund into `NewRaise`",
                                        "",
                                        "Origin must be Signed, and the fund has non-zero raise."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "326",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "327"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "327",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "327",
                "type": {
                    "path": [
                        "sp_runtime",
                        "MultiSignature"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Ed25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "209",
                                            "typeName": "ed25519::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Sr25519",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "51",
                                            "typeName": "sr25519::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ecdsa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "328",
                                            "typeName": "ecdsa::Signature",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "328",
                "type": {
                    "path": [
                        "sp_core",
                        "ecdsa",
                        "Signature"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "329",
                                    "typeName": "[u8; 65]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "329",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Array": {
                            "len": 65,
                            "type": "2"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "330",
                "type": {
                    "path": [
                        "frame_support",
                        "PalletId"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "102",
                                    "typeName": "[u8; 8]",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "331",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "crowdloan",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "FirstPeriodInPast",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The current lease period is more than the first lease period."
                                    ]
                                },
                                {
                                    "name": "FirstPeriodTooFarInFuture",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The first lease period needs to at least be less than 3 `max_value`."
                                    ]
                                },
                                {
                                    "name": "LastPeriodBeforeFirstPeriod",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Last lease period must be greater than first lease period."
                                    ]
                                },
                                {
                                    "name": "LastPeriodTooFarInFuture",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The last lease period cannot be more then 3 periods after the first period."
                                    ]
                                },
                                {
                                    "name": "CannotEndInPast",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The campaign ends before the current block number. The end must be in the future."
                                    ]
                                },
                                {
                                    "name": "EndTooFarInFuture",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The end date for this crowdloan is not sensible."
                                    ]
                                },
                                {
                                    "name": "Overflow",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "There was an overflow."
                                    ]
                                },
                                {
                                    "name": "ContributionTooSmall",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "The contribution was below the minimum, `MinContribution`."
                                    ]
                                },
                                {
                                    "name": "InvalidParaId",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Invalid fund index."
                                    ]
                                },
                                {
                                    "name": "CapExceeded",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "Contributions exceed maximum amount."
                                    ]
                                },
                                {
                                    "name": "ContributionPeriodOver",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The contribution period has already ended."
                                    ]
                                },
                                {
                                    "name": "InvalidOrigin",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The origin of this call is invalid."
                                    ]
                                },
                                {
                                    "name": "NotParachain",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "This crowdloan does not correspond to a parachain."
                                    ]
                                },
                                {
                                    "name": "LeaseActive",
                                    "fields": [],
                                    "index": 13,
                                    "docs": [
                                        "This parachain lease is still active and retirement cannot yet begin."
                                    ]
                                },
                                {
                                    "name": "BidOrLeaseActive",
                                    "fields": [],
                                    "index": 14,
                                    "docs": [
                                        "This parachain's bid or lease is still active and withdraw cannot yet begin."
                                    ]
                                },
                                {
                                    "name": "FundNotEnded",
                                    "fields": [],
                                    "index": 15,
                                    "docs": [
                                        "The crowdloan has not yet ended."
                                    ]
                                },
                                {
                                    "name": "NoContributions",
                                    "fields": [],
                                    "index": 16,
                                    "docs": [
                                        "There are no contributions stored in this crowdloan."
                                    ]
                                },
                                {
                                    "name": "NotReadyToDissolve",
                                    "fields": [],
                                    "index": 17,
                                    "docs": [
                                        "The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period."
                                    ]
                                },
                                {
                                    "name": "InvalidSignature",
                                    "fields": [],
                                    "index": 18,
                                    "docs": [
                                        "Invalid signature."
                                    ]
                                },
                                {
                                    "name": "MemoTooLarge",
                                    "fields": [],
                                    "index": 19,
                                    "docs": [
                                        "The provided memo is too large."
                                    ]
                                },
                                {
                                    "name": "AlreadyInNewRaise",
                                    "fields": [],
                                    "index": 20,
                                    "docs": [
                                        "The fund is already in `NewRaise`"
                                    ]
                                },
                                {
                                    "name": "VrfDelayInProgress",
                                    "fields": [],
                                    "index": 21,
                                    "docs": [
                                        "No contributions allowed during the VRF delay"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "332",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "333"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "333",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "334"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "334",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "334",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "0",
                            "6"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "335",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "force_lease",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "leaser",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "amount",
                                            "type": "6",
                                            "typeName": "BalanceOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "period_begin",
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        },
                                        {
                                            "name": "period_count",
                                            "type": "4",
                                            "typeName": "LeasePeriodOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Just a connect into the `lease_out` call, in case Root wants to force some lease to happen",
                                        "independently of any other on-chain mechanism to use it.",
                                        "",
                                        "Can only be called by the Root origin."
                                    ]
                                },
                                {
                                    "name": "clear_all_leases",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Clear all leases for a Para Id, refunding any deposits back to the original owners.",
                                        "",
                                        "Can only be called by the Root origin."
                                    ]
                                },
                                {
                                    "name": "trigger_onboard",
                                    "fields": [
                                        {
                                            "name": "para",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Try to onboard a parachain that has a lease for the current lease period.",
                                        "",
                                        "This function can be useful if there was some state issue with a para that should",
                                        "have onboarded, but was unable to. As long as they have a lease period, we can",
                                        "let them onboard from here.",
                                        "",
                                        "Origin must be signed, but can be called by anyone."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "336",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "slots",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ParaNotOnboarding",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The parachain ID is not onboarding."
                                    ]
                                },
                                {
                                    "name": "LeaseError",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "There was an error with the lease."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "337",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_sudo_wrapper",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "sudo_schedule_para_initialize",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "genesis",
                                            "type": "283",
                                            "typeName": "ParaGenesisArgs",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Schedule a para to be initialized at the start of the next session."
                                    ]
                                },
                                {
                                    "name": "sudo_schedule_para_cleanup",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Schedule a para to be cleaned up at the start of the next session."
                                    ]
                                },
                                {
                                    "name": "sudo_schedule_parathread_upgrade",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Upgrade a parathread to a parachain"
                                    ]
                                },
                                {
                                    "name": "sudo_schedule_parachain_downgrade",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Downgrade a parachain to a parathread"
                                    ]
                                },
                                {
                                    "name": "sudo_queue_downward_xcm",
                                    "fields": [
                                        {
                                            "name": "id",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "338",
                                            "typeName": "Box<xcm::opaque::VersionedXcm>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Send a downward XCM to the given para.",
                                        "",
                                        "The given parachain should exist and the payload should not exceed the preconfigured size",
                                        "`config.max_downward_message_size`."
                                    ]
                                },
                                {
                                    "name": "sudo_establish_hrmp_channel",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "48",
                                            "typeName": "ParaId",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Forcefully establish a channel from the sender to the recipient.",
                                        "",
                                        "This is equivalent to sending an `Hrmp::hrmp_init_open_channel` extrinsic followed by",
                                        "`Hrmp::hrmp_accept_open_channel`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "338",
                "type": {
                    "path": [
                        "xcm",
                        "VersionedXcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "339",
                                            "typeName": "v0::Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "344",
                                            "typeName": "v1::Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "93",
                                            "typeName": "v2::Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "339",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposit",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "TeleportAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": "343",
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": "106",
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "107",
                                            "typeName": "DoubleEncoded<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": "339",
                                            "typeName": "alloc::boxed::Box<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "340",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "341"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "341",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": "115",
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "342",
                                            "typeName": "Vec<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "342",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "339"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "343",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "Response"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Assets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "344",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": "348",
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": "106",
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "107",
                                            "typeName": "DoubleEncoded<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "84",
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": "344",
                                            "typeName": "alloc::boxed::Box<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "345",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "346"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "346",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": "98",
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "instructions",
                                            "type": "347",
                                            "typeName": "Vec<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "347",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "344"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "348",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "Response"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Assets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Version",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "4",
                                            "typeName": "super::Version",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "349",
                "type": {
                    "path": [
                        "polkadot_runtime_common",
                        "paras_sudo_wrapper",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "ParaDoesntExist",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The specified parachain or parathread is not registered."
                                    ]
                                },
                                {
                                    "name": "ParaAlreadyExists",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "The specified parachain or parathread is already registered."
                                    ]
                                },
                                {
                                    "name": "ExceedsMaxMessageSize",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "A DMP message couldn't be sent because it exceeds the maximum size allowed for a downward",
                                        "message."
                                    ]
                                },
                                {
                                    "name": "CouldntCleanup",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Could not schedule para cleanup."
                                    ]
                                },
                                {
                                    "name": "NotParathread",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Not a parathread."
                                    ]
                                },
                                {
                                    "name": "NotParachain",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Not a parachain."
                                    ]
                                },
                                {
                                    "name": "CannotUpgrade",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Cannot upgrade parathread."
                                    ]
                                },
                                {
                                    "name": "CannotDowngrade",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Cannot downgrade parachain."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "350",
                "type": {
                    "path": [
                        "pallet_sudo",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "sudo",
                                    "fields": [
                                        {
                                            "name": "call",
                                            "type": "351",
                                            "typeName": "Box<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "- Limited storage reads.",
                                        "- One DB write (event).",
                                        "- Weight of derivative `call` execution + 10,000.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "sudo_unchecked_weight",
                                    "fields": [
                                        {
                                            "name": "call",
                                            "type": "351",
                                            "typeName": "Box<<T as Config>::Call>",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                                        "This function does not check the weight of the call, and instead allows the",
                                        "Sudo user to specify the weight of the call.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "- The weight of this call is defined by the caller.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "set_key",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo",
                                        "key.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "- Limited storage reads.",
                                        "- One DB change.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "sudo_as",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "171",
                                            "typeName": "<T::Lookup as StaticLookup>::Source",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "351",
                                            "typeName": "Box<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Authenticates the sudo key and dispatches a function call with `Signed` origin from",
                                        "a given account.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "# <weight>",
                                        "- O(1).",
                                        "- Limited storage reads.",
                                        "- One DB write (event).",
                                        "- Weight of derivative `call` execution + 10,000.",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "351",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "Call"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "System",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "125",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Babe",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "152",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Timestamp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "158",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Indices",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "160",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Balances",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "170",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Authorship",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "181",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Authorship, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Session",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "198",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Grandpa",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "203",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "ImOnline",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "217",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ImOnline, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "Configuration",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "226",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Configuration, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "ParasShared",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "231",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasShared, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "ParaInclusion",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "242",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInclusion, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "ParaInherent",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "244",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParaInherent, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "Paras",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "284",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Paras, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Initializer",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "288",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Initializer, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "Dmp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "291",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Dmp, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "Ump",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "293",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Ump, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "Hrmp",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "303",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Hrmp, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "Registrar",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "312",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Registrar, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Auctions",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "318",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Auctions, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": []
                                },
                                {
                                    "name": "Crowdloan",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "325",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Crowdloan, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Slots",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "335",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Slots, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "ParasSudoWrapper",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "337",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParasSudoWrapper, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Sudo",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "350",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": []
                                },
                                {
                                    "name": "ValidatorManager",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "352",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ValidatorManager, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "Collective",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "353",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Collective, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 80,
                                    "docs": []
                                },
                                {
                                    "name": "Membership",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "354",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Membership, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 81,
                                    "docs": []
                                },
                                {
                                    "name": "Utility",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "355",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 90,
                                    "docs": []
                                },
                                {
                                    "name": "Proxy",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "357",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 91,
                                    "docs": []
                                },
                                {
                                    "name": "XcmPallet",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "359",
                                            "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmPallet, Runtime>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "352",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "validator_manager",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "register_validators",
                                    "fields": [
                                        {
                                            "name": "validators",
                                            "type": "74",
                                            "typeName": "Vec<T::ValidatorId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Add new validators to the set.",
                                        "",
                                        "The new validators will be active from current session + 2."
                                    ]
                                },
                                {
                                    "name": "deregister_validators",
                                    "fields": [
                                        {
                                            "name": "validators",
                                            "type": "74",
                                            "typeName": "Vec<T::ValidatorId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Remove validators from the set.",
                                        "",
                                        "The removed validators will be deactivated from current session + 2."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Dispatchable calls.",
                        "",
                        "Each variant of this enum maps to a dispatchable function from the associated module."
                    ]
                }
            },
            {
                "id": "353",
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "set_members",
                                    "fields": [
                                        {
                                            "name": "new_members",
                                            "type": "74",
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "prime",
                                            "type": "180",
                                            "typeName": "Option<T::AccountId>",
                                            "docs": []
                                        },
                                        {
                                            "name": "old_count",
                                            "type": "4",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Set the collective's membership.",
                                        "",
                                        "- `new_members`: The new member list. Be nice to the chain and provide it sorted.",
                                        "- `prime`: The prime member whose vote sets the default.",
                                        "- `old_count`: The upper bound for the previous number of members in storage. Used for",
                                        "  weight estimation.",
                                        "",
                                        "Requires root origin.",
                                        "",
                                        "NOTE: Does not enforce the expected `MaxMembers` limit on the amount of members, but",
                                        "      the weight estimations rely on it to estimate dispatchable weight.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(MP + N)` where:",
                                        "  - `M` old-members-count (code- and governance-bounded)",
                                        "  - `N` new-members-count (code- and governance-bounded)",
                                        "  - `P` proposals-count (code-bounded)",
                                        "- DB:",
                                        "  - 1 storage mutation (codec `O(M)` read, `O(N)` write) for reading and writing the",
                                        "    members",
                                        "  - 1 storage read (codec `O(P)`) for reading the proposals",
                                        "  - `P` storage mutations (codec `O(M)`) for updating the votes for each proposal",
                                        "  - 1 storage write (codec `O(1)`) for deleting the old `prime` and setting the new one",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "execute",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": "351",
                                            "typeName": "Box<<T as Config<I>>::Proposal>",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Dispatch a proposal from a member using the `Member` origin.",
                                        "",
                                        "Origin must be a member of the collective.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(M + P)` where `M` members-count (code-bounded) and `P` complexity of dispatching",
                                        "  `proposal`",
                                        "- DB: 1 read (codec `O(M)`) + DB access of `proposal`",
                                        "- 1 event",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "propose",
                                    "fields": [
                                        {
                                            "name": "threshold",
                                            "type": "86",
                                            "typeName": "MemberCount",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal",
                                            "type": "351",
                                            "typeName": "Box<<T as Config<I>>::Proposal>",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Add a new proposal to either be voted on or executed directly.",
                                        "",
                                        "Requires the sender to be member.",
                                        "",
                                        "`threshold` determines whether `proposal` is executed directly (`threshold < 2`)",
                                        "or put up for voting.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1)` or `O(B + M + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - branching is influenced by `threshold` where:",
                                        "    - `P1` is proposal execution complexity (`threshold < 2`)",
                                        "    - `P2` is proposals-count (code-bounded) (`threshold >= 2`)",
                                        "- DB:",
                                        "  - 1 storage read `is_member` (codec `O(M)`)",
                                        "  - 1 storage read `ProposalOf::contains_key` (codec `O(1)`)",
                                        "  - DB accesses influenced by `threshold`:",
                                        "    - EITHER storage accesses done by `proposal` (`threshold < 2`)",
                                        "    - OR proposal insertion (`threshold <= 2`)",
                                        "      - 1 storage mutation `Proposals` (codec `O(P2)`)",
                                        "      - 1 storage mutation `ProposalCount` (codec `O(1)`)",
                                        "      - 1 storage write `ProposalOf` (codec `O(B)`)",
                                        "      - 1 storage write `Voting` (codec `O(M)`)",
                                        "  - 1 event",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "vote",
                                    "fields": [
                                        {
                                            "name": "proposal",
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "86",
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "approve",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Add an aye or nay vote for the sender to the given proposal.",
                                        "",
                                        "Requires the sender to be a member.",
                                        "",
                                        "Transaction fees will be waived if the member is voting on any particular proposal",
                                        "for the first time and the call is successful. Subsequent vote changes will charge a",
                                        "fee.",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(M)` where `M` is members-count (code- and governance-bounded)",
                                        "- DB:",
                                        "  - 1 storage read `Members` (codec `O(M)`)",
                                        "  - 1 storage mutation `Voting` (codec `O(M)`)",
                                        "- 1 event",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "close",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "86",
                                            "typeName": "ProposalIndex",
                                            "docs": []
                                        },
                                        {
                                            "name": "proposal_weight_bound",
                                            "type": "88",
                                            "typeName": "Weight",
                                            "docs": []
                                        },
                                        {
                                            "name": "length_bound",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Close a vote that is either approved, disapproved or whose voting period has ended.",
                                        "",
                                        "May be called by any signed account in order to finish voting and close the proposal.",
                                        "",
                                        "If called before the end of the voting period it will only close the vote if it is",
                                        "has enough votes to be approved or disapproved.",
                                        "",
                                        "If called after the end of the voting period abstentions are counted as rejections",
                                        "unless there is a prime member set and the prime member cast an approval.",
                                        "",
                                        "If the close operation completes successfully with disapproval, the transaction fee will",
                                        "be waived. Otherwise execution of the approved operation will be charged to the caller.",
                                        "",
                                        "+ `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed",
                                        "proposal.",
                                        "+ `length_bound`: The upper bound for the length of the proposal in storage. Checked via",
                                        "`storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.",
                                        "",
                                        "# <weight>",
                                        "## Weight",
                                        "- `O(B + M + P1 + P2)` where:",
                                        "  - `B` is `proposal` size in bytes (length-fee-bounded)",
                                        "  - `M` is members-count (code- and governance-bounded)",
                                        "  - `P1` is the complexity of `proposal` preimage.",
                                        "  - `P2` is proposal-count (code-bounded)",
                                        "- DB:",
                                        " - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)",
                                        " - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec",
                                        "   `O(P2)`)",
                                        " - any mutations done while executing `proposal` (`P1`)",
                                        "- up to 3 events",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "disapprove_proposal",
                                    "fields": [
                                        {
                                            "name": "proposal_hash",
                                            "type": "9",
                                            "typeName": "T::Hash",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Disapprove a proposal, close, and remove it from the system, regardless of its current",
                                        "state.",
                                        "",
                                        "Must be called by the Root origin.",
                                        "",
                                        "Parameters:",
                                        "* `proposal_hash`: The hash of the proposal that should be disapproved.",
                                        "",
                                        "# <weight>",
                                        "Complexity: O(P) where P is the number of max proposals",
                                        "DB Weight:",
                                        "* Reads: Proposals",
                                        "* Writes: Voting, Proposals, ProposalOf",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "354",
                "type": {
                    "path": [
                        "pallet_membership",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "add_member",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Add a member `who` to the set.",
                                        "",
                                        "May only be called from `T::AddOrigin`."
                                    ]
                                },
                                {
                                    "name": "remove_member",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Remove a member `who` from the set.",
                                        "",
                                        "May only be called from `T::RemoveOrigin`."
                                    ]
                                },
                                {
                                    "name": "swap_member",
                                    "fields": [
                                        {
                                            "name": "remove",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "add",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Swap out one member `remove` for another `add`.",
                                        "",
                                        "May only be called from `T::SwapOrigin`.",
                                        "",
                                        "Prime membership is *not* passed from `remove` to `add`, if extant."
                                    ]
                                },
                                {
                                    "name": "reset_members",
                                    "fields": [
                                        {
                                            "name": "members",
                                            "type": "74",
                                            "typeName": "Vec<T::AccountId>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Change the membership to a new set, disregarding the existing membership. Be nice and",
                                        "pass `members` pre-sorted.",
                                        "",
                                        "May only be called from `T::ResetOrigin`."
                                    ]
                                },
                                {
                                    "name": "change_key",
                                    "fields": [
                                        {
                                            "name": "new",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Swap out the sending member for some other key `new`.",
                                        "",
                                        "May only be called from `Signed` origin of a current member.",
                                        "",
                                        "Prime membership is passed from the origin account to `new`, if extant."
                                    ]
                                },
                                {
                                    "name": "set_prime",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set the prime member. Must be a current member.",
                                        "",
                                        "May only be called from `T::PrimeOrigin`."
                                    ]
                                },
                                {
                                    "name": "clear_prime",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Remove the prime member if it exists.",
                                        "",
                                        "May only be called from `T::PrimeOrigin`."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "355",
                "type": {
                    "path": [
                        "pallet_utility",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "batch",
                                    "fields": [
                                        {
                                            "name": "calls",
                                            "type": "356",
                                            "typeName": "Vec<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Send a batch of dispatch calls.",
                                        "",
                                        "May be called from any origin.",
                                        "",
                                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                                        "",
                                        "If origin is root then call are dispatch without checking origin filter. (This includes",
                                        "bypassing `frame_system::Config::BaseCallFilter`).",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(C) where C is the number of calls to be batched.",
                                        "# <\/weight>",
                                        "",
                                        "This will return `Ok` in all circumstances. To determine the success of the batch, an",
                                        "event is deposited. If a call failed and the batch was interrupted, then the",
                                        "`BatchInterrupted` event is deposited, along with the number of successful calls made",
                                        "and the error of the failed call. If all were successful, then the `BatchCompleted`",
                                        "event is deposited."
                                    ]
                                },
                                {
                                    "name": "as_derivative",
                                    "fields": [
                                        {
                                            "name": "index",
                                            "type": "81",
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "351",
                                            "typeName": "Box<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Send a call through an indexed pseudonym of the sender.",
                                        "",
                                        "Filter from origin are passed along. The call will be dispatched with an origin which",
                                        "use the same filter as the origin of this call.",
                                        "",
                                        "NOTE: If you need to ensure that any account-based filtering is not honored (i.e.",
                                        "because you expect `proxy` to have been used prior in the call stack and you do not want",
                                        "the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`",
                                        "in the Multisig pallet instead.",
                                        "",
                                        "NOTE: Prior to version *12, this was called `as_limited_sub`.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_."
                                    ]
                                },
                                {
                                    "name": "batch_all",
                                    "fields": [
                                        {
                                            "name": "calls",
                                            "type": "356",
                                            "typeName": "Vec<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Send a batch of dispatch calls and atomically execute them.",
                                        "The whole transaction will rollback and fail if any of the calls failed.",
                                        "",
                                        "May be called from any origin.",
                                        "",
                                        "- `calls`: The calls to be dispatched from the same origin. The number of call must not",
                                        "  exceed the constant: `batched_calls_limit` (available in constant metadata).",
                                        "",
                                        "If origin is root then call are dispatch without checking origin filter. (This includes",
                                        "bypassing `frame_system::Config::BaseCallFilter`).",
                                        "",
                                        "# <weight>",
                                        "- Complexity: O(C) where C is the number of calls to be batched.",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "356",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "351"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "357",
                "type": {
                    "path": [
                        "pallet_proxy",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "proxy",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "force_proxy_type",
                                            "type": "358",
                                            "typeName": "Option<T::ProxyType>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "351",
                                            "typeName": "Box<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": [
                                        "Dispatch the given `call` from an account that the sender is authorised for through",
                                        "`add_proxy`.",
                                        "",
                                        "Removes any corresponding announcement(s).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
                                        "- `call`: The call to be made by the `real` account.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of the number of proxies the user has (P).",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "add_proxy",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": "80",
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Register a proxy account for the sender that is able to make calls on its behalf.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `proxy`: The account that the `caller` would like to make a proxy.",
                                        "- `proxy_type`: The permissions allowed for this proxy account.",
                                        "- `delay`: The announcement period required of the initial proxy. Will generally be",
                                        "zero.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of the number of proxies the user has (P).",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "remove_proxy",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": "80",
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Unregister a proxy account for the sender.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `proxy`: The account that the `caller` would like to remove as a proxy.",
                                        "- `proxy_type`: The permissions currently enabled for the removed proxy account.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of the number of proxies the user has (P).",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "remove_proxies",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Unregister all proxy accounts for the sender.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "WARNING: This may be called on accounts created by `anonymous`, however if done, then",
                                        "the unreserved fees will be inaccessible. **All access to this account will be lost.**",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of the number of proxies the user has (P).",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "anonymous",
                                    "fields": [
                                        {
                                            "name": "proxy_type",
                                            "type": "80",
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "delay",
                                            "type": "4",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "81",
                                            "typeName": "u16",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Spawn a fresh new account that is guaranteed to be otherwise inaccessible, and",
                                        "initialize it with a proxy of `proxy_type` for `origin` sender.",
                                        "",
                                        "Requires a `Signed` origin.",
                                        "",
                                        "- `proxy_type`: The type of the proxy that the sender will be registered as over the",
                                        "new account. This will almost always be the most permissive `ProxyType` possible to",
                                        "allow for maximum flexibility.",
                                        "- `index`: A disambiguation index, in case this is called multiple times in the same",
                                        "transaction (e.g. with `utility::batch`). Unless you're using `batch` you probably just",
                                        "want to use `0`.",
                                        "- `delay`: The announcement period required of the initial proxy. Will generally be",
                                        "zero.",
                                        "",
                                        "Fails with `Duplicate` if this has already been called in this transaction, from the",
                                        "same sender, with the same parameters.",
                                        "",
                                        "Fails if there are insufficient funds to pay for deposit.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of the number of proxies the user has (P).",
                                        "# <\/weight>",
                                        "TODO: Might be over counting 1 read"
                                    ]
                                },
                                {
                                    "name": "kill_anonymous",
                                    "fields": [
                                        {
                                            "name": "spawner",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "proxy_type",
                                            "type": "80",
                                            "typeName": "T::ProxyType",
                                            "docs": []
                                        },
                                        {
                                            "name": "index",
                                            "type": "81",
                                            "typeName": "u16",
                                            "docs": []
                                        },
                                        {
                                            "name": "height",
                                            "type": "86",
                                            "typeName": "T::BlockNumber",
                                            "docs": []
                                        },
                                        {
                                            "name": "ext_index",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Removes a previously spawned anonymous proxy.",
                                        "",
                                        "WARNING: **All access to this account will be lost.** Any funds held in it will be",
                                        "inaccessible.",
                                        "",
                                        "Requires a `Signed` origin, and the sender account must have been created by a call to",
                                        "`anonymous` with corresponding parameters.",
                                        "",
                                        "- `spawner`: The account that originally called `anonymous` to create this account.",
                                        "- `index`: The disambiguation index originally passed to `anonymous`. Probably `0`.",
                                        "- `proxy_type`: The proxy type originally passed to `anonymous`.",
                                        "- `height`: The height of the chain when the call to `anonymous` was processed.",
                                        "- `ext_index`: The extrinsic index in which the call to `anonymous` was processed.",
                                        "",
                                        "Fails with `NoPermission` in case the caller is not a previously created anonymous",
                                        "account whose `anonymous` call has corresponding parameters.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of the number of proxies the user has (P).",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "announce",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": "9",
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Publish the hash of a proxy-call that will be made in the future.",
                                        "",
                                        "This must be called some number of blocks before the corresponding `proxy` is attempted",
                                        "if the delay associated with the proxy relationship is greater than zero.",
                                        "",
                                        "No more than `MaxPending` announcements may be made at any one time.",
                                        "",
                                        "This will take a deposit of `AnnouncementDepositFactor` as well as",
                                        "`AnnouncementDepositBase` if there are no other pending announcements.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_ and a proxy of `real`.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `call_hash`: The hash of the call to be made by the `real` account.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of:",
                                        "- A: the number of announcements made.",
                                        "- P: the number of proxies the user has.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "remove_announcement",
                                    "fields": [
                                        {
                                            "name": "real",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": "9",
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Remove a given announcement.",
                                        "",
                                        "May be called by a proxy account to remove a call they previously announced and return",
                                        "the deposit.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `call_hash`: The hash of the call to be made by the `real` account.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of:",
                                        "- A: the number of announcements made.",
                                        "- P: the number of proxies the user has.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "reject_announcement",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "call_hash",
                                            "type": "9",
                                            "typeName": "CallHashOf<T>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": [
                                        "Remove the given announcement of a delegate.",
                                        "",
                                        "May be called by a target (proxied) account to remove a call that one of their delegates",
                                        "(`delegate`) has announced they want to execute. The deposit is returned.",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `delegate`: The account that previously announced the call.",
                                        "- `call_hash`: The hash of the call to be made.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of:",
                                        "- A: the number of announcements made.",
                                        "- P: the number of proxies the user has.",
                                        "# <\/weight>"
                                    ]
                                },
                                {
                                    "name": "proxy_announced",
                                    "fields": [
                                        {
                                            "name": "delegate",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "real",
                                            "type": "0",
                                            "typeName": "T::AccountId",
                                            "docs": []
                                        },
                                        {
                                            "name": "force_proxy_type",
                                            "type": "358",
                                            "typeName": "Option<T::ProxyType>",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "351",
                                            "typeName": "Box<<T as Config>::Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": [
                                        "Dispatch the given `call` from an account that the sender is authorized for through",
                                        "`add_proxy`.",
                                        "",
                                        "Removes any corresponding announcement(s).",
                                        "",
                                        "The dispatch origin for this call must be _Signed_.",
                                        "",
                                        "Parameters:",
                                        "- `real`: The account that the proxy will make a call on behalf of.",
                                        "- `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.",
                                        "- `call`: The call to be made by the `real` account.",
                                        "",
                                        "# <weight>",
                                        "Weight is a function of:",
                                        "- A: the number of announcements made.",
                                        "- P: the number of proxies the user has.",
                                        "# <\/weight>"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "358",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "80"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "80",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "359",
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Call"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "send",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": "338",
                                            "typeName": "Box<VersionedXcm<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "teleport_assets",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "113",
                                            "typeName": "Box<VersionedMultiAssets>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee_asset_item",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": [
                                        "Teleport some assets from the local chain to some destination chain.",
                                        "",
                                        "Fee payment on the destination side is made from the first asset listed in the `assets` vector.",
                                        "",
                                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                                        "  an `AccountId32` value.",
                                        "- `assets`: The assets to be withdrawn. The first item should be the currency used to to pay the fee on the",
                                        "  `dest` side. May not be empty.",
                                        "- `dest_weight`: Equal to the total weight on `dest` of the XCM message",
                                        "  `Teleport { assets, effects: [ BuyExecution{..}, DepositAsset{..} ] }`."
                                    ]
                                },
                                {
                                    "name": "reserve_transfer_assets",
                                    "fields": [
                                        {
                                            "name": "dest",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "113",
                                            "typeName": "Box<VersionedMultiAssets>",
                                            "docs": []
                                        },
                                        {
                                            "name": "fee_asset_item",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": [
                                        "Transfer some assets from the local chain to the sovereign account of a destination chain and forward",
                                        "a notification XCM.",
                                        "",
                                        "Fee payment on the destination side is made from the first asset listed in the `assets` vector.",
                                        "",
                                        "- `origin`: Must be capable of withdrawing the `assets` and executing XCM.",
                                        "- `dest`: Destination context for the assets. Will typically be `X2(Parent, Parachain(..))` to send",
                                        "  from parachain to parachain, or `X1(Parachain(..))` to send from relay to parachain.",
                                        "- `beneficiary`: A beneficiary location for the assets in the context of `dest`. Will generally be",
                                        "  an `AccountId32` value.",
                                        "- `assets`: The assets to be withdrawn. This should include the assets used to pay the fee on the",
                                        "  `dest` side.",
                                        "- `fee_asset_item`: The index into `assets` of the item which should be used to pay",
                                        "  fees."
                                    ]
                                },
                                {
                                    "name": "execute",
                                    "fields": [
                                        {
                                            "name": "message",
                                            "type": "360",
                                            "typeName": "Box<VersionedXcm<<T as SysConfig>::Call>>",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": "8",
                                            "typeName": "Weight",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": [
                                        "Execute an XCM message from a local, signed, origin.",
                                        "",
                                        "An event is deposited indicating whether `msg` could be executed completely or only",
                                        "partially.",
                                        "",
                                        "No more than `max_weight` will be used in its attempted execution. If this is less than the",
                                        "maximum amount of weight that the message could take to be executed, then no execution",
                                        "attempt will be made.",
                                        "",
                                        "NOTE: A successful return to this does *not* imply that the `msg` was executed successfully",
                                        "to completion; only that *some* of it was executed."
                                    ]
                                },
                                {
                                    "name": "force_xcm_version",
                                    "fields": [
                                        {
                                            "name": "location",
                                            "type": "83",
                                            "typeName": "Box<MultiLocation>",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm_version",
                                            "type": "4",
                                            "typeName": "XcmVersion",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": [
                                        "Extoll that a particular destination can be communicated with through a particular",
                                        "version of XCM.",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `location`: The destination that is being described.",
                                        "- `xcm_version`: The latest version of XCM that `location` supports."
                                    ]
                                },
                                {
                                    "name": "force_default_xcm_version",
                                    "fields": [
                                        {
                                            "name": "maybe_xcm_version",
                                            "type": "202",
                                            "typeName": "Option<XcmVersion>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": [
                                        "Set a safe XCM version (the version that XCM should be encoded with if the most recent",
                                        "version a destination can accept is unknown).",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `maybe_xcm_version`: The default XCM encoding version, or `None` to disable."
                                    ]
                                },
                                {
                                    "name": "force_subscribe_version_notify",
                                    "fields": [
                                        {
                                            "name": "location",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": [
                                        "Ask a location to notify us regarding their XCM version and any changes to it.",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `location`: The location to which we should subscribe for XCM version notifications."
                                    ]
                                },
                                {
                                    "name": "force_unsubscribe_version_notify",
                                    "fields": [
                                        {
                                            "name": "location",
                                            "type": "118",
                                            "typeName": "Box<VersionedMultiLocation>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": [
                                        "Require that a particular destination should no longer notify us regarding any XCM",
                                        "version changes.",
                                        "",
                                        "- `origin`: Must be Root.",
                                        "- `location`: The location to which we are currently subscribed for XCM version",
                                        "  notifications which we no longer desire."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Contains one variant per dispatchable that can be called by an extrinsic."
                    ]
                }
            },
            {
                "id": "360",
                "type": {
                    "path": [
                        "xcm",
                        "VersionedXcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "361",
                                            "typeName": "v0::Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "366",
                                            "typeName": "v1::Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "370",
                                            "typeName": "v2::Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "361",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "362",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposit",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "362",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "TeleportAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "362",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": "343",
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": "106",
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "365",
                                            "typeName": "DoubleEncoded<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": "361",
                                            "typeName": "alloc::boxed::Box<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "362",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "363"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "363",
                "type": {
                    "path": [
                        "xcm",
                        "v0",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Null",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "340",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "116",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "114",
                                            "typeName": "Vec<MultiAsset>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": "115",
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "364",
                                            "typeName": "Vec<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "364",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "361"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "365",
                "type": {
                    "path": [
                        "xcm",
                        "double_encoded",
                        "DoubleEncoded"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "encoded",
                                    "type": "10",
                                    "typeName": "Vec<u8>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "366",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "367",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "367",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "367",
                                            "typeName": "Vec<Order<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": "348",
                                            "typeName": "Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": "106",
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "365",
                                            "typeName": "DoubleEncoded<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "RelayedFrom",
                                    "fields": [
                                        {
                                            "name": "who",
                                            "type": "84",
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "message",
                                            "type": "366",
                                            "typeName": "alloc::boxed::Box<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 12,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "367",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "368"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "368",
                "type": {
                    "path": [
                        "xcm",
                        "v1",
                        "order",
                        "Order"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Noop",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "4",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "effects",
                                            "type": "345",
                                            "typeName": "Vec<Order<()>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": "98",
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "debt",
                                            "type": "8",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "halt_on_error",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        },
                                        {
                                            "name": "instructions",
                                            "type": "369",
                                            "typeName": "Vec<Xcm<Call>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "369",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "366"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "370",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Xcm"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "371",
                                    "typeName": "Vec<Instruction<Call>>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "371",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "372"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "372",
                "type": {
                    "path": [
                        "xcm",
                        "v2",
                        "Instruction"
                    ],
                    "params": [
                        {
                            "name": "Call",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "WithdrawAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "ReserveAssetDeposited",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "ReceiveTeleportedAsset",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "QueryResponse",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "response",
                                            "type": "103",
                                            "typeName": "Response",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "TransferAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "TransferReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Transact",
                                    "fields": [
                                        {
                                            "name": "origin_type",
                                            "type": "106",
                                            "typeName": "OriginKind",
                                            "docs": []
                                        },
                                        {
                                            "name": "require_weight_at_most",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        },
                                        {
                                            "name": "call",
                                            "type": "365",
                                            "typeName": "DoubleEncoded<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpNewChannelOpenRequest",
                                    "fields": [
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_message_size",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_capacity",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelAccepted",
                                    "fields": [
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "HrmpChannelClosing",
                                    "fields": [
                                        {
                                            "name": "initiator",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "sender",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "recipient",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "ClearOrigin",
                                    "fields": [],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "DescendOrigin",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "84",
                                            "typeName": "InteriorMultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "ReportError",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "DepositAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "beneficiary",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "DepositReserveAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_assets",
                                            "type": "86",
                                            "typeName": "u32",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "ExchangeAsset",
                                    "fields": [
                                        {
                                            "name": "give",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "receive",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateReserveWithdraw",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "reserve",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "InitiateTeleport",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "xcm",
                                            "type": "93",
                                            "typeName": "Xcm<()>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "QueryHolding",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "dest",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "assets",
                                            "type": "108",
                                            "typeName": "MultiAssetFilter",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "BuyExecution",
                                    "fields": [
                                        {
                                            "name": "fees",
                                            "type": "98",
                                            "typeName": "MultiAsset",
                                            "docs": []
                                        },
                                        {
                                            "name": "weight_limit",
                                            "type": "111",
                                            "typeName": "WeightLimit",
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "RefundSurplus",
                                    "fields": [],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "SetErrorHandler",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "370",
                                            "typeName": "Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "SetAppendix",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "370",
                                            "typeName": "Xcm<Call>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "ClearError",
                                    "fields": [],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "ClaimAsset",
                                    "fields": [
                                        {
                                            "name": "assets",
                                            "type": "96",
                                            "typeName": "MultiAssets",
                                            "docs": []
                                        },
                                        {
                                            "name": "ticket",
                                            "type": "83",
                                            "typeName": "MultiLocation",
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Trap",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "SubscribeVersion",
                                    "fields": [
                                        {
                                            "name": "query_id",
                                            "type": "88",
                                            "typeName": "QueryId",
                                            "docs": []
                                        },
                                        {
                                            "name": "max_response_weight",
                                            "type": "88",
                                            "typeName": "u64",
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "UnsubscribeVersion",
                                    "fields": [],
                                    "index": 27,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "373",
                "type": {
                    "path": [
                        "pallet_sudo",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "RequireSudo",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Sender must be the Sudo account"
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "Error for the Sudo pallet"
                    ]
                }
            },
            {
                "id": "374",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "192"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "375",
                "type": {
                    "path": [
                        "beefy_primitives",
                        "mmr",
                        "BeefyNextAuthoritySet"
                    ],
                    "params": [
                        {
                            "name": "MerkleRoot",
                            "type": "9"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "id",
                                    "type": "8",
                                    "typeName": "crate::ValidatorSetId",
                                    "docs": []
                                },
                                {
                                    "name": "len",
                                    "type": "4",
                                    "typeName": "u32",
                                    "docs": []
                                },
                                {
                                    "name": "root",
                                    "type": "9",
                                    "typeName": "MerkleRoot",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "376",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "validator_manager",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "377",
                "type": {
                    "path": [
                        "frame_support",
                        "storage",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "9"
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "120",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "378",
                "type": {
                    "path": [
                        "pallet_collective",
                        "Votes"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": null
                        },
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "index",
                                    "type": "4",
                                    "typeName": "ProposalIndex",
                                    "docs": []
                                },
                                {
                                    "name": "threshold",
                                    "type": "4",
                                    "typeName": "MemberCount",
                                    "docs": []
                                },
                                {
                                    "name": "ayes",
                                    "type": "74",
                                    "typeName": "Vec<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "nays",
                                    "type": "74",
                                    "typeName": "Vec<AccountId>",
                                    "docs": []
                                },
                                {
                                    "name": "end",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "379",
                "type": {
                    "path": [
                        "pallet_collective",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "NotMember",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Account is not a member"
                                    ]
                                },
                                {
                                    "name": "DuplicateProposal",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Duplicate proposals not allowed"
                                    ]
                                },
                                {
                                    "name": "ProposalMissing",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Proposal must exist"
                                    ]
                                },
                                {
                                    "name": "WrongIndex",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "Mismatched index"
                                    ]
                                },
                                {
                                    "name": "DuplicateVote",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Duplicate vote ignored"
                                    ]
                                },
                                {
                                    "name": "AlreadyInitialized",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Members are already initialized!"
                                    ]
                                },
                                {
                                    "name": "TooEarly",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "The close call was made too early, before the end of the voting."
                                    ]
                                },
                                {
                                    "name": "TooManyProposals",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "There can only be a maximum of `MaxProposals` active proposals."
                                    ]
                                },
                                {
                                    "name": "WrongProposalWeight",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "The given weight bound for the proposal was too low."
                                    ]
                                },
                                {
                                    "name": "WrongProposalLength",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The given length bound for the proposal was too low."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "380",
                "type": {
                    "path": [
                        "pallet_membership",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        },
                        {
                            "name": "I",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "AlreadyMember",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Already a member."
                                    ]
                                },
                                {
                                    "name": "NotMember",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Not a member."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "381",
                "type": {
                    "path": [
                        "pallet_utility",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooManyCalls",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "Too many calls batched."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "382",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "383",
                            "6"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "383",
                "type": {
                    "path": [
                        "frame_support",
                        "storage",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "384"
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "385",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "384",
                "type": {
                    "path": [
                        "pallet_proxy",
                        "ProxyDefinition"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": null
                        },
                        {
                            "name": "ProxyType",
                            "type": "80"
                        },
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "delegate",
                                    "type": "0",
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "proxy_type",
                                    "type": "80",
                                    "typeName": "ProxyType",
                                    "docs": []
                                },
                                {
                                    "name": "delay",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "385",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "384"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "386",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "387",
                            "6"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "387",
                "type": {
                    "path": [
                        "frame_support",
                        "storage",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "388"
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "389",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "388",
                "type": {
                    "path": [
                        "pallet_proxy",
                        "Announcement"
                    ],
                    "params": [
                        {
                            "name": "AccountId",
                            "type": null
                        },
                        {
                            "name": "Hash",
                            "type": "9"
                        },
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": "real",
                                    "type": "0",
                                    "typeName": "AccountId",
                                    "docs": []
                                },
                                {
                                    "name": "call_hash",
                                    "type": "9",
                                    "typeName": "Hash",
                                    "docs": []
                                },
                                {
                                    "name": "height",
                                    "type": "4",
                                    "typeName": "BlockNumber",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "389",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "388"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "390",
                "type": {
                    "path": [
                        "pallet_proxy",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "TooMany",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "There are too many proxies registered or too many announcements pending."
                                    ]
                                },
                                {
                                    "name": "NotFound",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "Proxy registration not found."
                                    ]
                                },
                                {
                                    "name": "NotProxy",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "Sender is not a proxy of the account to be proxied."
                                    ]
                                },
                                {
                                    "name": "Unproxyable",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "A call which is incompatible with the proxy type's filter was attempted."
                                    ]
                                },
                                {
                                    "name": "Duplicate",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "Account is already a proxy."
                                    ]
                                },
                                {
                                    "name": "NoPermission",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "Call may not be made by proxy because it may escalate its privileges."
                                    ]
                                },
                                {
                                    "name": "Unannounced",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Announcement, if made at all, was made too recently."
                                    ]
                                },
                                {
                                    "name": "NoSelfProxy",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Cannot add self as proxy."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "391",
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "QueryStatus"
                    ],
                    "params": [
                        {
                            "name": "BlockNumber",
                            "type": "4"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Pending",
                                    "fields": [
                                        {
                                            "name": "responder",
                                            "type": "118",
                                            "typeName": "VersionedMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "maybe_notify",
                                            "type": "392",
                                            "typeName": "Option<(u8, u8)>",
                                            "docs": []
                                        },
                                        {
                                            "name": "timeout",
                                            "type": "4",
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "VersionNotifier",
                                    "fields": [
                                        {
                                            "name": "origin",
                                            "type": "118",
                                            "typeName": "VersionedMultiLocation",
                                            "docs": []
                                        },
                                        {
                                            "name": "is_active",
                                            "type": "76",
                                            "typeName": "bool",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Ready",
                                    "fields": [
                                        {
                                            "name": "response",
                                            "type": "394",
                                            "typeName": "VersionedResponse",
                                            "docs": []
                                        },
                                        {
                                            "name": "at",
                                            "type": "4",
                                            "typeName": "BlockNumber",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "392",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "393"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "393",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "393",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "2",
                            "2"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "394",
                "type": {
                    "path": [
                        "xcm",
                        "VersionedResponse"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "V0",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "343",
                                            "typeName": "v0::Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "V1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "348",
                                            "typeName": "v1::Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "V2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "103",
                                            "typeName": "v2::Response",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "395",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "4",
                            "118"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "396",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "8",
                            "8",
                            "4"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "397",
                "type": {
                    "path": [
                        "frame_support",
                        "storage",
                        "bounded_vec",
                        "BoundedVec"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "398"
                        },
                        {
                            "name": "S",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "399",
                                    "typeName": "Vec<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "398",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "118",
                            "4"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "399",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Sequence": {
                            "type": "398"
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "400",
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "VersionMigrationStage"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "MigrateSupportedVersion",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "MigrateVersionNotifiers",
                                    "fields": [],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "NotifyCurrentTargets",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "401",
                                            "typeName": "Option<Vec<u8>>",
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "MigrateAndNotifyOldTargets",
                                    "fields": [],
                                    "index": 3,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "401",
                "type": {
                    "path": [
                        "Option"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": "10"
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "None",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Some",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "10",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "402",
                "type": {
                    "path": [
                        "pallet_xcm",
                        "pallet",
                        "Error"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Unreachable",
                                    "fields": [],
                                    "index": 0,
                                    "docs": [
                                        "The desired destination was unreachable, generally because there is a no way of routing",
                                        "to it."
                                    ]
                                },
                                {
                                    "name": "SendFailure",
                                    "fields": [],
                                    "index": 1,
                                    "docs": [
                                        "There was some other issue (i.e. not to do with routing) in sending the message. Perhaps",
                                        "a lack of space for buffering the message."
                                    ]
                                },
                                {
                                    "name": "Filtered",
                                    "fields": [],
                                    "index": 2,
                                    "docs": [
                                        "The message execution fails the filter."
                                    ]
                                },
                                {
                                    "name": "UnweighableMessage",
                                    "fields": [],
                                    "index": 3,
                                    "docs": [
                                        "The message's weight could not be determined."
                                    ]
                                },
                                {
                                    "name": "DestinationNotInvertible",
                                    "fields": [],
                                    "index": 4,
                                    "docs": [
                                        "The destination `MultiLocation` provided cannot be inverted."
                                    ]
                                },
                                {
                                    "name": "Empty",
                                    "fields": [],
                                    "index": 5,
                                    "docs": [
                                        "The assets to be sent are empty."
                                    ]
                                },
                                {
                                    "name": "CannotReanchor",
                                    "fields": [],
                                    "index": 6,
                                    "docs": [
                                        "Could not re-anchor the assets to declare the fees for the destination chain."
                                    ]
                                },
                                {
                                    "name": "TooManyAssets",
                                    "fields": [],
                                    "index": 7,
                                    "docs": [
                                        "Too many assets have been attempted for transfer."
                                    ]
                                },
                                {
                                    "name": "InvalidOrigin",
                                    "fields": [],
                                    "index": 8,
                                    "docs": [
                                        "Origin is invalid for sending."
                                    ]
                                },
                                {
                                    "name": "BadVersion",
                                    "fields": [],
                                    "index": 9,
                                    "docs": [
                                        "The version of the `Versioned` value used is not able to be interpreted."
                                    ]
                                },
                                {
                                    "name": "BadLocation",
                                    "fields": [],
                                    "index": 10,
                                    "docs": [
                                        "The given location could not be used (e.g. because it cannot be expressed in the",
                                        "desired version of XCM)."
                                    ]
                                },
                                {
                                    "name": "NoSubscription",
                                    "fields": [],
                                    "index": 11,
                                    "docs": [
                                        "The referenced subscription could not be found."
                                    ]
                                },
                                {
                                    "name": "AlreadySubscribed",
                                    "fields": [],
                                    "index": 12,
                                    "docs": [
                                        "The location is invalid since it already has a subscription from us."
                                    ]
                                }
                            ]
                        }
                    },
                    "docs": [
                        "\n\t\t\tCustom [dispatch errors](https:\/\/substrate.dev\/docs\/en\/knowledgebase\/runtime\/errors)\n\t\t\tof this pallet.\n\t\t\t"
                    ]
                }
            },
            {
                "id": "403",
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "unchecked_extrinsic",
                        "UncheckedExtrinsic"
                    ],
                    "params": [
                        {
                            "name": "Address",
                            "type": "171"
                        },
                        {
                            "name": "Call",
                            "type": "351"
                        },
                        {
                            "name": "Signature",
                            "type": "327"
                        },
                        {
                            "name": "Extra",
                            "type": "404"
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "10",
                                    "typeName": null,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "404",
                "type": {
                    "path": [],
                    "params": [],
                    "def": {
                        "Tuple": [
                            "405",
                            "406",
                            "407",
                            "408",
                            "410",
                            "411",
                            "412"
                        ]
                    },
                    "docs": []
                }
            },
            {
                "id": "405",
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_spec_version",
                        "CheckSpecVersion"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "406",
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_tx_version",
                        "CheckTxVersion"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "407",
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_genesis",
                        "CheckGenesis"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "408",
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_mortality",
                        "CheckMortality"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "409",
                                    "typeName": "Era",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "409",
                "type": {
                    "path": [
                        "sp_runtime",
                        "generic",
                        "era",
                        "Era"
                    ],
                    "params": [],
                    "def": {
                        "Variant": {
                            "variants": [
                                {
                                    "name": "Immortal",
                                    "fields": [],
                                    "index": 0,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal1",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 1,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal2",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 2,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal3",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 3,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal4",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 4,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal5",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 5,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal6",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 6,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal7",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 7,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal8",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 8,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal9",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 9,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal10",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 10,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal11",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 11,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal12",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 12,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal13",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 13,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal14",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 14,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal15",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 15,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal16",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 16,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal17",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 17,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal18",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 18,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal19",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 19,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal20",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 20,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal21",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 21,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal22",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 22,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal23",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 23,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal24",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 24,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal25",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 25,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal26",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 26,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal27",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 27,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal28",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 28,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal29",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 29,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal30",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 30,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal31",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 31,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal32",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 32,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal33",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 33,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal34",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 34,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal35",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 35,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal36",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 36,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal37",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 37,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal38",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 38,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal39",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 39,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal40",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 40,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal41",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 41,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal42",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 42,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal43",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 43,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal44",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 44,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal45",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 45,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal46",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 46,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal47",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 47,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal48",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 48,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal49",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 49,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal50",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 50,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal51",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 51,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal52",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 52,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal53",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 53,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal54",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 54,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal55",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 55,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal56",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 56,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal57",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 57,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal58",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 58,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal59",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 59,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal60",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 60,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal61",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 61,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal62",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 62,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal63",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 63,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal64",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 64,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal65",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 65,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal66",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 66,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal67",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 67,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal68",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 68,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal69",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 69,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal70",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 70,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal71",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 71,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal72",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 72,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal73",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 73,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal74",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 74,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal75",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 75,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal76",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 76,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal77",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 77,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal78",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 78,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal79",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 79,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal80",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 80,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal81",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 81,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal82",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 82,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal83",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 83,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal84",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 84,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal85",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 85,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal86",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 86,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal87",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 87,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal88",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 88,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal89",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 89,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal90",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 90,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal91",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 91,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal92",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 92,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal93",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 93,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal94",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 94,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal95",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 95,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal96",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 96,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal97",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 97,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal98",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 98,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal99",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 99,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal100",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 100,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal101",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 101,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal102",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 102,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal103",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 103,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal104",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 104,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal105",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 105,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal106",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 106,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal107",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 107,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal108",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 108,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal109",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 109,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal110",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 110,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal111",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 111,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal112",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 112,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal113",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 113,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal114",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 114,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal115",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 115,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal116",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 116,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal117",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 117,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal118",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 118,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal119",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 119,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal120",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 120,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal121",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 121,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal122",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 122,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal123",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 123,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal124",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 124,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal125",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 125,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal126",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 126,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal127",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 127,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal128",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 128,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal129",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 129,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal130",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 130,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal131",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 131,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal132",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 132,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal133",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 133,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal134",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 134,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal135",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 135,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal136",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 136,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal137",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 137,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal138",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 138,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal139",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 139,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal140",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 140,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal141",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 141,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal142",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 142,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal143",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 143,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal144",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 144,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal145",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 145,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal146",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 146,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal147",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 147,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal148",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 148,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal149",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 149,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal150",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 150,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal151",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 151,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal152",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 152,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal153",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 153,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal154",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 154,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal155",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 155,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal156",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 156,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal157",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 157,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal158",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 158,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal159",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 159,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal160",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 160,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal161",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 161,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal162",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 162,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal163",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 163,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal164",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 164,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal165",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 165,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal166",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 166,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal167",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 167,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal168",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 168,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal169",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 169,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal170",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 170,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal171",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 171,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal172",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 172,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal173",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 173,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal174",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 174,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal175",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 175,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal176",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 176,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal177",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 177,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal178",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 178,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal179",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 179,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal180",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 180,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal181",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 181,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal182",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 182,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal183",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 183,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal184",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 184,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal185",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 185,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal186",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 186,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal187",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 187,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal188",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 188,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal189",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 189,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal190",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 190,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal191",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 191,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal192",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 192,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal193",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 193,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal194",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 194,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal195",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 195,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal196",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 196,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal197",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 197,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal198",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 198,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal199",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 199,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal200",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 200,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal201",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 201,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal202",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 202,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal203",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 203,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal204",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 204,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal205",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 205,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal206",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 206,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal207",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 207,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal208",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 208,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal209",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 209,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal210",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 210,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal211",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 211,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal212",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 212,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal213",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 213,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal214",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 214,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal215",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 215,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal216",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 216,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal217",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 217,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal218",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 218,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal219",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 219,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal220",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 220,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal221",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 221,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal222",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 222,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal223",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 223,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal224",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 224,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal225",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 225,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal226",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 226,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal227",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 227,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal228",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 228,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal229",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 229,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal230",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 230,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal231",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 231,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal232",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 232,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal233",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 233,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal234",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 234,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal235",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 235,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal236",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 236,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal237",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 237,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal238",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 238,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal239",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 239,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal240",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 240,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal241",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 241,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal242",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 242,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal243",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 243,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal244",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 244,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal245",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 245,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal246",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 246,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal247",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 247,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal248",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 248,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal249",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 249,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal250",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 250,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal251",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 251,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal252",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 252,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal253",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 253,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal254",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 254,
                                    "docs": []
                                },
                                {
                                    "name": "Mortal255",
                                    "fields": [
                                        {
                                            "name": null,
                                            "type": "2",
                                            "typeName": null,
                                            "docs": []
                                        }
                                    ],
                                    "index": 255,
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "410",
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_nonce",
                        "CheckNonce"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "86",
                                    "typeName": "T::Index",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "411",
                "type": {
                    "path": [
                        "frame_system",
                        "extensions",
                        "check_weight",
                        "CheckWeight"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "412",
                "type": {
                    "path": [
                        "pallet_transaction_payment",
                        "ChargeTransactionPayment"
                    ],
                    "params": [
                        {
                            "name": "T",
                            "type": null
                        }
                    ],
                    "def": {
                        "Composite": {
                            "fields": [
                                {
                                    "name": null,
                                    "type": "90",
                                    "typeName": "BalanceOf<T>",
                                    "docs": []
                                }
                            ]
                        }
                    },
                    "docs": []
                }
            },
            {
                "id": "413",
                "type": {
                    "path": [
                        "rococo_runtime",
                        "Runtime"
                    ],
                    "params": [],
                    "def": {
                        "Composite": {
                            "fields": []
                        }
                    },
                    "docs": []
                }
            }
        ],
        "pallets": [
            {
                "name": "System",
                "storage": {
                    "prefix": "System",
                    "items": [
                        {
                            "name": "Account",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "3"
                                }
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " The full account information for a particular account ID."
                            ]
                        },
                        {
                            "name": "ExtrinsicCount",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00",
                            "docs": [
                                " Total extrinsics count for the current block."
                            ]
                        },
                        {
                            "name": "BlockWeight",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "7"
                            },
                            "fallback": "000000000000000000000000000000000000000000000000",
                            "docs": [
                                " The current weight for the block."
                            ]
                        },
                        {
                            "name": "AllExtrinsicsLen",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00",
                            "docs": [
                                " Total length (in bytes) for all extrinsics put together, for the current block."
                            ]
                        },
                        {
                            "name": "BlockHash",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "9"
                                }
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " Map of block numbers to block hashes."
                            ]
                        },
                        {
                            "name": "ExtrinsicData",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "10"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                            ]
                        },
                        {
                            "name": "Number",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The current block number being processed. Set by `execute_block`."
                            ]
                        },
                        {
                            "name": "ParentHash",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "9"
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " Hash of the previous block."
                            ]
                        },
                        {
                            "name": "Digest",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "11"
                            },
                            "fallback": "00",
                            "docs": [
                                " Digest of the current block, also part of the block header."
                            ]
                        },
                        {
                            "name": "Events",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "18"
                            },
                            "fallback": "00",
                            "docs": [
                                " Events deposited for the current block.",
                                "",
                                " NOTE: This storage item is explicitly unbounded since it is never intended to be read",
                                " from within the runtime."
                            ]
                        },
                        {
                            "name": "EventCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The number of events in the `Events<T>` list."
                            ]
                        },
                        {
                            "name": "EventTopics",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "9",
                                    "values_id": "121"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                                " of events in the `<Events<T>>` list.",
                                "",
                                " All topic vectors have deterministic storage locations depending on the topic. This",
                                " allows light-clients to leverage the changes trie storage tracking mechanism and",
                                " in case of changes fetch the list of events of interest.",
                                "",
                                " The value has the type `(T::BlockNumber, EventIndex)` because if we used only just",
                                " the `EventIndex` then in case if the topic has the same contents on the next block",
                                " no notification will be triggered thus the event might be lost."
                            ]
                        },
                        {
                            "name": "LastRuntimeUpgrade",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "123"
                            },
                            "fallback": "00",
                            "docs": [
                                " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                            ]
                        },
                        {
                            "name": "UpgradedToU32RefCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "76"
                            },
                            "fallback": "00",
                            "docs": [
                                " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                            ]
                        },
                        {
                            "name": "UpgradedToTripleRefCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "76"
                            },
                            "fallback": "00",
                            "docs": [
                                " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                                " (default) if not."
                            ]
                        },
                        {
                            "name": "ExecutionPhase",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "119"
                            },
                            "fallback": "00",
                            "docs": [
                                " The execution phase of the block."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "125"
                },
                "events": {
                    "type": "21"
                },
                "constants": [
                    {
                        "name": "BlockWeights",
                        "type": "130",
                        "value": "00f2052a0100000000204aa9d1010000405973070000000001c0766c8f58010000010098f73e5d010000010000000000000000405973070000000001c0febef9cc0100000100204aa9d1010000010088526a740000004059730700000000000000",
                        "docs": [
                            " Block & extrinsics weights: base values and limits."
                        ]
                    },
                    {
                        "name": "BlockLength",
                        "type": "134",
                        "value": "00003c000000500000005000",
                        "docs": [
                            " The maximum length of a block (in bytes)."
                        ]
                    },
                    {
                        "name": "BlockHashCount",
                        "type": "4",
                        "value": "60090000",
                        "docs": [
                            " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
                        ]
                    },
                    {
                        "name": "DbWeight",
                        "type": "136",
                        "value": "40787d010000000000e1f50500000000",
                        "docs": [
                            " The weight of runtime database operations the runtime can invoke."
                        ]
                    },
                    {
                        "name": "Version",
                        "type": "137",
                        "value": "18726f636f636f487061726974792d726f636f636f2d76312e38000000008f2300000000000038df6acb689907609b0300000037e397fc7c91f5e40100000040fe3ad401f8959a05000000d2bc9897eed08f1503000000f78b278be53f454c02000000af2c0297a23e6d3d01000000ed99c5acb25eedf503000000cbca25e39f14238702000000687ad44ad37f03c201000000ab3c0572291feb8b0100000049eaaf1b548a0cb00100000091d5df18b0d2cf5801000000bc9d89904f5b923f0100000037c8bb1350a9a2a80100000000000000",
                        "docs": [
                            " Get the chain's current version."
                        ]
                    },
                    {
                        "name": "SS58Prefix",
                        "type": "81",
                        "value": "2a00",
                        "docs": [
                            " The designated SS85 prefix of this chain.",
                            "",
                            " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                            " that the runtime should know about the prefix in order to make use of it as",
                            " an identifier of the chain."
                        ]
                    }
                ],
                "errors": {
                    "type": "141"
                },
                "index": 0
            },
            {
                "name": "Babe",
                "storage": {
                    "prefix": "Babe",
                    "items": [
                        {
                            "name": "EpochIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " Current epoch index."
                            ]
                        },
                        {
                            "name": "Authorities",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "142"
                            },
                            "fallback": "00",
                            "docs": [
                                " Current epoch authorities."
                            ]
                        },
                        {
                            "name": "GenesisSlot",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "145"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " The slot at which the first epoch actually started. This is 0",
                                " until the first block of the chain."
                            ]
                        },
                        {
                            "name": "CurrentSlot",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "145"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " Current slot number."
                            ]
                        },
                        {
                            "name": "Randomness",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "1"
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " The epoch randomness for the *current* epoch.",
                                "",
                                " # Security",
                                "",
                                " This MUST NOT be used for gambling, as it can be influenced by a",
                                " malicious validator in the short term. It MAY be used in many",
                                " cryptographic protocols, however, so long as one remembers that this",
                                " (like everything else on-chain) it is public. For example, it can be",
                                " used where a number is needed that cannot have been chosen by an",
                                " adversary, for purposes such as public-coin zero-knowledge proofs."
                            ]
                        },
                        {
                            "name": "PendingEpochConfigChange",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "146"
                            },
                            "fallback": "00",
                            "docs": [
                                " Pending epoch configuration change that will be applied when the next epoch is enacted."
                            ]
                        },
                        {
                            "name": "NextRandomness",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "1"
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " Next epoch randomness."
                            ]
                        },
                        {
                            "name": "NextAuthorities",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "142"
                            },
                            "fallback": "00",
                            "docs": [
                                " Next epoch authorities."
                            ]
                        },
                        {
                            "name": "SegmentIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " Randomness under construction.",
                                "",
                                " We make a tradeoff between storage accesses and list length.",
                                " We store the under-construction randomness in segments of up to",
                                " `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.",
                                "",
                                " Once a segment reaches this length, we begin the next one.",
                                " We reset all segments and return to `0` at the beginning of every",
                                " epoch."
                            ]
                        },
                        {
                            "name": "UnderConstruction",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "149"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay."
                            ]
                        },
                        {
                            "name": "Initialized",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "150"
                            },
                            "fallback": "00",
                            "docs": [
                                " Temporary value (cleared at block finalization) which is `Some`",
                                " if per-block initialization has already been called for current block."
                            ]
                        },
                        {
                            "name": "AuthorVrfRandomness",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "150"
                            },
                            "fallback": "00",
                            "docs": [
                                " This field should always be populated during block processing unless",
                                " secondary plain slots are enabled (which don't contain a VRF output).",
                                "",
                                " It is set in `on_initialize`, before it will contain the value from the last block."
                            ]
                        },
                        {
                            "name": "EpochStart",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "122"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " The block numbers when the last and current epoch have started, respectively `N-1` and",
                                " `N`.",
                                " NOTE: We track this is in order to annotate the block number when a given pool of",
                                " entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in",
                                " slots, which may be skipped, the block numbers may not line up with the slot numbers."
                            ]
                        },
                        {
                            "name": "Lateness",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " How late the current block is compared to its parent.",
                                "",
                                " This entry is populated as part of block execution and is cleaned up",
                                " on block finalization. Querying this storage entry outside of block",
                                " execution context should always yield zero."
                            ]
                        },
                        {
                            "name": "EpochConfig",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "151"
                            },
                            "fallback": "00",
                            "docs": [
                                " The configuration for the current epoch. Should never be `None` as it is initialized in",
                                " genesis."
                            ]
                        },
                        {
                            "name": "NextEpochConfig",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "151"
                            },
                            "fallback": "00",
                            "docs": [
                                " The configuration for the next epoch, `None` if the config will not change",
                                " (you can fallback to `EpochConfig` instead in that case)."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "152"
                },
                "events": null,
                "constants": [
                    {
                        "name": "EpochDuration",
                        "type": "8",
                        "value": "6400000000000000",
                        "docs": [
                            " The amount of time, in slots, that each epoch should last.",
                            " NOTE: Currently it is not possible to change the epoch duration after",
                            " the chain has started. Attempting to do so will brick block production."
                        ]
                    },
                    {
                        "name": "ExpectedBlockTime",
                        "type": "8",
                        "value": "7017000000000000",
                        "docs": [
                            " The expected average block time at which BABE should be creating",
                            " blocks. Since BABE is probabilistic it is not trivial to figure out",
                            " what the expected average block time should be based on the slot",
                            " duration and the security parameter `c` (where `1 - c` represents",
                            " the probability of a slot being empty)."
                        ]
                    }
                ],
                "errors": {
                    "type": "157"
                },
                "index": 1
            },
            {
                "name": "Timestamp",
                "storage": {
                    "prefix": "Timestamp",
                    "items": [
                        {
                            "name": "Now",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " Current time for the current block."
                            ]
                        },
                        {
                            "name": "DidUpdate",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "76"
                            },
                            "fallback": "00",
                            "docs": [
                                " Did the timestamp get updated in this block?"
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "158"
                },
                "events": null,
                "constants": [
                    {
                        "name": "MinimumPeriod",
                        "type": "8",
                        "value": "b80b000000000000",
                        "docs": [
                            " The minimum period between blocks. Beware that this is different to the *expected*",
                            " period that the block production apparatus provides. Your chosen consensus system will",
                            " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
                            " double this period on default settings."
                        ]
                    }
                ],
                "errors": null,
                "index": 2
            },
            {
                "name": "Indices",
                "storage": {
                    "prefix": "Indices",
                    "items": [
                        {
                            "name": "Accounts",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "159"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The lookup from index to account."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "160"
                },
                "events": {
                    "type": "28"
                },
                "constants": [
                    {
                        "name": "Deposit",
                        "type": "6",
                        "value": "0010a5d4e80000000000000000000000",
                        "docs": [
                            " The deposit needed for reserving an index."
                        ]
                    }
                ],
                "errors": {
                    "type": "161"
                },
                "index": 3
            },
            {
                "name": "Balances",
                "storage": {
                    "prefix": "Balances",
                    "items": [
                        {
                            "name": "TotalIssuance",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "6"
                            },
                            "fallback": "00000000000000000000000000000000",
                            "docs": [
                                " The total units issued in the system."
                            ]
                        },
                        {
                            "name": "Account",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "5"
                                }
                            },
                            "fallback": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " The balance of an account.",
                                "",
                                " NOTE: This is only used in the case that this pallet is used to store balances."
                            ]
                        },
                        {
                            "name": "Locks",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "162"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Any liquidity locks on some account balances.",
                                " NOTE: Should only be accessed when setting, changing and freeing a lock."
                            ]
                        },
                        {
                            "name": "Reserves",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "166"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Named reserves on some account balances."
                            ]
                        },
                        {
                            "name": "StorageVersion",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "169"
                            },
                            "fallback": "00",
                            "docs": [
                                " Storage version of the pallet.",
                                "",
                                " This is set to v2.0.0 for new networks."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "170"
                },
                "events": {
                    "type": "29"
                },
                "constants": [
                    {
                        "name": "ExistentialDeposit",
                        "type": "6",
                        "value": "00e40b54020000000000000000000000",
                        "docs": [
                            " The minimum amount required to keep an account open."
                        ]
                    },
                    {
                        "name": "MaxLocks",
                        "type": "4",
                        "value": "32000000",
                        "docs": [
                            " The maximum number of locks that should exist on an account.",
                            " Not strictly enforced, but used for weight estimation."
                        ]
                    },
                    {
                        "name": "MaxReserves",
                        "type": "4",
                        "value": "32000000",
                        "docs": [
                            " The maximum number of named reserves that can exist on an account."
                        ]
                    }
                ],
                "errors": {
                    "type": "173"
                },
                "index": 4
            },
            {
                "name": "TransactionPayment",
                "storage": {
                    "prefix": "TransactionPayment",
                    "items": [
                        {
                            "name": "NextFeeMultiplier",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "174"
                            },
                            "fallback": "000064a7b3b6e00d0000000000000000",
                            "docs": []
                        },
                        {
                            "name": "StorageVersion",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "175"
                            },
                            "fallback": "00",
                            "docs": []
                        }
                    ]
                },
                "calls": null,
                "events": null,
                "constants": [
                    {
                        "name": "TransactionByteFee",
                        "type": "6",
                        "value": "00e1f505000000000000000000000000",
                        "docs": [
                            " The fee to be paid for making a transaction; the per-byte portion."
                        ]
                    },
                    {
                        "name": "WeightToFee",
                        "type": "176",
                        "value": "0408000000000000000000000000000000000000000001",
                        "docs": [
                            " The polynomial that is applied in order to derive fee from weight."
                        ]
                    }
                ],
                "errors": null,
                "index": 5
            },
            {
                "name": "Authorship",
                "storage": {
                    "prefix": "Authorship",
                    "items": [
                        {
                            "name": "Uncles",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "178"
                            },
                            "fallback": "00",
                            "docs": [
                                " Uncles"
                            ]
                        },
                        {
                            "name": "Author",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "0"
                            },
                            "fallback": "00",
                            "docs": [
                                " Author of current block."
                            ]
                        },
                        {
                            "name": "DidSetUncles",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "76"
                            },
                            "fallback": "00",
                            "docs": [
                                " Whether uncles were already set in this block."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "181"
                },
                "events": null,
                "constants": [
                    {
                        "name": "UncleGenerations",
                        "type": "4",
                        "value": "00000000",
                        "docs": [
                            " The number of blocks back we should accept uncles.",
                            " This means that we will deal with uncle-parents that are",
                            " `UncleGenerations + 1` before `now`."
                        ]
                    }
                ],
                "errors": {
                    "type": "183"
                },
                "index": 6
            },
            {
                "name": "Offences",
                "storage": {
                    "prefix": "Offences",
                    "items": [
                        {
                            "name": "Reports",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "9",
                                    "values_id": "184"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The primary structure that holds all offence records keyed by report identifiers."
                            ]
                        },
                        {
                            "name": "ConcurrentReportsIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "185",
                                    "values_id": "120"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " A vector of reports of the same kind that happened at the same time slot."
                            ]
                        },
                        {
                            "name": "ReportsByKindIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "32",
                                    "values_id": "10"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Enumerates all reports of a kind along with the time they happened.",
                                "",
                                " All reports are sorted by the time of offence.",
                                "",
                                " Note that the actual type of this mapping is `Vec<u8>`, this is because values of",
                                " different types are not supported at the moment so we are doing the manual serialization."
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": {
                    "type": "31"
                },
                "constants": [],
                "errors": null,
                "index": 7
            },
            {
                "name": "Historical",
                "storage": null,
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 8
            },
            {
                "name": "Session",
                "storage": {
                    "prefix": "Session",
                    "items": [
                        {
                            "name": "Validators",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "74"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current set of validators."
                            ]
                        },
                        {
                            "name": "CurrentIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " Current index of the session."
                            ]
                        },
                        {
                            "name": "QueuedChanged",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "76"
                            },
                            "fallback": "00",
                            "docs": [
                                " True if the underlying economic identities or weighting behind the validators",
                                " has changed in the queued validator set."
                            ]
                        },
                        {
                            "name": "QueuedKeys",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "186"
                            },
                            "fallback": "00",
                            "docs": [
                                " The queued keys for the next session. When the next session begins, these keys",
                                " will be used to determine the validator's session keys."
                            ]
                        },
                        {
                            "name": "DisabledValidators",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "195"
                            },
                            "fallback": "00",
                            "docs": [
                                " Indices of disabled validators.",
                                "",
                                " The set is cleared when `on_session_ending` returns a new set of identities."
                            ]
                        },
                        {
                            "name": "NextKeys",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "188"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The next session keys for a validator."
                            ]
                        },
                        {
                            "name": "KeyOwner",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "196",
                                    "values_id": "0"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "198"
                },
                "events": {
                    "type": "33"
                },
                "constants": [],
                "errors": {
                    "type": "199"
                },
                "index": 9
            },
            {
                "name": "Grandpa",
                "storage": {
                    "prefix": "Grandpa",
                    "items": [
                        {
                            "name": "State",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "200"
                            },
                            "fallback": "00",
                            "docs": [
                                " State of the current authority set."
                            ]
                        },
                        {
                            "name": "PendingChange",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "201"
                            },
                            "fallback": "00",
                            "docs": [
                                " Pending change: (signaled at, scheduled change)."
                            ]
                        },
                        {
                            "name": "NextForced",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00",
                            "docs": [
                                " next block number where we can force a change."
                            ]
                        },
                        {
                            "name": "Stalled",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "122"
                            },
                            "fallback": "00",
                            "docs": [
                                " `true` if we are currently stalled."
                            ]
                        },
                        {
                            "name": "CurrentSetId",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " The number of changes (both in terms of keys and underlying economic responsibilities)",
                                " in the \"set\" of Grandpa validators from genesis."
                            ]
                        },
                        {
                            "name": "SetIdSession",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "8",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " A mapping from grandpa set ID to the index of the *most recent* session for which its",
                                " members were responsible.",
                                "",
                                " TWOX-NOTE: `SetId` is not under user control."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "203"
                },
                "events": {
                    "type": "34"
                },
                "constants": [],
                "errors": {
                    "type": "214"
                },
                "index": 10
            },
            {
                "name": "ImOnline",
                "storage": {
                    "prefix": "ImOnline",
                    "items": [
                        {
                            "name": "HeartbeatAfter",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The block number after which it's ok to send heartbeats in the current",
                                " session.",
                                "",
                                " At the beginning of each session we set this to a value that should fall",
                                " roughly in the middle of the session duration. The idea is to first wait for",
                                " the validators to produce a block in the current session, so that the",
                                " heartbeat later on will not be necessary.",
                                "",
                                " This value will only be used as a fallback if we fail to get a proper session",
                                " progress estimate from `NextSessionRotation`, as those estimates should be",
                                " more accurate then the value we calculate for `HeartbeatAfter`."
                            ]
                        },
                        {
                            "name": "Keys",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "215"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current set of keys that may issue a heartbeat."
                            ]
                        },
                        {
                            "name": "ReceivedHeartbeats",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "122",
                                    "values_id": "10"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " For each session index, we keep a mapping of `AuthIndex` to",
                                " `offchain::OpaqueNetworkState`."
                            ]
                        },
                        {
                            "name": "AuthoredBlocks",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "216",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00000000",
                            "docs": [
                                " For each session index, we keep a mapping of `ValidatorId<T>` to the",
                                " number of blocks authored by the given authority."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "217"
                },
                "events": {
                    "type": "39"
                },
                "constants": [
                    {
                        "name": "UnsignedPriority",
                        "type": "8",
                        "value": "ffffffffffffffff",
                        "docs": [
                            " A configuration for base priority of unsigned transactions.",
                            "",
                            " This is exposed so that it can be tuned for particular runtime, when",
                            " multiple pallets send unsigned transactions."
                        ]
                    }
                ],
                "errors": {
                    "type": "224"
                },
                "index": 11
            },
            {
                "name": "AuthorityDiscovery",
                "storage": null,
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 12
            },
            {
                "name": "ParachainsOrigin",
                "storage": null,
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 13
            },
            {
                "name": "Configuration",
                "storage": {
                    "prefix": "Configuration",
                    "items": [
                        {
                            "name": "ActiveConfig",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "225"
                            },
                            "fallback": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000100000001000000000000000000060000006400000002000000c8000000010000000000000000000000000000000000000000c817a804000000",
                            "docs": [
                                " The active configuration for the current session."
                            ]
                        },
                        {
                            "name": "PendingConfig",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "225"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Pending configuration (if any) for the next session."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "226"
                },
                "events": null,
                "constants": [],
                "errors": {
                    "type": "227"
                },
                "index": 14
            },
            {
                "name": "ParasShared",
                "storage": {
                    "prefix": "ParasShared",
                    "items": [
                        {
                            "name": "CurrentSessionIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The current session index."
                            ]
                        },
                        {
                            "name": "ActiveValidatorIndices",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "228"
                            },
                            "fallback": "00",
                            "docs": [
                                " All the validators actively participating in parachain consensus.",
                                " Indices are into the broader validator set."
                            ]
                        },
                        {
                            "name": "ActiveValidatorKeys",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "230"
                            },
                            "fallback": "00",
                            "docs": [
                                " The parachain attestation keys of the validators actively participating in parachain consensus.",
                                " This should be the same length as `ActiveValidatorIndices`."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "231"
                },
                "events": null,
                "constants": [],
                "errors": null,
                "index": 15
            },
            {
                "name": "ParaInclusion",
                "storage": {
                    "prefix": "ParaInclusion",
                    "items": [
                        {
                            "name": "AvailabilityBitfields",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "229",
                                    "values_id": "232"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The latest bitfield for each validator, referred to by their index in the validator set."
                            ]
                        },
                        {
                            "name": "PendingAvailability",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "236"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Candidates pending availability by `ParaId`."
                            ]
                        },
                        {
                            "name": "PendingAvailabilityCommitments",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "237"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The commitments of candidates pending availability, by `ParaId`."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "242"
                },
                "events": {
                    "type": "45"
                },
                "constants": [],
                "errors": {
                    "type": "243"
                },
                "index": 16
            },
            {
                "name": "ParaInherent",
                "storage": {
                    "prefix": "ParaInherent",
                    "items": [
                        {
                            "name": "Included",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "44"
                            },
                            "fallback": "00",
                            "docs": [
                                " Whether the paras inherent was included within this block.",
                                "",
                                " The `Option<()>` is effectively a `bool`, but it never hits storage in the `None` variant",
                                " due to the guarantees of FRAME's storage APIs.",
                                "",
                                " If this is `None` at the end of the block, we panic and render the block invalid."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "244"
                },
                "events": null,
                "constants": [],
                "errors": {
                    "type": "261"
                },
                "index": 17
            },
            {
                "name": "ParaScheduler",
                "storage": {
                    "prefix": "ParaScheduler",
                    "items": [
                        {
                            "name": "ValidatorGroups",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "262"
                            },
                            "fallback": "00",
                            "docs": [
                                " All the validator groups. One for each core. Indices are into `ActiveValidators` - not the",
                                " broader set of Polkadot validators, but instead just the subset used for parachains during",
                                " this session.",
                                "",
                                " Bound: The number of cores is the sum of the numbers of parachains and parathread multiplexers.",
                                " Reasonably, 100-1000. The dominant factor is the number of validators: safe upper bound at 10k."
                            ]
                        },
                        {
                            "name": "ParathreadQueue",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "263"
                            },
                            "fallback": "0000000000",
                            "docs": [
                                " A queue of upcoming claims and which core they should be mapped onto.",
                                "",
                                " The number of queued claims is bounded at the `scheduling_lookahead`",
                                " multiplied by the number of parathread multiplexer cores. Reasonably, 10 * 50 = 500."
                            ]
                        },
                        {
                            "name": "AvailabilityCores",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "268"
                            },
                            "fallback": "00",
                            "docs": [
                                " One entry for each availability core. Entries are `None` if the core is not currently occupied. Can be",
                                " temporarily `Some` if scheduled but not occupied.",
                                " The i'th parachain belongs to the i'th core, with the remaining cores all being",
                                " parathread-multiplexers.",
                                "",
                                " Bounded by the maximum of either of these two values:",
                                "   * The number of parachains and parathread multiplexers",
                                "   * The number of validators divided by `configuration.max_validators_per_core`."
                            ]
                        },
                        {
                            "name": "ParathreadClaimIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "271"
                            },
                            "fallback": "00",
                            "docs": [
                                " An index used to ensure that only one claim on a parathread exists in the queue or is",
                                " currently being handled by an occupied core.",
                                "",
                                " Bounded by the number of parathread cores and scheduling lookahead. Reasonably, 10 * 50 = 500."
                            ]
                        },
                        {
                            "name": "SessionStartBlock",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The block number where the session start occurred. Used to track how many group rotations have occurred.",
                                "",
                                " Note that in the context of parachains modules the session change is signaled during",
                                " the block and enacted at the end of the block (at the finalization stage, to be exact).",
                                " Thus for all intents and purposes the effect of the session change is observed at the",
                                " block following the session change, block number of which we save in this storage value."
                            ]
                        },
                        {
                            "name": "Scheduled",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "272"
                            },
                            "fallback": "00",
                            "docs": [
                                " Currently scheduled cores - free but up to be occupied.",
                                "",
                                " Bounded by the number of cores: one for each parachain and parathread multiplexer.",
                                "",
                                " The value contained here will not be valid after the end of a block. Runtime APIs should be used to determine scheduled cores\/",
                                " for the upcoming block."
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 18
            },
            {
                "name": "Paras",
                "storage": {
                    "prefix": "Paras",
                    "items": [
                        {
                            "name": "Parachains",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "271"
                            },
                            "fallback": "00",
                            "docs": [
                                " All parachains. Ordered ascending by `ParaId`. Parathreads are not included."
                            ]
                        },
                        {
                            "name": "ParaLifecycles",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "275"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The current lifecycle of a all known Para IDs."
                            ]
                        },
                        {
                            "name": "Heads",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "54"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The head-data of every registered para."
                            ]
                        },
                        {
                            "name": "CurrentCodeHash",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "53"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The validation code hash of every live para.",
                                "",
                                " Corresponding code can be retrieved with [`CodeByHash`]."
                            ]
                        },
                        {
                            "name": "PastCodeHash",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "276",
                                    "values_id": "53"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Actual past code hash, indicated by the para id as well as the block number at which it",
                                " became outdated.",
                                "",
                                " Corresponding code can be retrieved with [`CodeByHash`]."
                            ]
                        },
                        {
                            "name": "PastCodeMeta",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "277"
                                }
                            },
                            "fallback": "0000",
                            "docs": [
                                " Past code of parachains. The parachains themselves may not be registered anymore,",
                                " but we also keep their code on-chain for the same amount of time as outdated code",
                                " to keep it available for secondary checkers."
                            ]
                        },
                        {
                            "name": "PastCodePruning",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "280"
                            },
                            "fallback": "00",
                            "docs": [
                                " Which paras have past code that needs pruning and the relay-chain block at which the code was replaced.",
                                " Note that this is the actual height of the included block, not the expected height at which the",
                                " code upgrade would be applied, although they may be equal.",
                                " This is to ensure the entire acceptance period is covered, not an offset acceptance period starting",
                                " from the time at which the parachain perceives a code upgrade as having occurred.",
                                " Multiple entries for a single para are permitted. Ordered ascending by block number."
                            ]
                        },
                        {
                            "name": "FutureCodeUpgrades",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The block number at which the planned code change is expected for a para.",
                                " The change will be applied after the first parablock for this ID included which executes",
                                " in the context of a relay chain block with a number >= `expected_at`."
                            ]
                        },
                        {
                            "name": "FutureCodeHash",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "53"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The actual future code hash of a para.",
                                "",
                                " Corresponding code can be retrieved with [`CodeByHash`]."
                            ]
                        },
                        {
                            "name": "UpgradeGoAheadSignal",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "281"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade procedure.",
                                "",
                                " This value is absent when there are no upgrades scheduled or during the time the relay chain",
                                " performs the checks. It is set at the first relay-chain block when the corresponding parachain",
                                " can switch its upgrade function. As soon as the parachain's block is included, the value",
                                " gets reset to `None`.",
                                "",
                                " NOTE that this field is used by parachains via merkle storage proofs, therefore changing",
                                " the format will require migration of parachains."
                            ]
                        },
                        {
                            "name": "UpgradeRestrictionSignal",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "282"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " This is used by the relay-chain to communicate that there are restrictions for performing",
                                " an upgrade for this parachain.",
                                "",
                                " This may be a because the parachain waits for the upgrade cooldown to expire. Another",
                                " potential use case is when we want to perform some maintenance (such as storage migration)",
                                " we could restrict upgrades to make the process simpler.",
                                "",
                                " NOTE that this field is used by parachains via merkle storage proofs, therefore changing",
                                " the format will require migration of parachains."
                            ]
                        },
                        {
                            "name": "UpgradeCooldowns",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "280"
                            },
                            "fallback": "00",
                            "docs": [
                                " The list of parachains that are awaiting for their upgrade restriction to cooldown.",
                                "",
                                " Ordered ascending by block number."
                            ]
                        },
                        {
                            "name": "UpcomingUpgrades",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "280"
                            },
                            "fallback": "00",
                            "docs": [
                                " The list of upcoming code upgrades. Each item is a pair of which para performs a code",
                                " upgrade and at which relay-chain block it is expected at.",
                                "",
                                " Ordered ascending by block number."
                            ]
                        },
                        {
                            "name": "ActionsQueue",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "271"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The actions to perform during the start of a specific session index."
                            ]
                        },
                        {
                            "name": "UpcomingParasGenesis",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "283"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Upcoming paras instantiation arguments."
                            ]
                        },
                        {
                            "name": "CodeByHashRefs",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "53",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The number of reference on the validation code in [`CodeByHash`] storage."
                            ]
                        },
                        {
                            "name": "CodeByHash",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "53",
                                    "values_id": "241"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Validation code stored by its hash.",
                                "",
                                " This storage is consistent with [`FutureCodeHash`], [`CurrentCodeHash`] and",
                                " [`PastCodeHash`]."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "284"
                },
                "events": {
                    "type": "57"
                },
                "constants": [],
                "errors": {
                    "type": "285"
                },
                "index": 19
            },
            {
                "name": "Initializer",
                "storage": {
                    "prefix": "Initializer",
                    "items": [
                        {
                            "name": "HasInitialized",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "44"
                            },
                            "fallback": "00",
                            "docs": [
                                " Whether the parachains modules have been initialized within this block.",
                                "",
                                " Semantically a `bool`, but this guarantees it should never hit the trie,",
                                " as this is cleared in `on_finalize` and Frame optimizes `None` values to be empty values.",
                                "",
                                " As a `bool`, `set(false)` and `remove()` both lead to the next `get()` being false, but one of",
                                " them writes to the trie and one does not. This confusion makes `Option<()>` more suitable for",
                                " the semantics of this variable."
                            ]
                        },
                        {
                            "name": "BufferedSessionChanges",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "286"
                            },
                            "fallback": "00",
                            "docs": [
                                " Buffered session changes along with the block number at which they should be applied.",
                                "",
                                " Typically this will be empty or one element long. Apart from that this item never hits",
                                " the storage.",
                                "",
                                " However this is a `Vec` regardless to handle various edge cases that may occur at runtime",
                                " upgrade boundaries or if governance intervenes."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "288"
                },
                "events": null,
                "constants": [],
                "errors": null,
                "index": 20
            },
            {
                "name": "Dmp",
                "storage": {
                    "prefix": "Dmp",
                    "items": [
                        {
                            "name": "DownwardMessageQueues",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "289"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The downward messages addressed for a certain para."
                            ]
                        },
                        {
                            "name": "DownwardMessageQueueHeads",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "9"
                                }
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " A mapping that stores the downward message queue MQC head for each para.",
                                "",
                                " Each link in this chain has a form:",
                                " `(prev_head, B, H(M))`, where",
                                " - `prev_head`: is the previous head hash or zero if none.",
                                " - `B`: is the relay-chain block number in which a message was appended.",
                                " - `H(M)`: is the hash of the message being appended."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "291"
                },
                "events": null,
                "constants": [],
                "errors": null,
                "index": 21
            },
            {
                "name": "Ump",
                "storage": {
                    "prefix": "Ump",
                    "items": [
                        {
                            "name": "RelayDispatchQueues",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "129"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The messages waiting to be handled by the relay-chain originating from a certain parachain.",
                                "",
                                " Note that some upward messages might have been already processed by the inclusion logic. E.g.",
                                " channel management messages.",
                                "",
                                " The messages are processed in FIFO order."
                            ]
                        },
                        {
                            "name": "RelayDispatchQueueSize",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "122"
                                }
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " Size of the dispatch queues. Caches sizes of the queues in `RelayDispatchQueue`.",
                                "",
                                " First item in the tuple is the count of messages and second",
                                " is the total length (in bytes) of the message payloads.",
                                "",
                                " Note that this is an auxiliary mapping: it's possible to tell the byte size and the number of",
                                " messages only looking at `RelayDispatchQueues`. This mapping is separate to avoid the cost of",
                                " loading the whole message queue if only the total size and count are required.",
                                "",
                                " Invariant:",
                                " - The set of keys should exactly match the set of keys of `RelayDispatchQueues`."
                            ]
                        },
                        {
                            "name": "NeedsDispatch",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "271"
                            },
                            "fallback": "00",
                            "docs": [
                                " The ordered list of `ParaId`s that have a `RelayDispatchQueue` entry.",
                                "",
                                " Invariant:",
                                " - The set of items from this vector should be exactly the set of the keys in",
                                "   `RelayDispatchQueues` and `RelayDispatchQueueSize`."
                            ]
                        },
                        {
                            "name": "NextDispatchRoundStartWith",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "48"
                            },
                            "fallback": "00",
                            "docs": [
                                " This is the para that gets will get dispatched first during the next upward dispatchable queue",
                                " execution round.",
                                "",
                                " Invariant:",
                                " - If `Some(para)`, then `para` must be present in `NeedsDispatch`."
                            ]
                        },
                        {
                            "name": "Overweight",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "8",
                                    "values_id": "292"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The messages that exceeded max individual message weight budget.",
                                "",
                                " These messages stay there until manually dispatched."
                            ]
                        },
                        {
                            "name": "OverweightCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " The number of overweight messages ever recorded in `Overweight` (and thus the lowest free",
                                " index)."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "293"
                },
                "events": {
                    "type": "58"
                },
                "constants": [],
                "errors": {
                    "type": "294"
                },
                "index": 22
            },
            {
                "name": "Hrmp",
                "storage": {
                    "prefix": "Hrmp",
                    "items": [
                        {
                            "name": "HrmpOpenChannelRequests",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "62",
                                    "values_id": "295"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The set of pending HRMP open channel requests.",
                                "",
                                " The set is accompanied by a list for iteration.",
                                "",
                                " Invariant:",
                                " - There are no channels that exists in list but not in the set and vice versa."
                            ]
                        },
                        {
                            "name": "HrmpOpenChannelRequestsList",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "296"
                            },
                            "fallback": "00",
                            "docs": []
                        },
                        {
                            "name": "HrmpOpenChannelRequestCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00000000",
                            "docs": [
                                " This mapping tracks how many open channel requests are initiated by a given sender para.",
                                " Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has `(X, _)`",
                                " as the number of `HrmpOpenChannelRequestCount` for `X`."
                            ]
                        },
                        {
                            "name": "HrmpAcceptedChannelRequestCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00000000",
                            "docs": [
                                " This mapping tracks how many open channel requests were accepted by a given recipient para.",
                                " Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with",
                                " `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`."
                            ]
                        },
                        {
                            "name": "HrmpCloseChannelRequests",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "62",
                                    "values_id": "44"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " A set of pending HRMP close channel requests that are going to be closed during the session change.",
                                " Used for checking if a given channel is registered for closure.",
                                "",
                                " The set is accompanied by a list for iteration.",
                                "",
                                " Invariant:",
                                " - There are no channels that exists in list but not in the set and vice versa."
                            ]
                        },
                        {
                            "name": "HrmpCloseChannelRequestsList",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "296"
                            },
                            "fallback": "00",
                            "docs": []
                        },
                        {
                            "name": "HrmpWatermarks",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The HRMP watermark associated with each para.",
                                " Invariant:",
                                " - each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session."
                            ]
                        },
                        {
                            "name": "HrmpChannels",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "62",
                                    "values_id": "297"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " HRMP channel data associated with each para.",
                                " Invariant:",
                                " - each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session."
                            ]
                        },
                        {
                            "name": "HrmpIngressChannelsIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "271"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Ingress\/egress indexes allow to find all the senders and receivers given the opposite",
                                " side. I.e.",
                                "",
                                " (a) ingress index allows to find all the senders for a given recipient.",
                                " (b) egress index allows to find all the recipients for a given sender.",
                                "",
                                " Invariants:",
                                " - for each ingress index entry for `P` each item `I` in the index should present in `HrmpChannels`",
                                "   as `(I, P)`.",
                                " - for each egress index entry for `P` each item `E` in the index should present in `HrmpChannels`",
                                "   as `(P, E)`.",
                                " - there should be no other dangling channels in `HrmpChannels`.",
                                " - the vectors are sorted."
                            ]
                        },
                        {
                            "name": "HrmpEgressChannelsIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "271"
                                }
                            },
                            "fallback": "00",
                            "docs": []
                        },
                        {
                            "name": "HrmpChannelContents",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "62",
                                    "values_id": "299"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Storage for the messages for each channel.",
                                " Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`."
                            ]
                        },
                        {
                            "name": "HrmpChannelDigests",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "301"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Maintains a mapping that can be used to answer the question:",
                                " What paras sent a message at the given block number for a given receiver.",
                                " Invariants:",
                                " - The inner `Vec<ParaId>` is never empty.",
                                " - The inner `Vec<ParaId>` cannot store two same `ParaId`.",
                                " - The outer vector is sorted ascending by block number and cannot store two items with the same",
                                "   block number."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "303"
                },
                "events": {
                    "type": "61"
                },
                "constants": [],
                "errors": {
                    "type": "304"
                },
                "index": 23
            },
            {
                "name": "ParaSessionInfo",
                "storage": {
                    "prefix": "ParaSessionInfo",
                    "items": [
                        {
                            "name": "AssignmentKeysUnsafe",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "305"
                            },
                            "fallback": "00",
                            "docs": [
                                " Assignment keys for the current session.",
                                " Note that this API is private due to it being prone to 'off-by-one' at session boundaries.",
                                " When in doubt, use `Sessions` API instead."
                            ]
                        },
                        {
                            "name": "EarliestStoredSession",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The earliest session for which previous session info is stored."
                            ]
                        },
                        {
                            "name": "Sessions",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "306"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Session information in a rolling window.",
                                " Should have an entry in range `EarliestStoredSession..=CurrentSessionIndex`.",
                                " Does not have any entries before the session index in the first session change notification."
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 24
            },
            {
                "name": "ParasDisputes",
                "storage": {
                    "prefix": "ParasDisputes",
                    "items": [
                        {
                            "name": "LastPrunedSession",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00",
                            "docs": [
                                " The last pruned session, if any. All data stored by this module",
                                " references sessions."
                            ]
                        },
                        {
                            "name": "Disputes",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "308",
                                    "values_id": "309"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " All ongoing or concluded disputes for the last several sessions."
                            ]
                        },
                        {
                            "name": "Included",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "308",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " All included blocks on the chain, as well as the block number in this chain that",
                                " should be reverted back to if the candidate is disputed and determined to be invalid."
                            ]
                        },
                        {
                            "name": "SpamSlots",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "195"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Maps session indices to a vector indicating the number of potentially-spam disputes",
                                " each validator is participating in. Potentially-spam disputes are remote disputes which have",
                                " fewer than `byzantine_threshold + 1` validators.",
                                "",
                                " The i'th entry of the vector corresponds to the i'th validator in the session."
                            ]
                        },
                        {
                            "name": "Frozen",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "202"
                            },
                            "fallback": "00",
                            "docs": [
                                " Whether the chain is frozen. Starts as `None`. When this is `Some`,",
                                " the chain will not accept any new parachain blocks for backing or inclusion,",
                                " and its value indicates the last valid block number in the chain.",
                                " It can only be set back to `None` by governance intervention."
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": {
                    "type": "63"
                },
                "constants": [],
                "errors": {
                    "type": "310"
                },
                "index": 25
            },
            {
                "name": "Registrar",
                "storage": {
                    "prefix": "Registrar",
                    "items": [
                        {
                            "name": "PendingSwap",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "48"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Pending swap operations."
                            ]
                        },
                        {
                            "name": "Paras",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "311"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Amount held on deposit for each para and the original depositor.",
                                "",
                                " The given account ID is responsible for registering the code and initial head data, but may only do",
                                " so if it isn't yet registered. (After that, it's up to governance to do so.)"
                            ]
                        },
                        {
                            "name": "NextFreeParaId",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "48"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The next free `ParaId`."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "312"
                },
                "events": {
                    "type": "67"
                },
                "constants": [
                    {
                        "name": "ParaDeposit",
                        "type": "6",
                        "value": "005039278c0400000000000000000000",
                        "docs": [
                            " The deposit to be paid to run a parathread.",
                            " This should include the cost for storing the genesis head and validation code."
                        ]
                    },
                    {
                        "name": "DataDepositPerByte",
                        "type": "6",
                        "value": "80f0fa02000000000000000000000000",
                        "docs": [
                            " The deposit to be paid per byte stored on chain."
                        ]
                    }
                ],
                "errors": {
                    "type": "313"
                },
                "index": 26
            },
            {
                "name": "Auctions",
                "storage": {
                    "prefix": "Auctions",
                    "items": [
                        {
                            "name": "AuctionCounter",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " Number of auctions started so far."
                            ]
                        },
                        {
                            "name": "AuctionInfo",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "122"
                            },
                            "fallback": "00",
                            "docs": [
                                " Information relating to the current auction, if there is one.",
                                "",
                                " The first item in the tuple is the lease period index that the first of the four",
                                " contiguous lease periods on auction is for. The second is the block number when the",
                                " auction will \"begin to end\", i.e. the first block of the Ending Period of the auction."
                            ]
                        },
                        {
                            "name": "ReservedAmounts",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "314",
                                    "values_id": "6"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Amounts currently reserved in the accounts of the bidders currently winning",
                                " (sub-)ranges."
                            ]
                        },
                        {
                            "name": "Winning",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "4",
                                    "values_id": "315"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The winning bids for each of the 10 ranges at each sample in the final Ending Period of",
                                " the current auction. The map's key is the 0-based index into the Sample Size. The",
                                " first sample of the ending period is 0; the last is `Sample Size - 1`."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "318"
                },
                "events": {
                    "type": "68"
                },
                "constants": [
                    {
                        "name": "EndingPeriod",
                        "type": "4",
                        "value": "58020000",
                        "docs": [
                            " The number of blocks over which an auction may be retroactively ended."
                        ]
                    },
                    {
                        "name": "SampleLength",
                        "type": "4",
                        "value": "01000000",
                        "docs": [
                            " The length of each sample to take during the ending period.",
                            "",
                            " `EndingPeriod` \/ `SampleLength` = Total # of Samples"
                        ]
                    },
                    {
                        "name": "SlotRangeCount",
                        "type": "4",
                        "value": "24000000",
                        "docs": []
                    },
                    {
                        "name": "LeasePeriodsPerSlot",
                        "type": "4",
                        "value": "08000000",
                        "docs": []
                    }
                ],
                "errors": {
                    "type": "320"
                },
                "index": 27
            },
            {
                "name": "Crowdloan",
                "storage": {
                    "prefix": "Crowdloan",
                    "items": [
                        {
                            "name": "Funds",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "321"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Info on all of the funds."
                            ]
                        },
                        {
                            "name": "NewRaise",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "271"
                            },
                            "fallback": "00",
                            "docs": [
                                " The funds that have had additional contributions during the last block. This is used",
                                " in order to determine which funds should submit new or updated bids."
                            ]
                        },
                        {
                            "name": "EndingsCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The number of auctions that have entered into their ending period so far."
                            ]
                        },
                        {
                            "name": "NextTrieIndex",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " Tracker for the next available trie index"
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "325"
                },
                "events": {
                    "type": "69"
                },
                "constants": [
                    {
                        "name": "PalletId",
                        "type": "330",
                        "value": "70792f6366756e64",
                        "docs": [
                            " `PalletId` for the crowdloan pallet. An appropriate value could be `PalletId(*b\"py\/cfund\")`"
                        ]
                    },
                    {
                        "name": "MinContribution",
                        "type": "6",
                        "value": "0010a5d4e80000000000000000000000",
                        "docs": [
                            " The minimum amount that may be contributed into a crowdloan. Should almost certainly be at",
                            " least `ExistentialDeposit`."
                        ]
                    },
                    {
                        "name": "RemoveKeysLimit",
                        "type": "4",
                        "value": "f4010000",
                        "docs": [
                            " Max number of storage keys to remove per extrinsic call."
                        ]
                    }
                ],
                "errors": {
                    "type": "331"
                },
                "index": 28
            },
            {
                "name": "Slots",
                "storage": {
                    "prefix": "Slots",
                    "items": [
                        {
                            "name": "Leases",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "48",
                                    "values_id": "332"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Amounts held on deposit for each (possibly future) leased parachain.",
                                "",
                                " The actual amount locked on its behalf by any account at any time is the maximum of the second values",
                                " of the items in this list whose first value is the account.",
                                "",
                                " The first item in the list is the amount locked for the current Lease Period. Following",
                                " items are for the subsequent lease periods.",
                                "",
                                " The default value (an empty list) implies that the parachain no longer exists (or never",
                                " existed) as far as this pallet is concerned.",
                                "",
                                " If a parachain doesn't exist *yet* but is scheduled to exist in the future, then it",
                                " will be left-padded with one or more `None`s to denote the fact that nothing is held on",
                                " deposit for the non-existent chain currently, but is held at some point in the future.",
                                "",
                                " It is illegal for a `None` value to trail in the list."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "335"
                },
                "events": {
                    "type": "71"
                },
                "constants": [
                    {
                        "name": "LeasePeriod",
                        "type": "4",
                        "value": "40380000",
                        "docs": [
                            " The number of blocks over which a single period lasts."
                        ]
                    }
                ],
                "errors": {
                    "type": "336"
                },
                "index": 29
            },
            {
                "name": "ParasSudoWrapper",
                "storage": null,
                "calls": {
                    "type": "337"
                },
                "events": null,
                "constants": [],
                "errors": {
                    "type": "349"
                },
                "index": 30
            },
            {
                "name": "Sudo",
                "storage": {
                    "prefix": "Sudo",
                    "items": [
                        {
                            "name": "Key",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "0"
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " The `AccountId` of the sudo key."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "350"
                },
                "events": {
                    "type": "72"
                },
                "constants": [],
                "errors": {
                    "type": "373"
                },
                "index": 31
            },
            {
                "name": "Mmr",
                "storage": {
                    "prefix": "Mmr",
                    "items": [
                        {
                            "name": "RootHash",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "9"
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " Latest MMR Root hash."
                            ]
                        },
                        {
                            "name": "NumberOfLeaves",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " Current size of the MMR (number of leaves)."
                            ]
                        },
                        {
                            "name": "Nodes",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "8",
                                    "values_id": "9"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Hashes of the nodes in the MMR.",
                                "",
                                " Note this collection only contains MMR peaks, the inner nodes (and leaves)",
                                " are pruned and only stored in the Offchain DB."
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 32
            },
            {
                "name": "Beefy",
                "storage": {
                    "prefix": "Beefy",
                    "items": [
                        {
                            "name": "Authorities",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "374"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current authorities set"
                            ]
                        },
                        {
                            "name": "ValidatorSetId",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " The current validator set id"
                            ]
                        },
                        {
                            "name": "NextAuthorities",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "374"
                            },
                            "fallback": "00",
                            "docs": [
                                " Authorities set scheduled to be used with the next session"
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 33
            },
            {
                "name": "MmrLeaf",
                "storage": {
                    "prefix": "MmrLeaf",
                    "items": [
                        {
                            "name": "BeefyNextAuthorities",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "375"
                            },
                            "fallback": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                            "docs": [
                                " Details of next BEEFY authority set.",
                                "",
                                " This storage entry is used as cache for calls to [`update_beefy_next_authority_set`]."
                            ]
                        }
                    ]
                },
                "calls": null,
                "events": null,
                "constants": [],
                "errors": null,
                "index": 34
            },
            {
                "name": "ValidatorManager",
                "storage": {
                    "prefix": "ParachainProposer",
                    "items": [
                        {
                            "name": "ValidatorsToRetire",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "74"
                            },
                            "fallback": "00",
                            "docs": [
                                " Validators that should be retired, because their Parachain was deregistered."
                            ]
                        },
                        {
                            "name": "ValidatorsToAdd",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "74"
                            },
                            "fallback": "00",
                            "docs": [
                                " Validators that should be added."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "352"
                },
                "events": {
                    "type": "73"
                },
                "constants": [],
                "errors": {
                    "type": "376"
                },
                "index": 35
            },
            {
                "name": "Collective",
                "storage": {
                    "prefix": "Collective",
                    "items": [
                        {
                            "name": "Proposals",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "377"
                            },
                            "fallback": "00",
                            "docs": [
                                " The hashes of the active proposals."
                            ]
                        },
                        {
                            "name": "ProposalOf",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "9",
                                    "values_id": "351"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Actual proposal for a given hash, if it's current."
                            ]
                        },
                        {
                            "name": "Voting",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "9",
                                    "values_id": "378"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Votes on a given proposal, if it is ongoing."
                            ]
                        },
                        {
                            "name": "ProposalCount",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00000000",
                            "docs": [
                                " Proposals so far."
                            ]
                        },
                        {
                            "name": "Members",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "74"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current members of the collective. This is stored sorted (just by value)."
                            ]
                        },
                        {
                            "name": "Prime",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "0"
                            },
                            "fallback": "00",
                            "docs": [
                                " The prime member that helps determine the default vote behavior in case of absentations."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "353"
                },
                "events": {
                    "type": "75"
                },
                "constants": [],
                "errors": {
                    "type": "379"
                },
                "index": 80
            },
            {
                "name": "Membership",
                "storage": {
                    "prefix": "Membership",
                    "items": [
                        {
                            "name": "Members",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "74"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current membership, stored as an ordered Vec."
                            ]
                        },
                        {
                            "name": "Prime",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "0"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current prime member, if one exists."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "354"
                },
                "events": {
                    "type": "77"
                },
                "constants": [],
                "errors": {
                    "type": "380"
                },
                "index": 81
            },
            {
                "name": "Utility",
                "storage": null,
                "calls": {
                    "type": "355"
                },
                "events": {
                    "type": "78"
                },
                "constants": [
                    {
                        "name": "batched_calls_limit",
                        "type": "4",
                        "value": "2cb00000",
                        "docs": [
                            " The limit on the number of batched calls."
                        ]
                    }
                ],
                "errors": {
                    "type": "381"
                },
                "index": 90
            },
            {
                "name": "Proxy",
                "storage": {
                    "prefix": "Proxy",
                    "items": [
                        {
                            "name": "Proxies",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "382"
                                }
                            },
                            "fallback": "0000000000000000000000000000000000",
                            "docs": [
                                " The set of account proxies. Maps the account which has delegated to the accounts",
                                " which are being delegated to, together with the amount held on deposit."
                            ]
                        },
                        {
                            "name": "Announcements",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat"
                                    ],
                                    "keys_id": "0",
                                    "values_id": "386"
                                }
                            },
                            "fallback": "0000000000000000000000000000000000",
                            "docs": [
                                " The announcements made by the proxy (key)."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "357"
                },
                "events": {
                    "type": "79"
                },
                "constants": [
                    {
                        "name": "ProxyDepositBase",
                        "type": "6",
                        "value": "0a000000000000000000000000000000",
                        "docs": [
                            " The base amount of currency needed to reserve for creating a proxy.",
                            "",
                            " This is held for an additional storage item whose value size is",
                            " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
                        ]
                    },
                    {
                        "name": "ProxyDepositFactor",
                        "type": "6",
                        "value": "0a000000000000000000000000000000",
                        "docs": [
                            " The amount of currency needed per proxy added.",
                            "",
                            " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                            " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                            " into account `32 + proxy_type.encode().len()` bytes of data."
                        ]
                    },
                    {
                        "name": "MaxProxies",
                        "type": "4",
                        "value": "20000000",
                        "docs": [
                            " The maximum amount of proxies allowed for a single account."
                        ]
                    },
                    {
                        "name": "MaxPending",
                        "type": "4",
                        "value": "20000000",
                        "docs": [
                            " The maximum amount of time-delayed announcements that are allowed to be pending."
                        ]
                    },
                    {
                        "name": "AnnouncementDepositBase",
                        "type": "6",
                        "value": "0a000000000000000000000000000000",
                        "docs": [
                            " The base amount of currency needed to reserve for creating an announcement.",
                            "",
                            " This is held when a new storage item holding a `Balance` is created (typically 16",
                            " bytes)."
                        ]
                    },
                    {
                        "name": "AnnouncementDepositFactor",
                        "type": "6",
                        "value": "0a000000000000000000000000000000",
                        "docs": [
                            " The amount of currency needed per announcement made.",
                            "",
                            " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                            " into a pre-existing storage value."
                        ]
                    }
                ],
                "errors": {
                    "type": "390"
                },
                "index": 91
            },
            {
                "name": "XcmPallet",
                "storage": {
                    "prefix": "XcmPallet",
                    "items": [
                        {
                            "name": "QueryCounter",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "8"
                            },
                            "fallback": "0000000000000000",
                            "docs": [
                                " The latest available query index."
                            ]
                        },
                        {
                            "name": "Queries",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "8",
                                    "values_id": "391"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The ongoing queries."
                            ]
                        },
                        {
                            "name": "AssetTraps",
                            "modifier": "Default",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Identity"
                                    ],
                                    "keys_id": "9",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00000000",
                            "docs": [
                                " The existing asset traps.",
                                "",
                                " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                                " times this pair has been trapped (usually just 1 if it exists at all)."
                            ]
                        },
                        {
                            "name": "SafeXcmVersion",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "4"
                            },
                            "fallback": "00",
                            "docs": [
                                " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                                " then the destinations whose XCM version is unknown are considered unreachable."
                            ]
                        },
                        {
                            "name": "SupportedVersion",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "395",
                                    "values_id": "4"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " Latest versions that we know various locations support."
                            ]
                        },
                        {
                            "name": "VersionNotifiers",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "395",
                                    "values_id": "8"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " All locations that we have requested version notifications from."
                            ]
                        },
                        {
                            "name": "VersionNotifyTargets",
                            "modifier": "Optional",
                            "type": {
                                "origin": "Map",
                                "MapType": {
                                    "hashers": [
                                        "Twox64Concat",
                                        "Blake2_128Concat"
                                    ],
                                    "keys_id": "395",
                                    "values_id": "396"
                                }
                            },
                            "fallback": "00",
                            "docs": [
                                " The target locations that are subscribed to our version changes, as well as the most recent",
                                " of our versions we informed them of."
                            ]
                        },
                        {
                            "name": "VersionDiscoveryQueue",
                            "modifier": "Default",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "397"
                            },
                            "fallback": "00",
                            "docs": [
                                " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                                " the `u32` counter is the number of times that a send to the destination has been attempted,",
                                " which is used as a prioritization."
                            ]
                        },
                        {
                            "name": "CurrentMigration",
                            "modifier": "Optional",
                            "type": {
                                "origin": "PlainType",
                                "plain_type_id": "400"
                            },
                            "fallback": "00",
                            "docs": [
                                " The current migration's stage, if any."
                            ]
                        }
                    ]
                },
                "calls": {
                    "type": "359"
                },
                "events": {
                    "type": "82"
                },
                "constants": [],
                "errors": {
                    "type": "402"
                },
                "index": 99
            }
        ],
        "extrinsic": {
            "type": "403",
            "version": 4,
            "signedExtensions": [
                {
                    "identifier": "CheckSpecVersion",
                    "type": "405",
                    "additionalSigned": "4"
                },
                {
                    "identifier": "CheckTxVersion",
                    "type": "406",
                    "additionalSigned": "4"
                },
                {
                    "identifier": "CheckGenesis",
                    "type": "407",
                    "additionalSigned": "9"
                },
                {
                    "identifier": "CheckMortality",
                    "type": "408",
                    "additionalSigned": "9"
                },
                {
                    "identifier": "CheckNonce",
                    "type": "410",
                    "additionalSigned": "44"
                },
                {
                    "identifier": "CheckWeight",
                    "type": "411",
                    "additionalSigned": "44"
                },
                {
                    "identifier": "ChargeTransactionPayment",
                    "type": "412",
                    "additionalSigned": "44"
                }
            ]
        }
    },
    "magicNumber": 1635018093,
    "metadata_version": "14"
}